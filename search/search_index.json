{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BTS CIEL Immac' 2024 - 25","text":""},{"location":"bts-1/10-premiers-pas-en-c/","title":"01 - Premiers pas en C","text":""},{"location":"bts-1/10-premiers-pas-en-c/#les-entiers","title":"Les entiers","text":""},{"location":"bts-1/10-premiers-pas-en-c/#declarer-une-variable","title":"D\u00e9clarer une variable","text":"<ul> <li>D\u00e9clarer un entier nomm\u00e9 <code>a</code>.</li> </ul> Correction <pre><code>int a;\n</code></pre> <ul> <li>D\u00e9clarer un entier nomm\u00e9 <code>jeSuisUnEntier</code>.</li> </ul> Correction <pre><code>int jeSuisUnEntier;\n</code></pre> <ul> <li>D\u00e9clarer trois entiers <code>x</code>, <code>y</code> et <code>z</code>.</li> </ul> Correction <pre><code>int x, y, z;\n</code></pre>"},{"location":"bts-1/10-premiers-pas-en-c/#differents-types-dentiers","title":"Diff\u00e9rents types d\u2019entiers","text":"<ul> <li>D\u00e9clarer un entier <code>int4Bytes</code> sur 4 octets.</li> </ul> Correction <pre><code>int int4Bytes;\n</code></pre> <ul> <li>D\u00e9clarer un entier <code>int2Bytes</code> sur 2 octets.</li> </ul> Correction <pre><code>short int2Bytes;\n</code></pre> <ul> <li>D\u00e9clarer un entier <code>int1Byte</code> sur 1 octet.</li> </ul> Correction <pre><code>char int1Byte;\n</code></pre> <ul> <li>Commenter chaque d\u00e9claration en notant la taille allou\u00e9e.</li> </ul> Correction <pre><code>// Un entier sur 4 octets\nint int4Bytes;\n\n/* Un entier sur 2 octets */\nshort int2Bytes;\n\n/*\nUn \n    entier \n        sur \n            1 \n                octet\n*/\nchar int1Byte;\n</code></pre>"},{"location":"bts-1/10-premiers-pas-en-c/#affecter-une-valeur-a-une-variable","title":"Affecter une valeur \u00e0 une variable","text":"<ul> <li> <p>D\u00e9clarer les entiers suivants en utilisant le type ad\u00e9quat :</p> <ul> <li><code>base10</code> et lui affecter la valeur <code>234</code>.</li> </ul> Correction <pre><code>int base10;\nbase10 = 234;\n</code></pre> <ul> <li><code>base16</code> et lui affecter la valeur <code>2F</code></li> </ul> Correction <pre><code>int base16;\nbase16 = 0x2F; // 0x permet de sp\u00e9cifier une valeur en h\u00e9xad\u00e9cimal \n</code></pre> <ul> <li><code>negatif</code> et lui affecter la valeur <code>-1234567</code></li> </ul> Correction <pre><code>int negatif;\nnegatif = -1234567;\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#afficher-le-contenu-dune-variable","title":"Afficher le contenu d\u2019une variable","text":"<ul> <li> <p>Afficher les valeurs des variables <code>base10</code>, <code>base16</code> et <code>negatif</code> pr\u00e9demment cr\u00e9\u00e9es des mani\u00e8res suivantes :</p> <ul> <li>avec 3 <code>printf</code> :</li> </ul> <pre><code>234\n2F\n-1234567\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int base10, base16, negatif;\n    base10 = 234;\n    base16 = 0x2F;\n    negatif = -1234567;\n\n    printf(\"%d\\n\", base10); // %d pour afficher la valeur d\u00e9cimale (base 10) d'un entier\n                            // \\n pour passer \u00e0 la ligne\n    printf(\"%X\\n\", base16); // %x pour afficher la valeur h\u00e9xad\u00e9cimale (base16) d'un entier\n                            // %X pour l'afficher en majuscules\n    printf(\"%d\\n\", negatif);\n\n    return 0;\n}\n</code></pre> <ul> <li>avec un seul <code>printf</code> :</li> </ul> <pre><code>234 2F -1234567\n\n2F\n-1234567\n234\n\n2F = 47\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int base10, base16, negatif;\n    base10 = 234;\n    base16 = 0x2F;\n    negatif = -1234567;\n\n    printf(\"%d %X %d\\n\\n\", base10, base16, negatif);\n\n    printf(\"%X\\n%d\\n%d\\n\\n\", base16, negatif, base10);\n\n    printf(\"%X = %d\", base16, base16);\n\n    return 0;\n}\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#obtenir-la-taille-dune-variable","title":"Obtenir la taille d\u2019une variable","text":"<ul> <li>Afficher la taille des variables <code>int4Bytes</code>, <code>int2Bytes</code> et <code>int1Byte</code> d\u00e9clar\u00e9es pr\u00e9c\u00e9demment.</li> </ul> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int int4Bytes;\n    short int2Bytes;\n    char int1Byte;\n\n    // Il faut consid\u00e9rer le format comme un texte \u00e0 trous, les % seront remplac\u00e9s par les param\u00e8tres fournis ensuite.\n\n    // sizeof est un op\u00e9rateur qui permet de r\u00e9cup\u00e9rer la taille d'une variable.\n\n    printf(\"int4Bytes : %d octets,\\nint2Bytes : %d octets,\\nint1Byte  : %d octet.\", \n           sizeof(int4Bytes),\n           sizeof(int2Bytes),\n           sizeof(int1Byte)\n    );\n\n    return 0;\n}\n</code></pre> <p>R\u00e9sultat : </p> <pre><code>int4Bytes : 4 octets,\nint2Bytes : 2 octets,\nint1Byte  : 1 octet.\n</code></pre>"},{"location":"bts-1/10-premiers-pas-en-c/#initialiser-une-variable","title":"Initialiser une variable","text":"<ol> <li> <p>D\u00e9clarer une variable <code>moi_pas_initialisee</code>, initialiser une variable <code>moi_initialisee</code> avec la valeur <code>123</code> et afficher les valeurs des deux variables.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int moi_pas_initialisee, moi_initialisee = 123;\n\n    printf(\"moi_initialisee : %d\\nmoi_pas_initialisee : %d\", \n        moi_pas_initialisee,\n        moi_initialisee\n    );\n\n    return 0;\n}\n</code></pre> </li> <li> <p>Lancer le programme \u00e0 plusieurs reprises. Qu\u2019est-ce qu\u2019il y a dans une variable si on l\u2019initialise pas ?</p> Correction <pre><code>moi_initialisee : 426    !!? \ud83d\udea8 Les variables ne sont pas automatiquement initialis\u00e9e \u00e0 0 et r\u00e9cup\u00e8rent ce qu'il y avait dans l'espace m\u00e9moire allou\u00e9.\nmoi_pas_initialisee : 123\n</code></pre> </li> </ol>"},{"location":"bts-1/10-premiers-pas-en-c/#calculs","title":"Calculs","text":"<ul> <li> <p>D\u00e9clarer deux entiers pour stocker les longueurs des c\u00f4t\u00e9s <code>AB</code> (3 cm) et <code>BC</code> (4 cm) d\u2019un triangle rectangle en B.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int AB = 3, BC = 4;\n\n    return 0;\n}\n</code></pre> </li> <li> <p>Calculer son hypoth\u00e9nuse et stocker le r\u00e9sultat dans une variable <code>AC</code> et l\u2019afficher.</p> Correction <pre><code>/**\n * D'apr\u00e8s le th\u00e9or\u00e8me de Pythagore : \n * AC\u00b2 = AB\u00b2 + BC\u00b2\n * AC  = \u221a(AB\u00b2 + BC\u00b2)\n *\n * Il existe une fonction sqrt() qui permet de calculer la racine carr\u00e9 d'une valeur.\n * Cette fonction est disponible dans la biblioth\u00e8que math.h, qu'on doit inclure dans \n * le programme.\n * NB : Sous Linux, il faut dire au compilateur de lier math.h au programme en ajoutant \n *      l'option -lm \u00e0 la commande : gcc fichier.c -lm -o fichier.exe\n */\n#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\nint main() {\n    int AB = 3, BC = 4, AC;\n\n    AC = sqrt(AB * AB + BC * BC);\n\n    printf(\"%d\", AC);\n\n    return 0;\n}\n</code></pre> <p>R\u00e9sultat : </p> <pre><code>5\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#operateurs-arithmetiques-et-relationnels","title":"Op\u00e9rateurs arithm\u00e9tiques et relationnels","text":"<ul> <li> <p>Sur papier : quel est le r\u00e9sultat des calculs (d\u00e9biles) suivants ?</p> <pre><code>(12 + 3 * 5 - 2) / 5\n\n-12 &gt;= 3 + 5\n\n3 * 6 == 2 * 9 != 18\n</code></pre> Correction <pre><code>(12 + 3 * 5 - 2) / 5\n(12 +   15  - 2) / 5     \ud83e\udc52 La multiplication est prioritaire\n       25        / 5\n                 5\n\n-12 &gt;= 3 + 5             \ud83e\udc52 Les op\u00e9rateurx arithm\u00e9tiques sont prioritaires\n-12 &gt;= 8\n     0                   \ud83e\udc52 Les op\u00e9rateurs relationnels renvoient 0 ou 1.\n\n3 * 6 == 2 * 9 != 18\n  18  ==  18   != 18     \ud83e\udc52 A priorit\u00e9 \u00e9gale, on r\u00e9soud de gauche \u00e0 droite.\n       1       != 18\n                1\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#limites-des-differents-types-dentier","title":"Limites des diff\u00e9rents types d\u2019entier","text":"<ul> <li> <p>Initialiser un entier sur 1 octet avec la valeur <code>127</code> et afficher sa valeur et sa valeur + 1 </p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char limite = 127;\n\n    //        \ud83e\udc53 on veut afficher un entier stock\u00e9 sur 1 octet : %hhd\n    printf(\"%hhd + 1 = %hhd\", limite, limite + 1);\n\n    return 0;\n}\n</code></pre> <p>R\u00e9sultat : </p> <pre><code>127 + 1 = -128\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#recuperer-ladresse-dune-variable","title":"R\u00e9cup\u00e9rer l\u2019adresse d\u2019une variable","text":"<ul> <li> <p>Afficher l\u2019adresse des variables <code>int4Bytes</code>, <code>int2Bytes</code> et <code>int1Byte</code> d\u00e9clar\u00e9es pr\u00e9c\u00e9demment.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int int4Bytes;\n    short int2Bytes;\n    char int1Byte;\n\n    // L'op\u00e9rateur &amp; permet d'afficher l'adresse en m\u00e9moire d'une variable\n    // Par convention, on affiche les adresses en h\u00e9xad\u00e9cimal.\n\n    printf(\"int4Bytes : %X,\\nint2Bytes : %X,\\nint1Byte  : %X.\", \n        &amp;int4Bytes,\n        &amp;int2Bytes,\n        &amp;int1Byte\n    );\n\n    return 0;\n}\n</code></pre> <p>R\u00e9sultat : </p> <pre><code>int4Bytes : 933FF64C,\nint2Bytes : 933FF64A,\nint1Byte  : 933FF649.\n</code></pre> </li> </ul>"},{"location":"bts-1/10-premiers-pas-en-c/#lire-une-saisie-utilisateur","title":"Lire une saisie utilisateur","text":"<ul> <li> <p>Reprendre l\u2019exercice du calcul de l\u2019hypoth\u00e9nuse en rendant la saisie des longueurs des deux c\u00f4t\u00e9s param\u00e9trable par l\u2019utilisateur :</p> <pre><code>&gt; ./hypothenuse.exe\nMesure du premier c\u00f4t\u00e9 : 12\nMesure du second c\u00f4t\u00e9 : 7\nL'hypoth\u00e9nuse mesure : 13.892443\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\nint main() {\n    int AB, BC; // Pas d'initialisation, cette fois, c'est l'utilisateur qui va donner les valeurs.\n\n    // Tout \u00e0 l'heure le r\u00e9sultat \u00e9tait un entier, tout allait bien...\n    // Mais cette fois, on rique d'obtenir des nombres r\u00e9els.\n    // sqrt() renvoie des r\u00e9els de type double.\n    double AC;\n\n    printf(\"Mesure du premier cote : \"); // On donne une indication \u00e0 l'utilisateur.\n\n    // scanf() permet de lire une saisie au clavier.\n\n    //     \ud83e\udc53 on veut lire un entier : %d\n    scanf(\"%d\" , &amp;AB);\n    //            \ud83e\udc51 on veut le stocker \u00e0 l'adresse de AB\n\n    printf(\"Mesure du second cote : \");  // Second c\u00f4t\u00e9.\n    scanf(\"%d\", &amp;BC);\n\n    AC = sqrt(AB * AB + BC * BC);\n\n    //                             \ud83e\udc53 on afficher un r\u00e9el : %f\n    printf(\"L'hypothenuse mesure : %f\", AC);\n\n    return 0;\n}\n</code></pre> <p>R\u00e9sultat : </p> <pre><code>Mesure du premier cote : 8\nMesure du second cote : 13\nL'hypothenuse mesure : 15.264338\n</code></pre> </li> </ul>"},{"location":"bts-1/20-premiers-programmes/","title":"02 - Premiers programmes","text":""},{"location":"bts-1/20-premiers-programmes/#recapitulatif","title":"R\u00e9capitulatif","text":"<pre><code>%%{init: {'theme':'neutral'}}%%\nmindmap\n  root((Langage C))\n    Compilateur\n        langage compil\u00e9 != langage interpr\u00e9t\u00e9\n            Python, PHP\n        4 \u00e9tapes\n            1 - Pr\u00e9-processeur\n                Suppression des commentaires\n                R\u00e9cup\u00e9ration du contenu des biblioth\u00e8ques\n            2 - Compilateur\n                Traduction en assembleur\n            3 - Assemblage\n                Traduction en binaire\n            4 - Editeur de liens\n                R\u00e9cup\u00e9ration des biblioth\u00e8ques pr\u00e9-compil\u00e9es\n                Ajout des routines pour l'ex\u00e9cution\n    Variables\n        Types\n            Entiers\n                char 1 octet\n                short 2 octets\n                int 4 octets\n                long 4 octets\n                long long 8 octets\n            R\u00e9els\n                [\"float \n                (pr\u00e9cision \u00e0 6 chiffres)\"]\n                double\n        Identificateur\n    Fonctions\n        Principale main\n            Point d'entr\u00e9e du programme\n        Biblioth\u00e8ques \n            #include\n            stdio.h\n                [\"printf()\"]\n                [\"scanf()\"]\n            math.h\n                [\"sqrt()\"]\n    Op\u00e9rateurs\n        Arithm\u00e9tiques\n        Relationnels\n        Logiques\n        Affectation compos\u00e9e\n        Incr\u00e9mentaux\n        Taille\n        Adresse\n    Logique\n        if...else if...else</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-1","title":"Exercice 1","text":"<p>Cr\u00e9er un programme <code>exo1.c</code> qui demande \u00e0 l'utilisateur son ann\u00e9e de naissance et lui donne son \u00e2ge.</p> <pre><code>&gt; exo1.exe\nAnnee de naissance : 1984\nVous avez 38 ans !\n</code></pre> <p>On sera plus pr\u00e9cis dans l'exercice 3</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int annee;\n\n    printf(\"Annee de naissance : \");\n    scanf(\"%d\", &amp;annee);\n    //          \ud83e\udc51 on oublie pas le &amp;, sinon gare \u00e0 l'erreur de segmentation !\n    //                                                               \ud83e\udc51 C'est ce qui arrive quand \n    //                                                                 on \u00e9crit dans une zone \n    //                                                                 m\u00e9moire qui ne nous est pas \n    //                                                                 allou\u00e9e \u26d4\n\n    printf(\"Vous avez %d ans !\", 2024 - annee);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-2","title":"Exercice 2","text":"<p>Cr\u00e9er un programme <code>exo2.c</code> qui demande \u00e0 l'utilisateur son ann\u00e9e, puis son mois, puis son jour de naissance et lui souhaite un joyeux anniversaire si c'est aujourd'hui.</p> <p>R\u00e9fl\u00e9chir sur le papier</p> <p>La date du jour doit \u00eatre d\u00e9finie dans des constantes.</p> <pre><code>// Si nous sommes le 13/09 \ud83d\ude04\n\n&gt; exo2.exe\nAnnee de naissance : 1984\nMois de naissance : 9\nJour de naissance : 13\nJoyeux anniversaire !\n\n&gt; exo2.exe\nAnnee de naissance : 1984\nMois de naissance : 9\nJour de naissance : 7\nJoyeux non-anniversaire !\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int year, month, day;\n    const int today_year  = 2023, \n              today_month = 9, \n              today_day   = 26;\n\n    printf(\"Annee de naissance : \");\n    scanf(\"%d\", &amp;year);\n    printf(\"Mois de naissance : \");\n    scanf(\"%d\", &amp;month);\n    printf(\"Jour de naissance : \");\n    scanf(\"%d\", &amp;day);\n\n    if (day == today_day &amp;&amp; month == today_month) {\n        printf(\"Joyeux anniversaire !\");\n    }\n    else {\n        printf(\"Joyeux non-anniversaire !\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-3","title":"Exercice 3","text":"<p>Cr\u00e9er un programme exo3.c qui demande \u00e0 l'utilisateur son ann\u00e9e, puis son mois, puis son jour de naissance et lui donne son \u00e2ge plus pr\u00e9cis\u00e9ment qu'\u00e0 l'exercice 1.</p> <pre><code>&gt; ./exo3.exe\nAnn\u00e9e de naissance : 1984\nMois de naissance : 12\nJour de naissance : 25\nVous avez 37 ans !\n\n&gt; ./exo3.exe\nAnn\u00e9e de naissance : 1984\nMois de naissance : 9\nJour de naissance : 7\nVous avez 38 ans !\n</code></pre> Correction <p>Solution d\u00e9taill\u00e9e :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int year, month, day;\n    const int TODAY_YEAR = 2024, \n            TODAY_MONTH = 9, \n            TODAY_DAY = 17;\n\n    printf(\"Annee de naissance : \");\n    scanf(\"%d\", &amp;year);\n    printf(\"Mois de naissance : \");\n    scanf(\"%d\", &amp;month);\n    printf(\"Jour de naissance : \");\n    scanf(\"%d\", &amp;day);\n\n    // L'anniversaire de l'utilisateur est d\u00e9j\u00e0 pass\u00e9 : \n    // (Mois avant le mois actuel)\n    if (month &lt; TODAY_MONTH) {\n        printf(\"Vous avez %d ans !\", TODAY_YEAR - year);\n    }\n\n    // (Ce mois-ci mais avant aujourd'hui ou aujourd'hui)\n    else if (month == TODAY_MONTH &amp;&amp; day &lt;= TODAY_DAY) {\n        printf(\"Vous avez %d ans !\", TODAY_YEAR - year);\n    }\n\n    // L'anniversaire n'est pas encore pass\u00e9 :\n    else {\n        printf(\"Vous avez %d ans !\", TODAY_YEAR - year - 1);\n    }\n\n    return 0;\n}\n</code></pre> <p>Solution condens\u00e9e :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int year, month, day;\n    const int TODAY_YEAR = 2024, \n            TODAY_MONTH = 9, \n            TODAY_DAY = 17;\n\n    printf(\"Annee de naissance : \");\n    scanf(\"%d\", &amp;year);\n    printf(\"Mois de naissance : \");\n    scanf(\"%d\", &amp;month);\n    printf(\"Jour de naissance : \");\n    scanf(\"%d\", &amp;day);\n\n    if (month &lt; TODAY_MONTH || (month == TODAY_MONTH &amp;&amp; day &lt;= TODAY_DAY)) {\n        printf(\"Vous avez %d ans !\", TODAY_YEAR - year);\n    }\n    else {\n        printf(\"Vous avez %d ans !\", TODAY_YEAR - year - 1);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-sur-papier-1","title":"Exercice sur papier 1","text":"<p>Soit le programme suivant :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a = 0, b = 1, c = 2, d = 3;\n\n    a = 5;                  // a:      b:     c:     d:\n    a + b;                  // a:      b:     c:     d:\n    c = a + b;              // a:      b:     c:     d:\n    d = a - (2 * d - b);    // a:      b:     c:     d: \n    c = a + b * -c + 1;     // a:      b:     c:     d:\n    a = b = c;              // a:      b:     c:     d:\n\n    return 0;\n}\n</code></pre> <p>D\u00e9finir sur papier les valeurs stock\u00e9es dans les variables a, b, c et d \u00e0 la fin de chaque instruction.</p> <p>Les priorit\u00e9 des calculs sont les m\u00eames qu'en math\u00e9matiques</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a = 0, b = 1, c = 2, d = 3;\n\n    a = 5;                  // a: 5    b: 1   c: 2   d: 3\n    a + b;                  // a: 5    b: 1   c: 2   d: 3\n    c = a + b;              // a: 5    b: 1   c: 6   d: 3\n    d = a - (2 * d - b);    // a: 5    b: 1   c: 6   d: 0\n    c = a + b * -c + 1;     // a: 5    b: 1   c: 0   d: 0\n    a = b = c;              // a: 0    b: 0   c: 0   d: 0\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-sur-papier-2","title":"Exercice sur papier 2","text":"<p>Le programme suivant ne fonctionne pas... Pourquoi ?</p> <pre><code>#include &lt;stio.h&gt;\n\nmain() {\n    int jour = 0, mois = 0 annee = 0;\n\n    printf(\"Donner un jour (1-31) : );\n    scanf(\"%d\", &amp;jour);\n\n    printf(\"Donner un mois (1-12) : \");\n    scanf(\"%d\", mois);\n\n    printf(\"Donner un ann\u00e9e (0-2021) : \")\n    scanf(\"%d\", &amp;annee);\n\n    print(\"La date saisie est : %02d/%02d/%04d\", jour, mois, annee);\n\n    return 0;\n}\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt; // et non stio\n\nint main() { // et non main() tout court\n    int jour = 0, mois = 0, annee = 0; // Il manquait une virgule\n\n    printf(\"Donner un jour (1-31) : \"); // Chaine de caract\u00e8re \u00e0 fermer\n    scanf(\"%d\", &amp;jour);\n\n    printf(\"Donner un mois (1-12) : \");\n    scanf(\"%d\", &amp;mois); // Sans le &amp;, on risque l'erreur de segmentation\n\n    printf(\"Donner un ann\u00e9e (0-2021) : \"); // Avec un point-virgule\n    scanf(\"%d\", &amp;annee);\n\n    printf(\"La date saisie est : %02d/%02d/%04d\", jour, mois, annee); // et non print\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-4","title":"Exercice 4","text":"<p>Cr\u00e9er un programme exo4.c qui demande un entier \u00e0 l'utilisateur puis lui affiche la conversion en hexad\u00e9cimal et en octal.</p> <pre><code>&gt; ./exo4.exe\nNombre \u00e0 convertir : 42\nHexad\u00e9cimal : 2A\nOctal : 52\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int nombre;\n\n    printf(\"Nombre \u00e0 convertir : \");\n    scanf(\"%d\", &amp;nombre);\n\n    printf(\"Hexadecimal : %X\\n\", nombre);\n    printf(\"Octal : %o\", nombre);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-5","title":"Exercice 5","text":"<p>Cr\u00e9er un programme exo5.c qui convertit des composantes RGB de d\u00e9cimal en hexad\u00e9cimal.</p> <pre><code>&gt; ./exo5.exe\nCouleur en d\u00e9cimal : 255 204 0\nCouleur en hexa    : #FFCC00\n</code></pre> Aller plus loin <p>Programmer l'inverse.</p> <pre><code>&gt; ./exo5.exe\nCouleur en hexa    : #FFCC00\nCouleur en d\u00e9cimal : 255 204 0\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    unsigned char r, g, b;\n\n    printf(\"Couleur en decimal : \");\n    scanf(\"%hhd %hhd %hhd\", &amp;r, &amp;g, &amp;b);\n\n    printf(\"Couleur en hexa    : #%02X%02X%02X\", r, g, b);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-6","title":"Exercice 6","text":"<p>Cr\u00e9er un programme exo6.c qui demande deux entiers \u00e0 l\u2019utilisateur puis donne le r\u00e9sultat de leur division.</p> <pre><code>&gt; ./exo6.exe\nEntier 1 : 12\nEntier 2 : 5\nResultat : 12 / 5 = 2.40000\n</code></pre> Correction <p>Solution 1</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int n1, n2;\n\n    printf(\"Entier 1 : \");\n    scanf(\"%d\", &amp;n1);\n\n    printf(\"Entier 2 : \");\n    scanf(\"%d\", &amp;n2);\n\n    // int / int -&gt; int \n    // donc on doit \"caster\" n1 et n2 pour obtenir un float\n    printf(\"Resultat : %d / %d = %f\", n1, n2, (float)n1 / (float)n2);\n}\n</code></pre> <p>Solution 2</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    float n1, n2;\n\n    // On n'est pas oblig\u00e9 de dire \u00e0 l'utilisateur \n    // qu'on stocke son entier dans un float :)\n    printf(\"Entier 1 : \");\n    scanf(\"%f\", &amp;n1);\n\n    printf(\"Entier 2 : \");\n    scanf(\"%f\", &amp;n2);\n\n    // On affiche le float sans nombre apr\u00e8s la virgule\n    printf(\"Resultat : %.0f / %.0f = %f\", n1, n2, n1 / n2);\n}\n</code></pre>"},{"location":"bts-1/20-premiers-programmes/#exercice-7","title":"Exercice 7","text":"<p>Cr\u00e9er un programme exo7.c qui demande un entier strictement positif \u00e0 l'utilisateur et ne s\u2019arr\u00eate pas tant qu\u2019il n\u2019a pas une r\u00e9ponse qui convient.</p> <pre><code>&gt; ./exo7.exe\nEntrer un nombre strictement positif : -420\nCe nombre n'est pas strictement positif.\nEntrer un nombre strictement positif : 0\nCe nombre n'est pas strictement positif.\nEntrer un nombre strictement positif : 23\nOK ! Merci...\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int nombre;\n\n    do {\n        printf(\"Entrer un nombre strictement positif : \");\n        scanf(\"%d\", &amp;nombre);\n        if(nombre &lt;= 0) {\n            printf(\"Ce nombre n'est pas strictement positif.\\n\");\n        }\n    }\n    while(nombre &lt;= 0);\n\n    printf(\"OK ! Merci...\\n\");\n}\n</code></pre> Aller plus loin <p>Compter le nombre de tentatives :</p> <pre><code>&gt; ./exo7.exe\nEntrer un nombre strictement positif : 23\nChapeau ! Du premier coup !\n\n&gt; ./exo7.exe\nEntrer un nombre strictement positif : -420\nCe nombre n'est pas strictement positif.\nEntrer un nombre strictement positif : 0\nCe nombre n'est pas strictement positif.\nEntrer un nombre strictement positif : 23\nAh quand m\u00eame... 3 fois pour y arriver :(\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int nombre, nb_essais = 1;\n\n    do {\n        printf(\"Entrer un nombre strictement positif : \");\n        scanf(\"%d\", &amp;nombre);\n        if(nombre &lt;= 0) {\n            nb_essais++;\n            printf(\"Ce nombre n'est pas strictement positif.\\n\");\n        }\n    }\n    while(nombre &lt;= 0);\n\n    if (nb_essais == 1) {\n        printf(\"Chapeau ! Du premier coup !\");\n    }\n    else {\n        printf(\"Ah quand m\u00eame... %d fois pour y arriver :(\", nb_essais);\n    }\n}\n</code></pre>"},{"location":"bts-1/30-boucles/","title":"03 - Boucles","text":""},{"location":"bts-1/30-boucles/#exercice-1","title":"Exercice 1","text":"<p>Ecrire un programme qui affiche tous les nombres de 1 \u00e0 1000 avec les trois types de boucles.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i;\n\n    for (i = 1; i &lt;= 1000; i++) {\n        printf(\"%d\\n\", i);\n    }\n\n    i = 1;\n    while (i &lt;= 1000) {\n        printf(\"%d\\n\", i);\n        i = i + 1;\n    }\n\n    i = 1;\n    do {\n        printf(\"%d\\n\", i);\n        i = i + 1;\n    }\n    while (i &lt;= 1000);\n\n    return 0;\n\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-2","title":"Exercice 2","text":"<p>Ecrire un programme qui affiche les nombres pairs de 2 \u00e0 100 avec une boucle <code>for</code> de deux mani\u00e8res diff\u00e9rentes.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    // Solution 1 : + \u00e9conome en temps processeur -&gt; 50 op\u00e9rations\n    for (int i = 2; i &lt;= 100; i = i + 2) {\n        printf(\"%d\\n\", i);\n    }\n\n    // Solution 2 : - \u00e9conome en temps processeur -&gt; 150 op\u00e9rations\n    for (int i = 2; i &lt;= 100; i++) {\n        if (i % 2 == 0) {\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-3","title":"Exercice 3","text":"<p>Ecrire un programme qui demande un nombre positif \u00e0 l'utilisateur puis affiche le d\u00e9compte \u00e0 partir de ce nombre jusqu'\u00e0 0 avec les trois types de boucles.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int start;\n\n    printf(\"Depart : \");\n    scanf(\"%d\", &amp;start);\n\n    while (start &gt;= 0) {\n        printf(\"%d\\n\", start--);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-4","title":"Exercice 4","text":"<p>Ecrire un programme en C qui affiche les nombres de 1 \u00e0 100 (inclus) sauf :  \u2022   si le nombre est un multiple de 3, il affiche \"fi\", \u2022   si le nombre est un multiple de 5, il affiche \"foo\", \u2022   si le nombre est un multiple de 3 et de 5, il affiche \"fifoo\".</p> <p>R\u00e9sultat :  <pre><code>&gt; ./exo4.exe\n1\n2\nfi\n4\nfoo\n5\nfi\n7\n8\nfi\n10\n11\nfi\n13\n14\nfifoo\n16\n...\n</code></pre></p> Correction <p>Plusieurs solutions sont possibles, plus ou moins performantes, en voici 2 performantes et \u00e9l\u00e9gantes (faciles \u00e0 lire) :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 1; i &lt;= 100; i++) {\n        if (i % 3 == 0 &amp;&amp; i % 5 == 0) {\n            printf(\"fifoo\\n\");\n        }\n        else if (i % 3 == 0) {\n            printf(\"fi\\n\");\n        }\n        else if (i % 5 == 0) {\n            printf(\"foo\\n\");\n        }\n        else {\n            printf(\"%d\\n\", i);\n        }\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 1; i &lt;= 100; i++) {\n        if (i % 3 == 0 &amp;&amp; i % 5 == 0) {\n            printf(\"fifoo\\n\");\n            continue;\n        }\n        if (i % 3 == 0) {\n            printf(\"fi\\n\");\n            continue;\n        }\n        if (i % 5 == 0) {\n            printf(\"foo\\n\");\n            continue;\n        }\n        printf(\"%d\\n\", i);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-5","title":"Exercice 5","text":"<p>Ecrire un programme pour g\u00e9rer la saisie du code d'une carte bancaire.</p> <p>L'utilisateur a 3 essais pour saisir correctement son code.</p> <p>Si le code est trouv\u00e9, afficher \"<code>Code bon</code>\".</p> <p>Si le code est faux, afficher \"<code>Code faux (X essai(s) restant(s))</code>\" o\u00f9 X est le nombre d'essais restants.</p> <p>Au sortir de la saisie, si le code est bon, afficher \"<code>Paiement en cours...</code>\", sinon afficher \"<code>Carte bloqu\u00e9e X(</code>\" </p> Correction <pre><code>#include &lt;stdio.h&gt;\n\n#ifdef _WIN32\n#include &lt;windows.h&gt;\n#endif\n\n#ifdef linux\n#include &lt;unistd.h&gt;\n#endif\n\nint main() {\n    int code_a_trouver = 1234, code_saisi = -1;\n    float montant = 25.99;\n\n    // Affichae cosm\u00e9tique :)\n    printf(\"Montant :%11.2f EUR\\n\", montant);\n\n    // Une boucle pour limiter le nombre d'essai\n    for (int i = 1; i &lt;= 3 ; i++) {\n\n        // Saisie du code\n        printf(\"Saisir code (%d/3) : \", i);\n        scanf(\"%d\", &amp;code_saisi);\n\n        // V\u00e9rification\n        if (code_saisi == code_a_trouver) {\n            printf(\"Code bon !\\n\");\n            break;                  // Sortie de la boucle, si c'est bon\n        }\n\n        // Sinon quoi qu'il arrive, le code est faux.\n        printf(\"Code faux...\\n\");\n    }\n\n    // Paiement\n    if (code_saisi == code_a_trouver) {\n        printf(\"Paiement en cours\");\n\n        // Boucle de cr\u00e2neur \ud83d\ude0e\n        for (int i = 1; i &lt;= 3; i++) {\n            #ifdef _WIN32\n            Sleep(1000);\n            #endif\n\n            #ifdef linux\n            usleep(1000 * 1000);\n            #endif\n\n            printf(\".\");\n        }\n    }\n    else {\n        printf(\"Carte bloquee X(\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-6","title":"Exercice 6","text":"<p>Cr\u00e9er un programme <code>exo6.c</code> qui demande \u00e0 l\u2019utilisateur de deviner un nombre entre un 1 et 10 en maximum 3 essais.</p> <pre><code>&gt; ./exo6.exe\nDevine un nombre entre 1 et 10 (3 essais max.) !\nEssai 1 : 3\nPerdu !\nEssai 2 : 6\nPerdu !\nEssai 3 : 7\nPerdu ! C'\u00e9tait 8 !\n\n&gt; ./exo6.exe\nDevine un nombre entre 1 et 10 (3 essais max.) !\nEssai 1 : 4\nPerdu !\nEssai 2 : 6\nGagn\u00e9 !!!\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n\n    // Graine pour les nombres al\u00e9atoires :\n    // A moins de lancer le programme deux fois dans la m\u00eame seconde, \n    // on aura un tirage diff\u00e9rent \u00e0 chaque fois... dans la limite du\n    // nombre de valeurs possibles \ud83d\ude43\n    srand(time(NULL));\n\n    // rand renvoie un nombre positif \"al\u00e9atoire\", il faut le ramener\n    // dans l'intervale souhait\u00e9. On sait qu'en r\u00e9cup\u00e9rent le reste \n    // de la division  par un nombre on r\u00e9cup\u00e8re une valeur entre 0 \n    // et ce nombre - 1. ex : 123456 % 10 va renvoyer un nombre entre\n    // 0 et 9. Si on ajoute 1 \u00e0 ce calcul, on obtient un nombre entre\n    // 1 et 10 \ud83d\ude0e\n    int nombreATrouver = rand() % 10 + 1, nombreSaisi, i;\n\n    printf(\"Devine un nombre entre 1 et 10 (3 essais max.) !\");\n\n    // Il ne reste qu'\u00e0 boucler \ud83d\ude35\u200d\ud83d\udcab comme \u00e0 l'exercice pr\u00e9c\u00e9dent...\n    for (i = 1; i &lt;= 3; i++) {\n\n        printf(\"\\nEssai %d : \", i);\n        scanf(\"%d\", &amp;nombreSaisi);\n\n        if (nombreSaisi == nombreATrouver) {\n            printf(\"Gagne !!!\\n\");\n            break;\n        }\n\n        printf(\"Perdu !\");\n    }    \n\n    if (i &gt; 3) {\n        printf(\" C'etait %d !\\n\", nombreATrouver);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-7","title":"Exercice 7","text":"<p>Reprendre l\u2019exercice 6 en rendant les bornes (1 - 10) et le nombre de tentatives param\u00e9trables via des constantes.</p> <pre><code>&gt; ./exo7.exe\nDevine un nombre entre 1 et 99 (1 essai max.) !\nEssai 1 : 3\nPerdu ! C'\u00e9tait 83 !\n\n&gt; ./exo7.exe\nDevine un nombre entre 34 et 77 (24 essais max.) !\nEssai 1 : 44\nPerdu !\nEssai 2 : 61\nPerdu !\nEssai 3 : 62\nPerdu !\nEssai 4 : 63\nPerdu !\nEssai 5 : 67\nPerdu !\nEssai 6 : 56\nPerdu !\nEssai 7 : 51\nPerdu !\nEssai 8 : 73\nPerdu !\nEssai 9 : 71\nPerdu !\nEssai 10 : 36\nGagn\u00e9 !!!\n</code></pre> Correction <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\n// Les constantes...\n#define BORNE_MIN   3\n#define BORNE_MAX  42\n#define NB_ESSAIS   7\n\nint main() {\n\n    srand(time(NULL));\n\n    // ...qu'il ne faut pas oublier de modifier partout...\n    int nombreATrouver = rand() % BORNE_MAX + BORNE_MIN, nombreSaisi, i;\n\n    // ...partout...\n    printf(\"Devine un nombre entre %d et %d (%d essai%s max.) !\", \n        BORNE_MIN, \n        BORNE_MAX, \n        NB_ESSAIS,\n        NB_ESSAIS == 1 ? \"\" : \"s\"\n    );\n\n    // ...partout...\n    for (i = 1; i &lt;= NB_ESSAIS; i++) {\n\n        printf(\"\\nEssai %d : \", i);\n        scanf(\"%d\", &amp;nombreSaisi);\n\n        if (nombreSaisi == nombreATrouver) {\n            printf(\"Gagne !!!\\n\");\n            break;\n        }\n\n        printf(\"Perdu !\");\n    }    \n\n    // ...partout !\n    if (i &gt; NB_ESSAIS) {\n        printf(\" C'etait %d !\", nombreATrouver);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/30-boucles/#exercice-8","title":"Exercice 8","text":"<p>Compl\u00e9ter le programme <code>exo8.c</code> pour afficher les nombres de <code>000</code> \u00e0 <code>999</code> en untilisant une variable pour g\u00e9rer les unit\u00e9s, une pour les dizaines et une pour les centaines.</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int u, d, c;\n\n    printf(\"%d%d%d\\n\", c, d, u);\n\n    return 0;\n}\n</code></pre> Aller plus loin <p>Faire en sorte que le programme mette 10 secondes \u00e0 afficher les nombres.</p> Correction <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int u, d, c;\n\n    // Les boucles peuvent s'imbriquer.\n    for (int c = 0; c &lt;= 9; c++) {\n        for (int d = 0; d &lt;= 9; d++) {\n            for (int u = 0; u &lt;= 9; u++) {\n                printf(\"%d%d%d\\n\", c, d, u);\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre> <p>et pour <code>aller plus loin</code> :</p> <pre><code>#include &lt;stdio.h&gt;\n\n#ifdef _WIN32\n#include &lt;windows.h&gt;\n#endif\n\n#ifdef linux\n#include &lt;unistd.h&gt;\n#endif\n\nint main() {\n\n    int u, d, c;\n\n    // Les boucles peuvent s'imbriquer.\n    for (int c = 0; c &lt;= 9; c++) {\n        for (int d = 0; d &lt;= 9; d++) {\n            for (int u = 0; u &lt;= 9; u++) {\n                printf(\"%d%d%d\\n\", c, d, u);\n                #ifdef _WIN32\n                Sleep(10);\n                #endif\n                #ifdef linux\n                usleep(10 * 1000);\n                #endif\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/40-fonctions/","title":"Usage courant","text":""},{"location":"bts-1/40-fonctions/#exercice-1","title":"Exercice 1","text":"<p>D\u00e9clarer (= proposer un prototype) les fonctions suivantes :</p> Conseils <ol> <li> <p>Identifier les entr\u00e9es de la fonction. Que va-t-on devoir lui fournir comme valeurs en entr\u00e9e pour qu'elle puisse fonctionner ? Si ces valeurs viennent d'une autre partie du programme, alors il faut un param\u00e8tre par information. Si la fonction les r\u00e9cup\u00e9rer toute seule (en appelant une autre fonction), pas besoin de param\u00e8tres.</p> </li> <li> <p>Identifier les sorties de la fonction. Doit-elle retourner quelquechose au programme qui l'appelle ? Si oui, il faut que son type retour soit en ad\u00e9quation avec la valeur retourn\u00e9e, sinon elle peut ne rien renvoyer.</p> </li> </ol> <ul> <li>Une fonction qui affiche la date du syst\u00e8me (qu'on r\u00e9cup\u00e8re via une fonction).</li> </ul> Solution <p>Entr\u00e9es : Aucune, si on peut r\u00e9cup\u00e9rer l'heure avec une fonction, on a besoin de rien.</p> <p>Sorties : On ne nous demande que d'afficher une donn\u00e9e, donc rien \u00e0 renvoyer.</p> <p><code>void afficher_heure();</code></p> <ul> <li>Une fonction qui affiche la table de multiplication d'un chiffre qui lui est pass\u00e9 en param\u00e8tre.</li> </ul> Solution <p>Entr\u00e9es : On a besoin du chiffre dont on doit afficher la table, donc un entier.</p> <p>Sorties : On ne nous demande que d'afficher une donn\u00e9e, donc rien \u00e0 renvoyer.</p> <p><code>void displayMultiplicationTable(int);</code></p> <ul> <li>Une fonction qui affiche le r\u00e9sultat de la somme de deux entiers pass\u00e9s en param\u00e8tres.</li> </ul> Solution <p>Entr\u00e9es : On a besoin des deux entiers qu'on doit additionner.</p> <p>Sorties : On ne nous demande que d'afficher une donn\u00e9e, donc rien \u00e0 renvoyer.</p> <p><code>void affichageSomme(int, int);</code></p> <ul> <li>Une fonction qui renvoie le r\u00e9sultat de la somme de deux r\u00e9els pass\u00e9s en param\u00e8tres.</li> </ul> Solution <p>Entr\u00e9es : On a besoin des deux r\u00e9els qu'on doit additionner.</p> <p>Sorties : On doit renvoyer le r\u00e9sultat de la somme de deux r\u00e9els qui doit donc \u00eatre... un r\u00e9el.</p> <p><code>float add(float, float);</code></p> <ul> <li>Une fonction qui demande de saisir deux nombres, les multiplie, affiche le r\u00e9sultat et le renvoie.</li> </ul> Solution <p>Entr\u00e9es : Si la fonction demande la saisie (scanf) des deux nombres pas besoin de donn\u00e9es en entr\u00e9e.</p> <p>Sorties : Il faut renvoyer le produit de deux nombres dont on ne conna\u00eet pas la nature. Qui peut le plus peut le moins : mettons un <code>double</code> ! </p> <p><code>double multiplie();</code></p> <ul> <li>Une fonction qui renvoie le r\u00e9sultat de la division de deux r\u00e9els pass\u00e9s en param\u00e8tres.</li> </ul> Solution <p>Entr\u00e9es : On a besoin des deux r\u00e9els.</p> <p>Sorties : On doit renvoyer le r\u00e9sultat de la division de deux r\u00e9els qui doit donc \u00eatre... un r\u00e9el.</p> <p><code>float division(float, float);</code></p> <ul> <li>Une fonction qui demande \u00e0 l'utilisateur de saisir une liste de 10 entiers et renvoie le plus grand.</li> </ul> Solution <p>Entr\u00e9es : La fonction g\u00e8re la saisie, besoin de rien en entr\u00e9e.</p> <p>Sorties : Le plus grand entier. Si on met un <code>int</code>, on s'assurera de lire des <code>int</code> dans le corps de la fonction.</p> <p><code>int getMax();</code></p> <ul> <li>Une fonction qui renvoie le plus grand des 10 entiers pass\u00e9s en param\u00e8tres.</li> </ul> Solution <p>Entr\u00e9es : Il nous faut de quoi passer 10 entiers... Pas de tableau pour l'instant (d'ailleurs, qu'est-ce que c'est !!? \ud83e\udd14), donc 10 <code>int</code> !</p> <p>Sorties : Le plus grand entier qui sera un <code>int</code> ici.</p> <p><code>int getMaxFrom10(int, int, int, int, int, int, int, int, int, int, int);</code></p>"},{"location":"bts-1/40-fonctions/#exercice-2","title":"Exercice 2","text":"<p>D\u00e9finir la fonction <code>minimum</code> qui prend en param\u00e8tres deux entiers et renvoie le premier s\u2019il est strictement inf\u00e9rieur au second, sinon renvoie le second.</p> <p>Ecrire un programme de test.</p> <p>Le prototype :</p> <pre><code>int minimum(int, int);\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n\nint minimum(int, int);\n\nint main() {\n\n    printf(\"%d\\n\", minimum(5, 4));  // doit afficher 4\n    printf(\"%d\\n\", minimum(7, 20)); // doit afficher 7\n    printf(\"%d\\n\", minimum(5, 5));  // doit afficher 5\n\n    return 0;\n}\n\nint minimum(int a, int b) {\n    if (a &lt; b) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n/*\n// Ecriture en une ligne :\nint minimum(int a, int b) {\n    return a &lt; b ? a : b ;\n}\n*/\n</code></pre>"},{"location":"bts-1/40-fonctions/#exercice-3","title":"Exercice 3","text":"<p>Indiquer pour chacune des fonctions ci-dessous si elles sont correctement d\u00e9finies et, si ce n\u2019est pas le cas, expliquer l\u2019anomalie.</p> <pre><code>// Fonction 1\nfloat division (float a, float b) {\n    if (b != 0) {\n        return a / b;\n    }\n}\n\n// Fonction 2\nfloat division (float a, float b) {\n    if (b != 0) {\n        return a / b;\n    }\n    return \"Erreur !\";\n}\n\n// Fonction 3\nfloat division (float a, float b) {\n    if (b != 0) {\n        return a / b;\n    }\n    printf(\"Erreur !\");\n    return 0;\n}\n</code></pre> Solution <p>Fonction 1 : Si l\u2019ex\u00e9cution ne passe pas dans le <code>if</code>, si <code>b</code> est \u00e9gal \u00e0 0, il n\u2019y a pas de <code>return</code>. Cela ne va pas g\u00eaner le compilateur, mais \u00e0 l\u2019ex\u00e9cution, dans ce cas, n\u2019importe quelle valeur sera renvoy\u00e9e\u2026 </p> <p>Fonction 2 : Ici, si <code>b</code> est \u00e9gal \u00e0 0, on renvoie <code>\"Erreur !\"</code>, qui est une cha\u00eene de caract\u00e8res, ce qui ne correspond pas au type retour de la fonction. Cette fois, le programme ne compilera pas.</p> <p>Fonction 3 : Cette fonction est correctement d\u00e9clar\u00e9e.</p>"},{"location":"bts-1/40-fonctions/#exercice-4","title":"Exercice 4","text":"<p>Soit le programme suivant :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int s, a = 1, b = 3 ;\n    s = somme(a, b);\n    printf(\"%d + %d = %d\\n\", a, b, s);\n    return 0;\n}\n</code></pre> <p>D\u00e9clarer et d\u00e9finir la fonction <code>somme</code> qui effectue la somme des valeurs pass\u00e9es en arguments.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n\n// D\u00e9claration\nint somme(int, int);\n\nint main() {\n    int s, a = 1, b = 3 ;\n    s = somme(a, b);\n    printf(\"%d + %d = %d\\n\", a, b, s);\n    return 0;\n}\n\n// D\u00e9finition\nint somme(int x, int y) {\n    return x + y;\n}\n</code></pre>"},{"location":"bts-1/40-fonctions/#exercice-5","title":"Exercice 5","text":"<p>Ecrire une fonction qui, pour des valeurs de a, b et x saisies par l\u2019utilisateur, calcule le r\u00e9sultat de :</p> \\[ ax^3 + 2 ax^2 + b \\] <pre><code>&gt; ./exo.exe\nValeurs de a, b, x : 3, 0, 1\n= 9\nValeurs de a, b, x : 0, 2, 2\n= 2\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n\n// D\u00e9claration\nint fonction(int, int, int);\n\nint main() {\n    int a, b, x;\n\n    printf(\"Valeurs de a, b, x : \");\n    scanf(\"%d, %d, %d\", &amp;a, &amp;b, &amp;x);\n\n    printf(\"= %d\\n\", fonction(a, b, x));\n\n    return 0;\n}\n\n// D\u00e9finition\nint fonction(int a, int b, int x) {\n    return a*x*x*x + 2*a*x*x + b;\n}\n</code></pre>"},{"location":"bts-1/40-fonctions/#exercice-6","title":"Exercice 6","text":"<ol> <li> <p>Ecrire une fonction <code>estPair</code> qui renvoie vrai si le nombre qui lui est pass\u00e9 est\u2026 pair \ud83d\ude0e.</p> </li> <li> <p>Ecrire une fonction <code>impairEntreBornes</code> qui affiche les nombres impairs entre 2 bornes en utilisant la fonction <code>estPair</code>.</p> </li> <li> <p>Ecrire un programme de test.</p> </li> <li> <p>Installer l'extension Doxygen Documentation Generator, puis commenter les fonctions en utilisant le format Doxygen (Commencer \u00e0 taper <code>/**</code> \ud83e\udd29).</p> </li> </ol> Aller plus loin <p>Proposer au moins une autre version de la fonction <code>impairEntreBornes</code> en utilisant toujours la fonction <code>estPair</code>.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n\nint estPair(int);\nvoid impairEntreBornes(int, int);\n\nint main() {\n\n    impairEntreBornes(1, 100); // affiche de 1, 3, 5... \u00e0 99\n    impairEntreBornes(-4, 7);  // affiche -3, -1, 1, 3, 5, 7\n\n    return 0;\n}\n\n/**\n* @brief Dit si la variable x est paire\n* \n* @param x la variable dont on veut conna\u00eetre la parit\u00e9\n* @return int vrai (1) si x est paire, faux(0) sinon. \n*/\nint estPair(int x) {\n    return x % 2 == 0;\n}\n\n\nvoid impairEntreBornes(int minimum, int maximum) {\n    for (int i = minimum; i &lt;= maximum; i++) {\n        if (!estPair(i)) {          // i.e.   estPair(x) == 0\n            printf(\"%d\\n\", i);\n        }\n    }\n}\n\nvoid impairEntreBornes2(int minimum, int maximum) {\n    if (estPair(minimum)) {\n        minimum ++;\n    }\n    for (int i = minimum; i &lt;= maximum; i = i + 2) { // de 2 en 2\n        printf(\"%d\\n\", i);\n    }\n}\n</code></pre>"},{"location":"bts-1/40-fonctions/#exercice-7","title":"Exercice 7","text":"<p>Ecrire un programme de calculatrice \"simple\" :</p> <pre><code>&gt; ./exo4.exe\n1 + 2\n= 3\n\n3 / 4\n= 0.750000\n\n55 * 56\n= 3080\n\n7 - 12\n= -5\n</code></pre> <ol> <li> <p>D\u00e9clarer les fonctions qui affichent le r\u00e9sultat des 4 op\u00e9rations : addition, soustraction, multiplication et division.</p> </li> <li> <p>D\u00e9finir les 4 fonctions.</p> </li> <li> <p>Faire appel aux 4 fonctions dans une fonction principale capable de lire des calculs tant que le programme n\u2019est pas interrompu.</p> </li> </ol> Aller plus loin <ol> <li> <p>Si ce n'est pas le cas, g\u00e9rer la saisie de nombres \u00e0 virgule flottante.</p> </li> <li> <p>Proposer un syst\u00e8me pour reprendre le r\u00e9sultat du calcul pr\u00e9c\u00e9dent dans le calcul suivant.</p> </li> </ol> Solution <p>Solution \"simple\" avec un if ... else if</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid addition(int, int);\nvoid soustraction(int, int);\nvoid multiplication(int, int);\nvoid division(int, int);\n\nint main() {\n    int operand1, operand2;\n    char operation;\n\n    while(1) {\n\n        scanf(\"%d %c %d\", &amp;operand1, &amp;operation, &amp;operand2);\n\n        if (operation == '+') {\n            addition(operand1, operand2);\n        }\n        else if (operation == '-') {\n            soustraction(operand1, operand2);\n        }\n        else if (operation == '*') {\n            multiplication(operand1, operand2);\n        }\n        else if (operation == '/') {\n            division(operand1, operand2);\n        }\n        else {\n            printf(\"Operation non reconnue :\\nOperation autorisee : + - * /\\n\\n\");\n        }\n    }\n\n    return 0;\n}\n\nvoid addition(int a, int b) {\n    printf(\"= %d\\n\\n\", a + b);\n}\n\nvoid soustraction(int a, int b) {\n    printf(\"= %d\\n\\n\", a - b);\n}\n\nvoid multiplication(int a, int b) {\n    printf(\"= %d\\n\\n\", a * b);\n}\n\nvoid division(int a, int b) {\n    printf(\"= %f\\n\\n\", (float)a / (float)b);\n}\n</code></pre> <p>Solution \"simple\" avec un switch (utilisable quand toutes les conditions d'un bloc portent sur les diff\u00e9rentes valeurs d'une seule variable).</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid addition(int, int);\nvoid soustraction(int, int);\nvoid multiplication(int, int);\nvoid division(int, int);\n\nint main() {\n    int operand1, operand2;\n    char operation;\n\n    while(1) {\n\n        scanf(\"%d %c %d\", &amp;operand1, &amp;operation, &amp;operand2);\n\n        switch (operation) {\n            case '+' :\n                addition(operand1, operand2);\n                break; // Obligatoire sinon les autres  \n            case '-' :\n                soustraction(operand1, operand2);\n                break; \n            case '*' :\n                multiplication(operand1, operand2);\n                break;  \n            case '/' :\n                division(operand1, operand2);\n                break;\n            default :\n                printf(\"Operation non reconnue :\\nOperation autorisee : + - * /\\n\\n\");\n        }\n    }\n\n    return 0;\n}\n\nvoid addition(int a, int b) {\n    printf(\"= %d\\n\\n\", a + b);\n}\n\nvoid soustraction(int a, int b) {\n    printf(\"= %d\\n\\n\", a - b);\n}\n\nvoid multiplication(int a, int b) {\n    printf(\"= %d\\n\\n\", a * b);\n}\n\nvoid division(int a, int b) {\n    printf(\"= %f\\n\\n\", (float)a / (float)b);\n}\n</code></pre> <p>Solution \"Aller plus loin\" \ud83d\udcaa</p> <p>Cette version n\u00e9cessite des connaissances que vous n'avez pas encore : on stocke la saisie dans une cha\u00eene de caract\u00e8res pour l'analyser puis on utilise sscanf() une fonction qui permet de faire un scanf sur une cha\u00eene de caract\u00e8res.</p> <pre><code>#include &lt;stdio.h&gt;\n\n// Les fonctions sont modifi\u00e9es pour renvoyer le r\u00e9sultat\nfloat addition(float, float);\nfloat soustraction(float, float);\nfloat multiplication(float, float);\nfloat division(float, float);\n\nint main() {\n    float operand1, operand2;\n    char operation;\n\n    // On doit analyser la saisie. Pour faire cela, on a besoin d'un tableau de caract\u00e8res.\n    char saisie[30] = \"\";\n\n    while(1) {\n\n        // On stocke la saisie dans le tableau...\n        scanf(\"%s\", saisie);\n\n        // ... et on regarde si le premier caract\u00e8re saisi est un op\u00e9rateur\n        if (saisie[0] == '+' || saisie[0] == '-' || saisie[0] == '/' || saisie[0] == '*') {\n\n            // Si c'est le cas, on ne r\u00e9cup\u00e8re pas le premier op\u00e9rand\n            sscanf(saisie, \"%c %f\", &amp;operation, &amp;operand2);\n\n        }\n        else {\n\n            // Sinon on fait la lecture compl\u00e8te comme dans la version \"simple\".\n            sscanf(saisie, \"%f %c %f\", &amp;operand1, &amp;operation, &amp;operand2);\n\n        }\n\n        switch (operation) {\n            case '+' :\n                operand1 = addition(operand1, operand2);\n                break; // Obligatoire sinon les autres  \n            case '-' :\n                operand1 = soustraction(operand1, operand2);\n                break; \n            case '*' :\n                operand1 = multiplication(operand1, operand2);\n                break;  \n            case '/' :\n                operand1 = division(operand1, operand2);\n                break;\n            default :\n                printf(\"Operation non reconnue :\\nOperation autorisee : + - * /\\n\\n\");\n                return -1;\n        }\n    }\n\n    return 0;\n}\n\nfloat addition(float a, float b) {\n    float r = a + b;\n    printf(\"= %f\\n\\n\", r);\n    return r;\n}\n\nfloat soustraction(float a, float b) {\n    float r = a - b;\n    printf(\"= %f\\n\\n\", r);\n    return r;\n}\n\nfloat multiplication(float a, float b) {\n    float r = a * b;\n    printf(\"= %f\\n\\n\", r);\n    return r;\n}\n\nfloat division(float a, float b) {\n    float r = a / b;\n    printf(\"= %f\\n\\n\", r);\n    return r;\n}\n</code></pre> <p>R\u00e9sultats :</p> <pre><code>&gt; ./exo7.exe\n1 + 2\n= 3.000000\n\n+ 3\n= 6.000000\n\n* 4\n= 24.000000\n\n1 + 4\n= 5.000000\n\n* 5\n= 25.000000\n\n/ 3\n= 8.333333\n\n* 3.14\n= 26.166666\n\n5 + 3\n= 8.000000\n</code></pre>"},{"location":"bts-1/41-fonctions/","title":"Variables statiques","text":""},{"location":"bts-1/41-fonctions/#cours","title":"Cours","text":""},{"location":"bts-1/41-fonctions/#exercice-1","title":"Exercice 1","text":"<p>Ecrire une fonction qui compte combien de fois elle a \u00e9t\u00e9 ex\u00e9cut\u00e9e et renvoie ce nombre. </p> <p>Cr\u00e9er un programme de test qui la lance 4096 fois.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n\nint iCountMyself();\n\nint main() {\n    int count = 0;\n\n    do {\n        count = iCountMyself();\n\n        // printf(\"%d\\n\", count); // &lt;- Pour visualiser les appels \ud83e\udd13\n    }\n    while (count != 4096);\n\n    printf(\"Et voila : %d fois !\\n\", count);\n\n    return 0;\n}\n\nint iCountMyself() {\n    // D\u00e9claration de la variable statique initialis\u00e9e \u00e0 0 lors du premier appel...\n    static int count = 0; \n\n    // ... mais qui va garder sa valeur entre 2 appels de la fonction !\n    // Seule l'instruction suivante sera ex\u00e9cut\u00e9e \u00e0 chaque appel suivant.\n    return ++count;\n}\n</code></pre>"},{"location":"bts-1/41-fonctions/#exercice-2","title":"Exercice 2","text":"<p>Ecrire une fonction qui calcule le temps \u00e9coul\u00e9 depuis sa derni\u00e8re ex\u00e9cution (dans le m\u00eame programme \ud83d\ude05).</p> <p>Cr\u00e9er un programme de test qui l\u2019appelle plusieurs fois de suite en faisant des \"pauses\" entre 2 appels.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n#include &lt;windows.h&gt;\n\nint mesureEntre2Appels();\n\nint main() {\n    printf(\"%d\\n\", mesureEntre2Appels());\n    Sleep(3000);                            // On patiente 3 secondes\n    printf(\"%d\\n\", mesureEntre2Appels());\n    Sleep(5000);                            // On patiente 5 secondes\n    printf(\"%d\\n\", mesureEntre2Appels());\n\n    return 0;\n}\n\nint mesureEntre2Appels() {\n    // Une variable statique pour conserver l'heure du dernier appel de la fonction\n    // Initialis\u00e9e \u00e0 0 pour le 1er appel\n    static time_t dernierAppel = 0;\n\n    // On r\u00e9cup\u00e8re l'heure du syst\u00e8me (en secondes depuis EPOCH)\n    time_t maintenant = time(NULL);\n    int tempsEcoule = 0;\n\n    // Si ce n'est pas le premier appel, on calcule le temps \u00e9coul\u00e9 depuis le dernier appel\n    if (dernierAppel != 0) {\n        tempsEcoule = maintenant - dernierAppel;\n    }\n\n    // \u26a0\ufe0f On n'oublie pas de sauvegarder l'heure du dernier appel !\n    dernierAppel = time(NULL);\n\n    // On renvoie (ou affiche) le temps \u00e9coul\u00e9.\n    return tempsEcoule;\n}\n</code></pre>"},{"location":"bts-1/41-fonctions/#exercice-3","title":"Exercice 3","text":"<p>Calculer la somme des saisies successives d\u2019un utilisateur \u00e0 l\u2019aide d\u2019une fonction utilisant une variable statique.</p> <pre><code>&gt; ./exo3.exe\n1\n= 1\n2\n= 3\n3\n= 6\n588\n= 594\n</code></pre> Aller plus loin <p>Remettre le compteur \u00e0 0 si on saisit 0.</p> <p>Modifier la fonction et le programme de test pour r\u00e9pondre \u00e0 ce besoin.</p> <pre><code>&gt; ./exo3.exe\n1\n= 1\n2\n= 3\n3\n= 6\n0\n= 0\n32\n= 32\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n#include &lt;windows.h&gt;\n\nint addition(int);\n\nint main() {\n\n    int saisie;\n\n    printf(\"Saisir les valeur a additionner :\\n\");\n\n    while(1) {\n        scanf(\"%d\", &amp;saisie);\n        printf(\"= %d\\n\", addition(saisie));\n    }\n\n    return 0;\n}\n\nint addition(int x) {\n    static int somme = 0;\n    somme += x;\n    return somme;\n}\n</code></pre> <p>Solution Aller plus loin</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n#include &lt;windows.h&gt;\n\nint addition(int);\n\nint main() {\n\n    int saisie;\n\n    printf(\"Saisir les valeur a additionner (0 pour reinitialiser) :\\n\");\n\n    while(1) {\n        scanf(\"%d\", &amp;saisie);\n        printf(\"= %d\\n\", addition(saisie));\n    }\n\n    return 0;\n}\n\nint addition(int x) {\n    static int somme = 0;\n    if (x == 0) {\n        somme = 0;\n    }\n    somme += x;\n    return somme;\n}\n</code></pre>"},{"location":"bts-1/42-fonctions/","title":"R\u00e9cursivit\u00e9","text":""},{"location":"bts-1/42-fonctions/#cours","title":"Cours","text":""},{"location":"bts-1/42-fonctions/#exercice-1","title":"Exercice 1","text":"<p>Voici une fonction en C :</p> <pre><code>void f(int n) {\n    if (n == 0) {\n        printf(\"Partez !\");\n    }\n    else {\n        printf(\"%d\\n\", n);\n        f(n - 1);\n    }   \n}\n</code></pre> <p>1) Qu'affiche l'instruction <code>f(5)</code> ?</p> <p>2) Pourquoi dit-on de cette fonction qu'elle est r\u00e9cursive ?</p> Solution <p><code>f(5)</code> affiche :</p> <pre><code>5\n4\n3\n2\n1\nPartez !\n</code></pre> <p><code>f</code> est une fonction r\u00e9cursive car elle s'appelle elle-m\u00eame.</p>"},{"location":"bts-1/42-fonctions/#exercice-2","title":"Exercice 2","text":"<p>Ecrire une fonction r\u00e9cursive qui demande \u00e0 l'utilisateur de saisir des chiffres tant qu'il ne saisit pas un z\u00e9ro, puis lui affiche les chiffres saisis du dernier au premier.</p> <pre><code>&gt; ./exo2.exe\nSaisir des chiffres (0 pour arr\u00eater) :\n1\n2\n3\n4\n5\n6\n0\n\nOK ! Voici vos saisies en partant de la fin :\n6\n5\n4\n3\n2\n1\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n\nvoid f();\n\nint main() {\n    printf(\"Saisir des chiffres (0 pour arreter) :\\n\");\n    f();\n    return 0;\n}\n\nvoid f() {\n    int saisie;\n\n    // Saisie\n    scanf(\"%d\", &amp;saisie);\n\n    // si saisie == 0 -&gt; STOP\n    if (saisie == 0) {\n        printf(\"\\nOK ! Voici vos saisies en partant de la fin :\\n\");\n    }\n    // sinon on rappelle f puis on affiche \n    else {\n        f();\n        printf(\"%d\\n\", saisie);\n    }\n}\n</code></pre>"},{"location":"bts-1/42-fonctions/#exercice-3","title":"Exercice 3","text":"<p>R\u00e9\u00e9crire la fonction r\u00e9cursive de l'exercice 2 en limitant le nombre de saisies \u00e0 5.</p> <pre><code>&gt; ./exo.exe\nSaisir 5 chiffres :\n12\n298\n34\n470\n5\n\nEt les voici en ordre inverse :\n5\n470\n34\n298\n12\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n\nvoid f(int);\n\nint main() {\n    printf(\"Saisir 5 chiffres :\\n\");\n    f(5);\n    return 0;\n}\n\nvoid f(int i) {\n    int saisie;\n\n    // Si i == 0 -&gt; STOP !\n    if (i == 0) {\n        printf(\"\\nOK ! Voici vos saisies en partant de la fin :\\n\");\n    }\n    else {\n        // Saisie\n        scanf(\"%d\", &amp;saisie);\n        f(i - 1);\n        // Affichage\n        printf(\"%d\\n\", saisie);\n    }\n}\n</code></pre>"},{"location":"bts-1/50-pointeurs/","title":"04 - Pointeurs","text":""},{"location":"bts-1/50-pointeurs/#cours","title":"Cours","text":""},{"location":"bts-1/50-pointeurs/#exercice-1","title":"Exercice 1","text":"<p>Cr\u00e9er une fonction qui permet d\u2019intervertir les valeurs de deux variables qui lui sont fournies en param\u00e8tres.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int *, int *);\n\nint main() {\n    int a = 15, b = 42;\n\n    printf(\"1 &gt; a : %d | b : %d\\n\", a, b);\n    swap(&amp;a, &amp;b);\n    printf(\"4 &gt; a : %d | b : %d\\n\", a, b);\n\n    return 0;\n}\n\nvoid swap(int * x, int * y) {\n    printf(\"2 &gt; a : %d | b : %d\\n\", *x, *y);\n    int z = *x;\n    *x = *y;\n    *y = z;\n    printf(\"3 &gt; a : %d | b : %d\\n\", *x, *y);\n}\n</code></pre>"},{"location":"bts-1/50-pointeurs/#le-passage-darguments-a-une-fonction","title":"Le passage d'arguments \u00e0 une fonction","text":""},{"location":"bts-1/50-pointeurs/#exercice-2","title":"Exercice 2","text":"<p>Cr\u00e9er une fonction qui permet de mettre en majuscule une variable de type <code>char</code> pass\u00e9e en param\u00e8tre si sa valeur est une lettre de l\u2019alphabet.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n\nvoid uppercase(char *);\n\nint main() {\n    char c = 'a', d = 'k', e= ';';\n\n    printf(\"c : %c | d : %c | e : %c\\n\", c, d, e);\n\n    uppercase(&amp;c);\n    uppercase(&amp;d);\n    uppercase(&amp;e);\n\n    printf(\"c : %c | d : %c | e : %c\\n\", c, d, e);\n\n    return 0;\n}\n\nvoid uppercase(char * p) {\n    if (*p &gt;= 97 &amp;&amp; *p &lt;= 122) {\n        *p -= 32;\n    }\n}\n</code></pre>"},{"location":"bts-1/50-pointeurs/#exercice-3","title":"Exercice 3","text":"<p>Cr\u00e9er une fonction qui joue au bonneteau avec 3 variables qui lui sont fournies.</p> <p>Proposer \u00e0 l\u2019utilisateur de retrouver quelle variable contient une valeur.</p> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nchar melange(char *, char *, char *);\n\nint main() {\n    // Passage de la console en utf-8\n    system(\"chcp 65001\");\n    // Nettoyage de la console\n    system(\"cls\");\n\n    // Initialisation de l'al\u00e9a\n    srand(time(NULL));\n\n    char pot1 = ' ', pot2 = ' ', pot3 = ' ', tour, pot, choix;\n\n    // Pr\u00e9sentation\n    printf(\"\\n\u1559(`\u25bd\u00b4)\u1557\\n\\n\");\n    printf(\"Approchez, approchez, mesdames et messieurs !\\n\");\n    printf(\"Voici trois gobelets vides...\\n\");\n    printf(\" _   _   _\\n/ \\\\ / \\\\ / \\\\ \\n\\n\");\n\n    // D\u00e9part\n    system(\"pause\");\n    system(\"cls\");\n    printf(\"\\n(\u0ca0_\u0ca0)\\n\\n\\n\");\n    printf(\"Je place une balle sous le gobelet n\u00b0%hhd\\n\", melange(&amp;pot1, &amp;pot2, &amp;pot3));\n    printf(\" _   _   _\\n/%c\\\\ /%c\\\\ /%c\\\\ \\n\\n\", pot1, pot2, pot3);\n    system(\"pause\");\n\n    // M\u00e9lange 1\n    system(\"cls\");\n    printf(\"\\n(\u0ca0_\u0ca0)\\n\\nSuivez mes mains... si vous le pouvez !\\n\");\n    tour = rand() % 5 + 5;\n    for (int i = 0; i &lt; tour; i++) {\n        printf(\"Je m\u00e9lange...\\n\");\n        melange(&amp;pot1, &amp;pot2, &amp;pot3);\n    }\n    printf(\"La balle est maintenant ici :\\n\");\n    printf(\" _   _   _\\n/%c\\\\ /%c\\\\ /%c\\\\ \\n\\n\", pot1, pot2, pot3);\n    system(\"pause\");\n\n    // M\u00e9lange 2\n    system(\"cls\");\n    printf(\"\\n(\u21c0\u2038\u21bc\u2036)\\n\\nAttention maintenant, \u00e7a va tr\u00e8s vite !\\n\");\n    tour = rand() % 5 + 5;\n    for (int i = 0; i &lt; tour; i++) {\n        printf(\"Je m\u00e9lange...\\n\");\n        pot = melange(&amp;pot1, &amp;pot2, &amp;pot3);\n    }\n    printf(\"\\n\");\n    system(\"pause\");\n\n    // Au joueur !\n    system(\"cls\");\n    printf(\"\\n(\u25c9\u203f\u25c9)\\n\\nO\u00f9 est la balle ?\\nSous le pot 1, 2 ou 3 ???\\n\");\n    printf(\" _   _   _\\n/ \\\\ / \\\\ / \\\\ \\n\\nNum\u00e9ro du pot : \");\n    scanf(\"%hhd\", &amp;choix);\n\n    system(\"cls\");\n    if (choix == pot) {\n        printf(\"\\n(\u2565\ufe4f\u2565)\\n\\nNoooooooooooooon!\\nComment as-tu fait ? Tu as trich\u00e9 !\\n\");\n        printf(\" _   _   _\\n/%c\\\\ /%c\\\\ /%c\\\\ \\n\\n\", pot1, pot2, pot3);\n    }\n    else {\n        printf(\"\\n\u00af\\\\_( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)_/\u00af\\n\\n\\nDommage !\\n\");\n        printf(\" _   _   _\\n/%c\\\\ /%c\\\\ /%c\\\\ \\n\\n\", pot1, pot2, pot3);\n    }\n\n    return 0;\n}\n\nchar melange(char * a, char * b, char * c) {\n    char hasard = rand() % 3 + 1;\n    *a = ' ';\n    *b = ' ';\n    *c = ' ';\n    switch(hasard) {\n        case 1 : \n            *a = 'o';\n            break;\n        case 2 : \n            *b = 'o';\n            break;\n        case 3 : \n            *c = 'o';\n            break;\n    }\n    return hasard;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/","title":"05 - Tableaux","text":""},{"location":"bts-1/60-tableaux/#cours","title":"Cours","text":""},{"location":"bts-1/60-tableaux/#exercice-1","title":"Exercice 1","text":"<p>Ecrire un programme <code>exo1.c</code> qui permet de </p> <ol> <li> <p>Saisir 3 entiers et de les stocker dans un tableau,</p> </li> <li> <p>Afficher les 3 entiers avec un seul printf.</p> </li> </ol> <pre><code>&gt; ./exo1.exe\nSaisir un entier : 2\nSaisir un entier : 6\nSaisir un entier : 3\n\nLes entiers sont 2, 6, 3\n</code></pre> Aller plus loin <p>Refaire l\u2019exercice en notation pointeur \ud83d\udc7f</p> Solution <p>En notation tableau : </p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int mon_beau_tableau[3];\n\n    // Lecture\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", &amp;mon_beau_tableau[0]);\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", &amp;mon_beau_tableau[1]);\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", &amp;mon_beau_tableau[2]);\n\n    // Affichage\n    printf(\"Les entiers sont %d, %d, %d\", \n            mon_beau_tableau[0], \n            mon_beau_tableau[1], \n            mon_beau_tableau[2]\n    );\n\n    return 0;\n}\n</code></pre> <p>En notation pointeur :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int mon_beau_tableau[3];\n\n    // Lecture\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", mon_beau_tableau);\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", mon_beau_tableau + 1);\n    printf(\"Saisir un entier : \");\n    scanf(\"%d\", mon_beau_tableau + 2);\n\n    // Affichage\n    printf(\"Les entiers sont %d, %d, %d\", \n            *mon_beau_tableau, \n            *(mon_beau_tableau + 1), \n            *(mon_beau_tableau + 2)\n    );\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-2","title":"Exercice 2","text":"<p>Ecrire un programme <code>exo2.c</code> qui :</p> <ol> <li> <p>demande \u00e0 l\u2019utilisateur de saisir 5 notes qu'il stocke dans un tableau,</p> </li> <li> <p>affiche les notes saisies</p> </li> <li> <p>qui affiche la moyenne des notes saisies.</p> </li> </ol> <pre><code>&gt; ./exo_2.exe\nSaisir 5 notes :\n#1 : 12\n#2 : 5.5\n#3 : 14\n#4 : 16.5\n#5 : 19\n\nLes notes saisies sont : 12.0, 5.5, 14.0, 16.5, 19.0.\n\nLa moyenne est de 13.4.\n</code></pre> Aller plus loin 1 <p>Utiliser 3 boucles diff\u00e9rentes pour chaque action (for, while et do/while).</p> Aller plus loin 2 <p>Refaire l\u2019exercice en notation pointeur \ud83d\ude08</p> Aller plus loin 3 <p>D\u00e9placer le calcul de la moyenne dans une fonction.</p> Solution <p>Solution \"simple\" :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    float notes[5], moyenne = 0;\n\n    // Lecture\n    printf(\"Saisir 5 notes :\\n\");\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"%d: \", i + 1);\n        scanf(\"%f\", &amp;notes[i]);\n    }\n\n    // Affichage\n    printf(\"\\nLes notes saisies sont : \");\n    for (int i = 0; i &lt; 5; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%.1f\", notes[i]);\n    }\n    printf(\".\\n\\n\");\n\n    // Moyenne\n    for (int i = 0; i &lt; 5; i++) {\n        moyenne += notes[i];\n    }\n    moyenne /= 5;\n    printf(\"La moyenne est de %.1f.\", moyenne);\n\n    return 0;\n}\n</code></pre> <p>Aller plus loin 1 : </p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    float notes[5], moyenne = 0;\n    int i;\n\n    // Lecture\n    printf(\"Saisir 5 notes :\\n\");\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"%d: \", i + 1);\n        scanf(\"%f\", &amp;notes[i]);\n    }\n\n    // Affichage\n    printf(\"\\nLes notes saisies sont : \");\n    i = 0;\n    while (i &lt; 5) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%.1f\", notes[i]);\n        i++;\n    }\n    printf(\".\\n\\n\");\n\n    // Moyenne\n    i = 0;\n    do {\n        moyenne += notes[i++];\n    }\n    while (i &lt; 5);\n    moyenne /= 5;\n    printf(\"La moyenne est de %.1f.\", moyenne);\n\n    return 0;\n}\n</code></pre> <p>Aller plus loin 2 : </p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    float notes[5], moyenne = 0;\n\n    // Lecture\n    printf(\"Saisir 5 notes :\\n\");\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"%d: \", i + 1);\n        scanf(\"%f\", notes + i);\n    }\n\n    // Affichage\n    printf(\"\\nLes notes saisies sont : \");\n    for (int i = 0; i &lt; 5; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%.1f\", *(notes + i));\n    }\n    printf(\".\\n\\n\");\n\n    // Moyenne\n    for (int i = 0; i &lt; 5; i++) {\n        moyenne += *(notes + i);\n    }\n    moyenne /= 5;\n    printf(\"La moyenne est de %.1f.\", moyenne);\n\n    return 0;\n}\n</code></pre> <p>Aller plus loin 3 : </p> <pre><code>#include &lt;stdio.h&gt;\n\n#define TAILLE 5\n\nfloat moyenne(float *, int);\n\nint main() {\n\n    float notes[TAILLE];\n\n    // Lecture\n    printf(\"Saisir %d notes :\\n\", TAILLE);\n    for (int i = 0; i &lt; TAILLE; i++) {\n        printf(\"%d: \", i + 1);\n        scanf(\"%f\", notes + i);\n    }\n\n    // Affichage\n    printf(\"\\nLes notes saisies sont : \");\n    for (int i = 0; i &lt; TAILLE; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%.1f\", *(notes + i));\n    }\n    printf(\".\\n\\n\");\n\n    // Moyenne\n    printf(\"La moyenne est de %.1f.\", moyenne(notes, TAILLE));\n\n    return 0;\n}\n\nfloat moyenne(float * tab, int taille) {\n    float moyenne = 0;\n    for (int i = 0; i &lt; taille; i++) {\n        moyenne += tab[i];\n    }\n    moyenne /= taille;\n    return moyenne;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-3","title":"Exercice 3","text":"<p>Ecrire un programme <code>exo_3.c</code> qui stocke les multiples de 5 de 0 \u00e0 255 dans un tableau puis les affiche en ordre inverse \u00e0 partir du tableau.</p> Solution <p>Solution avec 2 indices</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    // 52 valeurs \u00e0 stocker\n    int multiplesDe5[52];\n\n    // Parcours de tous les nombres de 0 \u00e0 255\n    // j va servir d'indice pour le tableau multiplesDe5\n    for (int i = 0, j = 0; i &lt;= 255; i++) {\n        // Si i est multiple de 5...\n        if (i % 5 == 0) {\n            // ...on le stocke dans le tableau\n            multiplesDe5[j] = i;\n            j++;\n        }\n    }\n\n    // Affichage en ordre inverse\n    for (int i = 51; i &gt;= 0; i--)\n    {\n        printf(\"%d\\n\", multiplesDe5[i]);\n    }\n\n    return 0;\n}\n</code></pre> <p>Solution avec un pointeur</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    // 52 valeurs \u00e0 stocker\n    int multiplesDe5[52];\n    int * p = multiplesDe5;\n\n    // Parcours de tous les nombres de 0 \u00e0 255\n    for (int i = 0; i &lt;= 255; i++) {\n        // Si i est multiple de 5...\n        if (i % 5 == 0) {\n            // ...on le stocke dans le tableau\n            *(p) = i;\n            p++;\n        }\n    }\n\n    // Affichage en ordre inverse\n    do {\n        p--;\n        printf(\"%d\\n\", *p);\n    } while (p != multiplesDe5);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-4","title":"Exercice 4","text":"<p>Dans un programme <code>exo_4.c</code> :</p> <ol> <li> <p>Initialiser un tableau avec le nombre de jours de chaque mois (31 jours en janvier, 28 en f\u00e9vrier...).</p> </li> <li> <p>En se servant de ce tableau, \u00e9crire un programme qui affiche le num\u00e9ro du jour dans l'ann\u00e9e d'une date saisie (format <code>JJ/MM</code>) sans tenir compte des ann\u00e9es bissextiles \ud83d\ude05</p> </li> </ol> <pre><code>Saisir une date : 07/09\nC'est le 250\u00e8me jour de l'ann\u00e9e !\n</code></pre> Avez-vous pens\u00e9 \u00e0 tout ? <ul> <li> <p>Avez-vous pens\u00e9 \u00e0 l'affichage du premier jour de l'ann\u00e9e ?</p> </li> <li> <p>Est-ce que votre programme accepte la date 30/02 ou 32/13 ?</p> </li> </ul> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    int nbJoursParMois[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }, \n        nbJours = 0, jour = 0, mois = 0;\n\n    // Saisie\n    do {\n        printf(\"Saisir une date (JJ/MM) : \");\n        scanf(\"%2d/%2d\", &amp;jour, &amp;mois);\n    }\n    while (jour &lt; 1 || jour &gt; nbJoursParMois[mois - 1] || mois &lt; 1 || mois &gt; 12);\n\n    // Comptage\n    for (int i = 0; i &lt; mois - 1; i++) {\n        nbJours += nbJoursParMois[i];\n    }\n    nbJours += jour;\n\n    // Affichage\n    printf(\"C'est le %d%s jour de l'ann\u00e9e !\", nbJours, nbJours == 1 ? \"er\" : \"\u00e8me\");\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-5","title":"Exercice 5","text":"<p>Reprendre le code de l'exercice 4 dans un programme <code>exo_5.c</code>, permettre la saisie de date au format <code>JJ/MM/AAAA</code> et g\u00e9rer le cas des ann\u00e9es bissextiles !</p> <pre><code>Saisir une date : 07/09/2024\nC'\u00e9tait le 251\u00e8me jour de l'ann\u00e9e 2024 !\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    int nbJoursParMois[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }, \n        nbJours = 0, jour = 0, mois = 0, annee = 0;\n\n    // Saisie\n    do {\n        printf(\"Saisir une date (JJ/MM/AAAA) : \");\n        scanf(\"%2d/%2d/%4d\", &amp;jour, &amp;mois, &amp;annee);\n    }\n    while (jour &lt; 1 || jour &gt; nbJoursParMois[mois - 1] || mois &lt; 1 || mois &gt; 12);\n\n    // Comptage\n    for (int i = 0; i &lt; mois - 1; i++) {\n        nbJours += nbJoursParMois[i];\n        // On traite le cas du mois de f\u00e9vrier les annn\u00e9es bissextiles\n        if (i == 1 &amp;&amp; ((annee % 4 == 0 &amp;&amp; annee % 100 != 0) || (annee % 400 == 0))) {\n            nbJours += 1;\n        }\n    }\n    nbJours += jour;\n\n    // Affichage\n    printf(\"C'est le %d%s jour de l'ann\u00e9e !\", nbJours, nbJours == 1 ? \"er\" : \"\u00e8me\");\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-6","title":"Exercice 6","text":"<p>Cr\u00e9er un programme <code>exo_6.c</code> qui :</p> <ul> <li> <p>cr\u00e9e deux tableaux de tailles diff\u00e9rentes (utiliser des constantes pour pouvoir modifier la taille des tableaux \u00e0 volont\u00e9 (du prof\u2026)),</p> </li> <li> <p>puis les remplit chacun avec des chiffres cons\u00e9cutifs,</p> </li> <li> <p>enfin les fusionne dans un seul nouveau tableau.</p> </li> </ul> <pre><code>Premier tableau [4] : 1, 2, 3, 4\nDeuxi\u00e8me tableau [3] : 5, 6, 7\nTableau fusionn\u00e9 [7] : 1, 2, 3, 4, 5, 6, 7\n</code></pre> Aller plus loin <p>D\u00e9placer le remplissage et la fusion dans des fonctions.</p> Solution <p>Version longue et r\u00e9p\u00e9titive :</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define TAILLE1 5\n#define TAILLE2 6\n\nint main() {\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    int tab1[TAILLE1], tab2[TAILLE2], tab3[TAILLE1 + TAILLE2], i, compteur = 1;\n\n    // Remplissage du 1er tableau\n    for (i = 0; i &lt; TAILLE1; i++, compteur++) {\n        tab1[i] = compteur;\n    }\n\n    // Remplissage du 2\u00e8me tableau\n    for (i = 0; i &lt; TAILLE2; i++, compteur++) {\n        tab2[i] = compteur;\n    }\n\n    // Remplissage du 3\u00e8me tableau \u00e0 partir du 1er et du 2\u00e8me\n    for (i = 0; i &lt; TAILLE1 + TAILLE2; i++) {\n        if (i &lt; TAILLE1) {\n            tab3[i] = tab1[i];\n        }\n        else {\n            tab3[i] = tab2[i - TAILLE1];\n        }\n    }\n\n    // Affichage\n    printf(\"Premier tableau [%d] : [ \", TAILLE1);\n    for (int i = 0; i &lt; TAILLE1; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%d\", tab1[i]);\n    }\n    printf(\" ]\");\n\n    printf(\"\\nDeuxi\u00e8me tableau [%d] : [ \", TAILLE2);\n    for (int i = 0; i &lt; TAILLE2; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%d\", tab2[i]);\n    }\n    printf(\" ]\");\n\n    printf(\"\\nTableau fusionn\u00e9 [%d] : [ \", TAILLE1 + TAILLE2);\n    for (int i = 0; i &lt; TAILLE1 + TAILLE2; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%d\", tab3[i]);\n    }\n    printf(\" ]\");\n\n    return 0;\n}\n</code></pre> <p>Version courte :</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define TAILLE1 5\n#define TAILLE2 6\n\nvoid initializeTab(int*, int, int);\nvoid mergeTab(int*, int, int*, int, int*);\nvoid printfIntTab(int*, int);\n\nint main() {\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    int tab1[TAILLE1], tab2[TAILLE2], tab3[TAILLE1 + TAILLE2];\n\n    // Remplissage des tableaux\n    initializeTab(tab1, TAILLE1, 1);\n    initializeTab(tab2, TAILLE2, TAILLE1 + 1);\n\n    // Fusion\n    mergeTab(tab1, TAILLE1, tab2, TAILLE2, tab3);\n\n    // Affichage\n    printf(\"Premier tableau [%d] : \", TAILLE1);\n    printfIntTab(tab1, TAILLE1);\n    printf(\"\\nDeuxi\u00e8me tableau [%d] : \", TAILLE1);\n    printfIntTab(tab2, TAILLE1);\n    printf(\"\\nTableau fusionn\u00e9 [%d] : \", TAILLE1 + TAILLE2);\n    printfIntTab(tab3, TAILLE1 + TAILLE2);\n\n\n    return 0;\n}\n\nvoid initializeTab(int* a, int s, int v) {\n    for (int i = 0; i &lt; s; i++) {\n        a[i] = v++;\n    }\n}\n\nvoid mergeTab(int* a1, int s1, int* a2, int s2, int* a3) {\n    for (int i = 0; i &lt; s1 + s2; i++) {\n        if (i &lt; s1) {\n            a3[i] = a1[i];\n        }\n        else {\n            a3[i] = a2[i - TAILLE1];\n        }\n    }\n}\n\nvoid printfIntTab(int* a, int s) {\n    printf(\"[ \");\n    for (int i = 0; i &lt; s; i++) {\n        if (i != 0) {\n            printf(\", \");\n        }\n        printf(\"%d\", a[i]);\n    }\n    printf(\" ]\");\n}\n</code></pre>"},{"location":"bts-1/60-tableaux/#exercice-7","title":"Exercice 7","text":"<p>\ud83d\udcdd A faire sur papier.</p> <p>Soit le programme suivant :</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int tab[6] = { 42, 8, 4, 16, 23, 15 }, temp;\n\n    for (int i = 1; i &lt;= 6; i++) {\n        for (int j = 0; j &lt; 5; j++) {\n            if (tab[j] &gt; tab[j + 1]) {\n                temp = tab[j];\n                tab[j] = tab[j + 1];\n                tab[j + 1] = temp;\n            }\n        }\n    }\n\n    // Affichage du tableau\n\n    return 0;\n}\n</code></pre> <ul> <li> <p>Donner l'\u00e9tat de la m\u00e9moire du programme apr\u00e8s la premi\u00e8re ex\u00e9cution de la premi\u00e8re boucle <code>for</code></p> </li> <li> <p>Donner l'\u00e9tat de la m\u00e9moire du programme apr\u00e8s la deuxi\u00e8me ex\u00e9cution de la premi\u00e8re boucle <code>for</code></p> </li> <li> <p>Quel est le but de ce programme ?</p> </li> <li> <p>Coder l'affichage du tableau.</p> </li> </ul> Success <p></p>"},{"location":"bts-1/70-strings/","title":"Les cha\u00eenes de caract\u00e8res","text":""},{"location":"bts-1/70-strings/#exercice-8","title":"Exercice 8","text":"<p>Ecrire un programme exo_8.c qui affiche le deuxi\u00e8me, le quatri\u00e8me et le septi\u00e8me caract\u00e8re d'une cha\u00eene saisie au clavier (10 caract\u00e8res maximum).</p> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char input[11] = \"\";\n\n    printf(\"Saisir une chaine de 10 caracteres : \");\n\n    while (strlen(input) != 10) {\n        gets(input);\n    }\n\n    printf(\"Caracteres  n\u00b02 : %c, n\u00b04 : %c et n\u00b07 : %c\\n\", input[1], input[3], input[6]);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/70-strings/#exercice-9","title":"Exercice 9","text":"<p>Ecrire un programme exo_9.c qui :</p> <ol> <li> <p>d'abord, cr\u00e9e une cha\u00eene de caract\u00e8res (20 caract\u00e8res maximum),</p> </li> <li> <p>puis, y stocke la saisie de l'utilisateur lue caract\u00e8re par caract\u00e8re jusqu'\u00e0 ce que la cha\u00eene soit remplie,</p> Oh oh... \ud83d\ude23 <p>Des difficult\u00e9s \u00e0 lire successivement des caract\u00e8res ?</p> <p>Qu'est-ce qu'on a dit en cours sur <code>scanf</code> et sa m\u00e9moire tampon (buffer) ?</p> </li> <li> <p>ensuite, affiche la cha\u00eene,</p> </li> <li> <p>finalement, affiche la cha\u00eene en ordre inverse.</p> </li> </ol> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n\n    char string[21] = \"\", temp;\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    puts(\"Saisir 20 caract\u00e8res :\");\n    for (int i = 0; i &lt; 20; i++) {\n        printf(\"#%02d : \", i + 1);\n\n        // Lecture caract\u00e8re par caract\u00e8re\n        scanf(\"%c\", string + i);\n        // \ud83d\udca1 Pour se d\u00e9barasser du '\\n' qui reste dans le buffer de scanf !\n        scanf(\"%c\", &amp;temp); \n\n        // Autre solution :\n        // char input[2];\n        // gets(input);\n        // sscanf(input, \"%c\", string + i);\n    }\n\n    // On n'oublie pas de mettre un \\0 \u00e0 la fin\n    string[20] = '\\0';\n\n    // Affichage dans l'ordre\n    printf(\"\\nCha\u00eene saisie : %s\\n\", string);\n\n    // Affichage dans l'ordre inverse\n    printf(\"\\nCha\u00eene saisie en ordre inverse : \");\n    for (int i = 19; i &gt;= 0; i--) {\n        printf(\"%c\", string[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/70-strings/#exercice-10","title":"Exercice 10","text":"<p>Ecrire un programme exo_10.c qui affiche le nombre de fois o\u00f9 le caract\u00e8re 'a' est pr\u00e9sent dans la cha\u00eene \"It's gonna be legend... wait for it... dary!\".</p> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n\n    char string[] = \"It's gonna be legend... wait for it... dary!\";\n    int count = 0;\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    for (int i = 0; i &lt; strlen(string); i++) {\n        if (string[i] == 'a') {\n            count++;\n        }\n    }\n\n    printf(\"Il y a %d 'a' dans %s\", count, string);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/70-strings/#exercice-11","title":"Exercice 11","text":"<p>Reprendre l'exercice 10 dans un nouveau programme exo_11.c :</p> <ol> <li> <p>En rendant le caract\u00e8re et la cha\u00eene saisissables par l'utilisateur.</p> </li> <li> <p>En recherchant minuscule et majuscule du caract\u00e8re saisi pour les 26 lettres non accentu\u00e9es.</p> </li> </ol> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\nint main() {\n\n    char string[100] = \"\", letter = 0;\n    int count = 0;\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    // Saisie\n    puts(\"Saisir une phrase :\");\n    gets(string);\n    while (!(letter &gt;= 'a' &amp;&amp; letter &lt;= 'z' || letter &gt;= 'A' &amp;&amp; letter &lt;= 'Z')) {\n        printf(\"Caract\u00e8re recherch\u00e9 : \");\n        scanf(\"%c\", &amp;letter);\n    }\n\n    // On s'assure d'avoir une minuscule\n    letter = tolower(letter);\n\n    // Comptage\n    for (int i = 0; i &lt; strlen(string); i++) {\n        if (string[i] == letter || string[i] == letter - 32) {\n            count++;\n        }\n    }\n\n    printf(\"Il y a %d '%c' dans %s\", count, letter, string);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/70-strings/#exercice-12-chiffrage-de-cesar","title":"Exercice 12 - Chiffrage de C\u00e9sar","text":"<p>Proposer un programme permettant de chiffrer et d\u00e9chiffrer un message gr\u00e2ce au chiffrage de C\u00e9sar.</p> <pre><code>&gt; cryptage.exe\nMessage : Salut, comment allez-vous ?\nD\u00e9calage : 1\nR\u00e9sultat : 1tbmvudpnnfoubmmfawpvt\n</code></pre> <p>La permutation est cyclique !</p> <p>ex : <code>'z' + 2 = 'b'</code> !</p> <p><pre><code>&gt; decryptage.exe\nMessage : 1tbmvudpnnfoubmmfawpvt\nR\u00e9sultat : salutcommentallezvous\n</code></pre> </p> <p>Avez-vous pens\u00e9 \u00e0 tout ?</p> <ul> <li> <p> Fonction de nettoyage du texte :</p> <ul> <li> <p> Supprime les espaces</p> </li> <li> <p> Supprime les caract\u00e8res non alphab\u00e9tiques</p> </li> <li> <p> Remplace les caract\u00e8res accentu\u00e9s par leur \u00e9quivalent non-accentu\u00e9</p> </li> <li> <p> Transforme les caract\u00e8res alphab\u00e9tiques en minuscules</p> </li> </ul> </li> <li> <p> Fonction de chiffrage :</p> <ul> <li> Permute les caract\u00e8res de mani\u00e8re cyclique</li> </ul> </li> <li> <p> Fonction de d\u00e9chiffrage :</p> <ul> <li> Permute les caract\u00e8res de mani\u00e8re cyclique</li> </ul> </li> <li> <p> Aller plus loin</p> <ul> <li> <p> Offusquer la cl\u00e9 dans le message de mani\u00e8re efficace</p> </li> <li> <p> On peut passer le message et le d\u00e9calage via la ligne de commande</p> </li> <li> <p> Proposer un chiffrage par d\u00e9calage plus robuste \u00e0 une attaque brute force</p> </li> </ul> </li> </ul>"},{"location":"bts-1/71-strings/","title":"Les experts - Laval","text":""},{"location":"bts-1/71-strings/#contexte","title":"Contexte","text":"<p>Mme H.GENNERO, r\u00e9sidant au 18 rue du Gu\u00e9 d'Orger \u00e0 Laval, s'est pr\u00e9sent\u00e9e ce matin au poste de police o\u00f9 vous officez en tant que technicien de police scientifique. </p> <p>Elle aurait aper\u00e7u son ex-compagnon, M. H.GRUBER, \u00e0 plusieurs reprises \u00e0 proximit\u00e9 de son domicile entre le 1er et le 25 novembre 2024. Sous le coup d'une injonction d'\u00e9loignement de 500 m, celui-ci est \u00e9quip\u00e9 d'un bracelet anti-rapprochement. Toutefois vos coll\u00e8gues du p\u00f4le national de t\u00e9l\u00e9surveillance et assistance n'ont pas relev\u00e9 d'alerte sur cette p\u00e9riode. </p> <p>L'inspecteur J.MCLANE convoque M. H.GRUBER. Durant son interrogatoire, vous \u00eates mandat\u00e9 pour analyser le fichier de journalisation des g\u00e9olocalisations du bracelet de M. H.GRUBER. Ce fichier contient les traces NMEA r\u00e9guli\u00e8rement g\u00e9n\u00e9r\u00e9es par le capteur GPS du bracelet entre le 1er et 25 novembre 2024.</p> <p> T\u00e9l\u00e9charger le fichier de journalisation</p>"},{"location":"bts-1/71-strings/#votre-mission","title":"Votre mission","text":"<p>Cr\u00e9er un programme permettant d'analyser le fichier de journalisation fourni et de g\u00e9n\u00e9rer un fichier CSV (s\u00e9parateur point-virgule (;)) contenant la liste des g\u00e9olocalisations contrevenant \u00e0 l'injonction d'\u00e9loignement de M. H. GRUBER.</p> <p>Pour chaque g\u00e9olocalisation, les informations suivantes devront \u00eatre mentionn\u00e9es :</p> <ul> <li>Date (<code>jj/mm/aaaa</code>),</li> <li>Heure (<code>hh:mm:ss</code>),</li> <li>Les coordonn\u00e9es GPS en degr\u00e9s d\u00e9cimaux (<code>DD.DDDDDD</code>),</li> <li>La distance \u00e0 vol d'oiseau calcul\u00e9e en m\u00e8tres (<code>m</code>).</li> </ul>"},{"location":"bts-1/71-strings/#analyse","title":"Analyse \ud83d\udd0d","text":"<p>Voici la liste des points \u00e0 \u00e9claircir avant de coder :</p> <ul> <li> <p> Lire un fichier CSV en C \ud83d\udcc4</p> <ul> <li> <p> Lire un fichier texte ligne par ligne</p> </li> <li> <p> S\u00e9parer les donn\u00e9es de chaque ligne suivant un s\u00e9parateur (token)</p> </li> </ul> </li> <li> <p> D\u00e9coder une trame NMEA \ud83d\udef0\ufe0f</p> <ul> <li> <p> V\u00e9rifier le checksum</p> </li> <li> <p> R\u00e9cup\u00e9rer l'heure</p> </li> <li> <p> R\u00e9cup\u00e9rer et convertir la latitude et la longitude en degr\u00e9s d\u00e9cimaux</p> </li> </ul> </li> <li> <p> Calculer la date \ud83d\udcc6</p> </li> <li> <p> Calculer une distance \u00e0 vol d'oiseau \u00e0 partir de coordonn\u00e9es GPS \ud83d\udd4a\ufe0f</p> Calculer la distance entre deux points du globe \ud83c\udf0d \u00e0 partir de leurs coordonn\u00e9es GPS \ud83d\udef0\ufe0f <p>La distance d entre deux points A et B sera calcul\u00e9e en utilisant la formule suivante :</p> \\[\\begin{split} &amp;x=(longitudeB-longitudeA)\\times\\cos(\\frac{latitudeA+latitudeB}{2}) \\\\ &amp;y=latitudeB-latitudeA \\\\ &amp;d=\\sqrt{x^2+y^2}\\times6371 \\end{split}\\] <p>Notes : </p> <ul> <li> <p>Dans cette formule, les latitudes et longitudes sont exprim\u00e9es en radians. </p> </li> <li> <p>6371 correspond au rayon de la terre en km.</p> </li> </ul> </li> <li> <p> Ecrire un fichier CSV en C \u270f\ufe0f</p> </li> </ul>"},{"location":"bts-1/71-strings/#developpement-incremental","title":"D\u00e9veloppement incr\u00e9mental","text":""},{"location":"bts-1/71-strings/#lire-un-fichier-ligne-par-ligne","title":"Lire un fichier ligne par ligne","text":"<p>Coder le programme suivant :</p> <p></p> Code en C <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    char cheminFichierLog[] = \"gruber_20241126.log\",\n        ligne[100];\n\n    FILE * fichierLog = NULL;\n\n    // Ouverture du fichier\n    fichierLog = fopen(cheminFichierLog, \"r\");\n\n    // V\u00e9rification\n    if (fichierLog == NULL) {\n        puts(\"Erreur lors de l'ouverture en lecture du fichier de log\");\n        return -1;\n    }\n\n    // Lecture ligne \u00e0 ligne\n    while (fgets(ligne, 100, fichierLog) != NULL) {\n        printf(ligne);\n    }\n\n    // Fermeture du fichier\n    fclose(fichierLog);\n\n    return 0;\n}\n</code></pre> <p> Transformer ce programme en fonction et la stocker dans une biblioth\u00e8que <code>experts.h</code></p> Code en C <p> <code>experts.h</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid lireFichier(char *);\n\nvoid lireFichier(char * cheminFichier) {\n    char ligne[100];\n\n    FILE * fichier = NULL;\n\n    fichier = fopen(cheminFichier, \"r\");\n    if (fichier == NULL) {\n        puts(\"Erreur lors de l'ouverture en lecture du fichier de log\");\n        exit(-1);\n    }\n\n    while (fgets(ligne, 100, fichier) != NULL) {\n        printf(ligne);\n    }\n\n    fclose(fichier);\n}\n</code></pre> <p> <code>experts.c</code></p> <pre><code>#include \"experts.h\"\n\nint main() {\n\n    lireFichier(\"gruber_20241126.log\");\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/71-strings/#verifier-le-checksum-dune-trame-nmea","title":"V\u00e9rifier le checksum d'une trame NMEA","text":"<p>Cr\u00e9er un programme qui isole, calcule et v\u00e9rifie le checksum de la trame NMEA suivante :</p> <pre><code>$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\n</code></pre> Indice 1 <p>S'inspirer des exemples fournis sur cette page.</p> Code en C <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    char trame[] = \"$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\";\n    char checksumCalcule = 0, checksumLu;\n    int i;\n\n    // Calcul du checksum\n    for (i = 1; trame[i] != '*'; i++) {\n        checksumCalcule ^= trame[i];    \n    }\n\n    // Lecture du checksum\n    sscanf(trame + i + 1, \"%x\", &amp;checksumLu);\n\n    // Comparaison\n    if (checksumCalcule == checksumLu) {\n        puts(\"OK !\");\n    }\n    else {\n        puts(\"KO...\");\n    }\n\n    return 0;\n}\n</code></pre> <p> Transformer ce programme en fonction, la stocker dans une biblioth\u00e8que <code>experts.h</code> et tester avec d'autres trames.</p> Code en C <p> <code>experts.h</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// [...]\nint verifierChecksumNMEA(char *);\n\n// [...]\nint verifierChecksumNMEA(char * trame) {\n    char checksumCalcule = 0, checksumLu;\n    int i;\n\n    // Calcul du checksum\n    for (i = 1; trame[i] != '*'; i++) {\n        checksumCalcule ^= trame[i];\n    }\n\n    // Lecture du checksum\n    sscanf(trame + i + 1, \"%x\", &amp;checksumLu);\n\n    // Comparaison\n    return checksumCalcule == checksumLu;\n}\n</code></pre> <p> <code>experts.c</code></p> <pre><code>#include \"experts.h\"\n\nint main() {\n\n    if (verifierChecksumNMEA(\"$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\")) {\n        puts(\"OK !\");\n    }\n    else {\n        puts(\"KO...\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/71-strings/#separer-les-donnees-de-chaque-ligne-suivant-un-separateur-token","title":"S\u00e9parer les donn\u00e9es de chaque ligne suivant un s\u00e9parateur (token)","text":"<p>Cr\u00e9er un programme qui lit la ligne suivante, extrait chacune des valeurs dans une chaine de caract\u00e8res et les affiche.</p> <pre><code>$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\n</code></pre> Indice 1 <p>Utiliser un tableau de cha\u00eenes de caract\u00e8res</p> Indice 2 <p>Utiliser la fonction strtok()</p> Code en C <p>Solution avec un tableau de tableau qui r\u00e9cup\u00e8re toutes les valeurs (quand on veut tout r\u00e9cup\u00e9rer) :</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n\n    char ligne[] = \"$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\";\n    char valeurs[12][13] = { \"\" };\n    int i = 0;\n\n    char * valeur = strtok (ligne, \",\");\n    while (valeur != NULL) {\n        strcpy(valeurs[i++], valeur);\n        valeur = strtok (NULL, \",\");\n    }\n\n    for (int i = 0; i &lt; 12; i++) {\n        puts(valeurs[i]);\n    }\n\n    return 0;\n}\n</code></pre> <p>Solution avec des variables diff\u00e9renci\u00e9es (quand on ne veut r\u00e9cup\u00e9rer que certaines valeurs)</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n\n    char ligne[] = \"$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\";\n    char heure[11], latitude[12], longitude[13], ns[2], we[2];\n    int i = 0;\n    char * valeur = NULL;\n\n    valeur = strtok(ligne, \",\");\n    for (int i = 1; valeur != NULL; i++) {\n        switch(i) {\n            case 2 : strcpy(heure, valeur);     break;\n            case 3 : strcpy(latitude, valeur);  break;\n            case 4 : strcpy(ns, valeur);        break;\n            case 5 : strcpy(longitude, valeur); break;\n            case 6 : strcpy(we, valeur);        break;\n        }\n        valeur = strtok(NULL, \",\");\n    }\n\n    puts(heure);\n    puts(latitude);\n    puts(ns);\n    puts(longitude);\n    puts(we);\n\n    return 0;\n}\n</code></pre> <p> Transformer ce programme en fonction, la stocker dans une biblioth\u00e8que <code>experts.h</code> et tester avec d'autres trames.</p> Code en C <p> <code>experts.h</code></p> <pre><code>// [...]\n#include &lt;string.h&gt;\n\n// [...]\nvoid extraireValeurs(char *, char *, char *, char *, char *, char*);\n\n// [...]\nvoid extraireValeurs(char * ligne, char * heure, char * latitude, char * ns, char * longitude, char* we) {\n    char * valeur = NULL;\n\n    valeur = strtok(ligne, \",\");\n    for (int i = 1; valeur != NULL; i++) {\n        switch(i) {\n            case 2 : strcpy(heure, valeur);     break;\n            case 3 : strcpy(latitude, valeur);  break;\n            case 4 : strcpy(ns, valeur);        break;\n            case 5 : strcpy(longitude, valeur); break;\n            case 6 : strcpy(we, valeur);        break;\n        }\n        valeur = strtok(NULL, \",\");\n    }\n}\n</code></pre> <p> <code>experts.c</code></p> <pre><code>#include \"experts.h\"\n\nint main() {\n\n    char trame[] = \"$GPGGA,080104.555,4804.656727,N,00047.507355,W,1,04,3.8,88.27,M,,,,,0000*3E\";\n    char heureTxt[11], latitudeTxt[12], longitudeTxt[13], ns[2], we[2];\n\n    extraireValeurs(trame, heureTxt, latitudeTxt, ns, longitudeTxt, we);\n\n    puts(heureTxt);\n    puts(latitudeTxt);\n    puts(ns);\n    puts(longitudeTxt);\n    puts(we);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/71-strings/#convertir-les-donnees-lues","title":"Convertir les donn\u00e9es lues","text":"<p>Cr\u00e9er une fonction pour chacune des conversions suivantes :</p> <ul> <li> <p>Passer d'une heure au format <code>hhmmss.sss</code> au format <code>hh:mm:ss</code></p> Code en C <pre><code>void convertirHeure(char * nmea, char * resultat) {\n    sprintf(resultat, \"%c%c:%c%c:%c%c\", nmea[0], nmea[1], nmea[2], nmea[3], nmea[4], nmea[5]);\n}\n</code></pre> </li> <li> <p>Passer d'une coordonn\u00e9e au format DDDMM.MMMMMM + N/S ou E/W au format (-)DDD.DDDDDD</p> Code en C <pre><code>float convertirCoordonnees(char * coordonnee, char * direction) {\n    char * point = NULL, degres[4] = \"\";\n    float resultat;\n\n    // Recup\u00e9ration des degr\u00e9s\n    point = strchr(coordonnee, '.');\n    strncpy(degres, coordonnee, point - coordonnee - 2);\n    resultat = atof(degres);\n\n    // Extraction des minutes et conversion en degr\u00e9s\n    resultat += atof(point - 2) / 60;\n\n    // Gestion de la direction\n    if (*direction == 'S' || *direction == 'W') {\n        resultat *= -1;\n    }\n\n    return resultat;\n}\n</code></pre> </li> </ul>"},{"location":"bts-1/71-strings/#calculer-une-distance-a-vol-doiseau","title":"Calculer une distance \u00e0 vol d'oiseau","text":"<p>Cr\u00e9er une fonction qui calcule la distance \u00e0 vol d'oiseau entre deux points \u00e0 partir de leurs coordonn\u00e9es GPS (en degr\u00e9s d\u00e9cimaux).</p> Indice <p></p> <p>J'ai l'impression qu'on se r\u00e9p\u00e8te...</p> Code en C <pre><code>// Biblioth\u00e8que pour obtenir PI, cos, pow et sqrt\n#define _USE_MATH_DEFINES\n#include &lt;math.h&gt;\n\nfloat convertirDegresEnRadians(float);\nfloat calculerDistance(float, float, float, float);\n\nint main() {\n\n    printf(\"%f\\n\", calculerDistance(48.07429936102162, -0.7680080793209888, 48.07352056412836, -0.7723579441783978)); \n\n    // 334,87m d'apr\u00e8s Google Maps\n\n    return 0;\n}\n\nfloat convertirDegresEnRadians(float angle) {\n    return angle * M_PI / 180;\n}\n\nfloat calculerDistance(float latA, float lngA, float latB, float lngB) {\n    float distance = 0;\n\n    // Conversion en radian\n    latA = convertirDegresEnRadians(latA);\n    lngA = convertirDegresEnRadians(lngA);\n    latB = convertirDegresEnRadians(latB);\n    lngB = convertirDegresEnRadians(lngB);\n\n    // Calcul de la distance\n    return sqrt(pow((lngB - lngA) * cos((latA + latB) / 2), 2) + pow(latB - latA, 2)) * 6371 * 1000;\n}\n</code></pre>"},{"location":"bts-1/71-strings/#premiere-integration","title":"Premi\u00e8re int\u00e9gration","text":"<p>A partir de la biblioth\u00e8que <code>experts.h</code> suivante, cr\u00e9er un programme qui lit le fichier <code>gruber_20241126.log</code> et affiche pour les trames valides dont la distance avec le domicile de Mme H.GENNERO est inf\u00e9rieure \u00e0 500 m :</p> <ul> <li>Date (<code>jj/mm/aaaa</code>),</li> <li>Heure (<code>hh:mm:ss</code>),</li> <li>Les coordonn\u00e9es GPS en degr\u00e9s d\u00e9cimaux (<code>DD.DDDDDD</code>),</li> <li>La distance \u00e0 vol d'oiseau calcul\u00e9e en m\u00e8tres (<code>m</code>).</li> </ul> <p> T\u00e9l\u00e9charger la biblioth\u00e8que experts.h</p> Premi\u00e8re version <p> <code>experts.h</code></p> <p>On choisit de traiter le fichier ligne \u00e0 ligne, tout le traitement va donc \u00eatre r\u00e9alis\u00e9 dans la fonction <code>lireFichier</code>.</p> <pre><code>void lireFichier(char * cheminFichier) {\n    char ligne[100], nmeaHeure[10], nmeaLatitude[12], nmeaNS[2], nmeaLongitude[13], nmeaWS[2], heure[9], date[] = \"01/11/2024\";\n    float latitude, longitude, distance;\n    int heureCourante, heurePrecedente = 0;\n\n    FILE * fichier = NULL;\n\n    fichier = fopen(cheminFichier, \"r\");\n    if (fichier == NULL) {\n        puts(\"Erreur lors de l'ouverture en lecture du fichier de log\");\n        exit(-1);\n    }\n\n    // Pour chaque ligne...\n    while (fgets(ligne, 100, fichier) != NULL) {\n\n        // ...on v\u00e9rifie le checksum...\n        if (verifierChecksumNMEA(ligne)) {\n\n            // ...on extrait les valeurs...\n            extraireValeurs(ligne, nmeaHeure, nmeaLatitude, nmeaNS, nmeaLongitude, nmeaWS);\n\n            // ...convertit l'heure en texte...\n            convertirHeure(nmeaHeure, heure);\n\n            // ...puis en entier pour voir si on a chang\u00e9 de journ\u00e9e et g\u00e9rer la date...\n            heureCourante = extraireHeure(heure);\n            if (heureCourante &lt; heurePrecedente) {\n                incrementerDate(date);\n            }\n            heurePrecedente = heureCourante;\n\n            // ...puis on convertit les coordonn\u00e9es...\n            latitude = convertirCoordonnees(nmeaLatitude, nmeaNS);\n            longitude = convertirCoordonnees(nmeaLongitude, nmeaWS);\n\n            // ...pour calculer la distance...\n            distance = calculerDistance(48.06410268512942, -0.7801647985752476, latitude, longitude);\n\n            // ...pour enfin v\u00e9rifier si elle est inf\u00e9rieure \u00e0 500 m...\n            if (distance &lt; 500) {\n\n                // finalement on affiche les informations demand\u00e9es\n                printf(\"%s %s (%f, %f) %f m\\n\", date, heure, latitude, longitude, distance);\n            }\n        }\n    }\n\n    fclose(fichier);\n}\n</code></pre> <p> <code>experts.c</code></p> <p>La fonction principale se r\u00e9sume \u00e0 un appel \u00e0 la fonction <code>lireFichier</code>.</p> <pre><code>#include \"experts.h\"\n\nint main() {\n\n    lireFichier(\"gruber_20241126.log\");\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-1/71-strings/#suite-et-fin","title":"Suite et fin","text":""},{"location":"bts-1/71-strings/#generer-un-fichier-texte","title":"G\u00e9n\u00e9rer un fichier texte","text":"<p>R\u00e9aliser les exercices suivants :</p> <ul> <li> <p>Cr\u00e9er une fonction qui cr\u00e9e un fichier <code>exo1.txt</code> et le remplit en une seule fois avec une phrase pass\u00e9e en param\u00e8tre. </p> <p>La tester avec la phrase :</p> <pre><code>Le courage n'est pas l'absence de peur, mais la capacit\u00e9 de vaincre ce qui fait peur.\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid exo1(char * chaine) {\n    FILE * fichier = NULL;\n\n    fichier = fopen(\"exo1.txt\", \"w\");\n\n    if (fichier == NULL) {\n        puts(\"Exo 1 - Erreur lors de l'ouverture.\");\n        exit(-1);\n    }\n\n    fputs(chaine, fichier);\n\n    fclose(fichier);\n}\n\nint main() {\n    exo1(\"Le courage n'est pas l'absence de peur, mais la capacit\u00e9 de vaincre ce qui fait peur.\");\n\n    return 0;\n}\n</code></pre> </li> <li> <p>Cr\u00e9er une fonction qui cr\u00e9e un fichier <code>exo2.txt</code> et le remplit 5 caract\u00e8res par 5 caract\u00e8res avec une phrase pass\u00e9e en param\u00e8tre.</p> <p>La tester avec la phrase :</p> <pre><code>Quand on veut on peut, quand on peut on doit.\n</code></pre> Solution <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nvoid exo2(char * chaine) {\n    FILE * fichier = NULL;\n    int i = 0;\n\n    fichier = fopen(\"exo2.txt\", \"w\");\n\n    if (fichier == NULL) {\n        puts(\"Exo 2 - Erreur lors de l'ouverture.\");\n        exit(-1);\n    }\n\n    // Par soucis de g\u00e9n\u00e9ricit\u00e9, pour ne pas d\u00e9passer la longueur \n    // de la cha\u00eene pour les chaines dont la taille n'est pas un \n    // multiple de 5, on s'arr\u00eate 5 caract\u00e8res avant la fin.\n    for (i = 0; i &lt; strlen(chaine) - 5; i += 5) {\n        fwrite(chaine + i, sizeof(char), 5, fichier);\n    }\n\n    // On \u00e9crit finalement le reliquat (de 1 \u00e0 5 caract\u00e8res)\n    fwrite(chaine + i, sizeof(char), strlen(chaine) - i, fichier);\n\n    fclose(fichier);\n}\n\nint main() {\n    exo2(\"Quand on veut o123n peut, quand on peut on doit.\");\n\n    return 0;\n}\n</code></pre> </li> <li> <p>Cr\u00e9er une fonction qui cr\u00e9e un fichier <code>exo3.txt</code> et le remplit caract\u00e8re par caract\u00e8re avec une phrase pass\u00e9e en param\u00e8tre.</p> <p>La tester avec le texte :</p> <pre><code>Entre :\nCe que je pense,\nCe que je veux dire, \nCe que je crois dire, \nCe que je dis, \nCe que vous avez envie d'entendre, \nCe que vous entendez, \nCe que vous comprenez... \nIl y a dix possibilit\u00e9s qu'on ait des difficult\u00e9s \u00e0 communiquer. \nMais essayons quand m\u00eame...\n</code></pre> </li> <li> <p>Cr\u00e9er une fonction qui cr\u00e9e un fichier <code>exo4.csv</code> (s\u00e9parateur : tabulation) et le remplit avec les valeurs de 3 tableaux pass\u00e9es en param\u00e8tres.</p> <p>La tester avec les tableaux suivants :</p> <pre><code>[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]\n\n[ 1.2, 3.4, 5.6, 6.7, 8.9, 0.1, 2.3, 4.5, 6.7, 8.9 ]\n\n[ Archibald, Tryphon, Piotr, Bianca, Tchang, Abdallah, Roberto, S\u00e9raphin, Allan, Oliveira ]\n</code></pre> </li> </ul>"},{"location":"bts-1/71-strings/#programme-final","title":"Programme final","text":"Solution"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/","title":"01 - Algorithmique","text":""},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-11","title":"MxSTI 1.1","text":"<p>Dans chaque cas un bool\u00e9en est renvoy\u00e9. Lequel ?</p> <ul> <li><code>2 &gt; 4</code></li> <li><code>3 != 4</code></li> <li><code>2 &lt; 5 &amp;&amp; 5 &gt;= 3</code></li> <li><code>2 &lt; 5 || 4 &lt; 0</code></li> <li><code>! (2 &lt; 3 || 1 &gt; 2)</code></li> </ul>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-12","title":"MxSTI 1.2","text":"<p>Qu'affiche le programme suivant si on saisit <code>Sacha</code> \u00e0 la ligne 7 ?</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    char a, b, c, d, e, f, g, h = 0;\n\n    scanf(\"%c%c%c%c%c\", &amp;a, &amp;b, &amp;c, &amp;d, &amp;e);\n\n    f = c - '1' + '\\n' * 3;\n\n    g = ++d + 0xA - sizeof(1234567890) * 2;\n\n    h = d - !(b == e &amp;&amp; h);\n\n    printf(\"%c%c%c%xc%c%c\", f, d, g, 's' - d, h, a + 34);\n\n    return 0;\n}\n</code></pre> A toutes fins utiles <p></p>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-13","title":"MxSTI 1.3","text":"<p>On ex\u00e9cute l\u2019algorithme suivant en saisissant <code>N = 2</code></p> <pre><code>VARIABLES :\n    N est un entier\n    U, V, W sont des r\u00e9els\n    K est un entier\nDEBUT :\n    Affecter 0 \u00e0 K\n    Affecter 2 \u00e0 U\n    Affecter 10 \u00e0 V\n    Saisir N\n    Tant que K &lt; N\n        Affecter K + 1 \u00e0 K\n        Affecter U \u00e0 W\n        Affecter (2 * U + V) / 3 \u00e0 U\n        Affecter (W + 3 * V) / 4 \u00e0 V\n    Fin tant que\n    Afficher U\n    Afficher V\nFIN\n</code></pre> <p>Donner l\u2019\u00e9tat des variables au cours de l\u2019ex\u00e9cution de l\u2019algorithme.</p> <p>Traduire en C et v\u00e9rifier les r\u00e9sultats trouv\u00e9s.</p> Tu ne sais pas traduire le \"tant que...\" ? <p>Documentation en ligne </p>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-14","title":"MxSTI 1.4","text":"<p>On souhaite \u00e9crire une s\u00e9quence d\u2019instructions qui calcule :</p> \\[ \\frac{1}{1}\\times\\frac{1}{3}...\\times\\frac{1}{2k+1}\\times...\\times\\frac{1}{51} \\] <p>Un \u00e9l\u00e8ve propose le programme suivant, mais rien ne s\u2019affiche dans la console.</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    float p = 1;\n    int k = 0;\n    while (2 * k + 1 &lt;= 51) {\n        p = p * 1 / (2 * k + 1);\n    }\n    printf(\"%f\", p);\n} \n</code></pre> <ol> <li>Expliquer ce qu\u2019il se passe et rectifier le programme.</li> <li>Proposer un autre programme qui effectue la m\u00eame t\u00e2che avec une boucle born\u00e9e (boucle <code>for</code>).</li> </ol>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-15","title":"MxSTI 1.5","text":"<p>On cherche \u00e0 d\u00e9terminer les solutions strictement positives de l\u2019\u00e9quation :</p> \\[ e^x+e^{-x}-4x-2=0 \\]"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#question-1","title":"Question 1","text":"<p>On note \\(f\\) la fonction d\u00e9finie sur l\u2019intervalle \\([0,+\\infty[\\) par : </p> <p>pour tout \\(x&gt;0\\), \\(f(x)=e^x+e^{-x}-4x-2\\)</p> <p>V\u00e9rifier que pour tout \\(x&gt;0\\),</p> \\[ f(x)=x(\\frac{e^x}{x}-4)+e^{-x}-2 \\] <p>En d\u00e9duire </p> \\[ \\lim_{x \\to +\\infty}f(x) \\]"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#question-2","title":"Question 2","text":"<p>On admet que le tableau de signe de \\(f'\\) est le suivant :</p> \\(x\\) \\(0\\) \\(ln(2+\\sqrt{5})\\) \\(+\\infty\\) \\(f\u2019(x)\\) \\(-\\) \\(0\\) \\(+\\) <p>Dresser le tableau de variations de la fonction \\(f\\) et d\u00e9montrer que l\u2019\u00e9quation \\(f(x)= 0\\) admet une unique solution strictement positive \\(\\alpha\\).</p>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#question-3","title":"Question 3","text":"<p>On consid\u00e8re l\u2019algorithme de dichotomie suivant :</p> <pre><code>VARIABLES :\n    a, b et m sont des nombres r\u00e9els\n\nINITIALISATION :\nAffecter \u00e0 a la valeur 2\nAffecter \u00e0 b la valeur 3\n\nTRAITEMENT :\nTant que b - a &gt; 0,1\n    Affecter \u00e0 m la valeur (a + b) / 2\n    Si f(m) &gt; 0 alors\n        Affecter \u00e0 b la valeur de m\n    Sinon\n        Affecter \u00e0 a la valeur de m\n    Fin Si\nFin Tant que\nAfficher a et b\n</code></pre> <ol> <li>Ex\u00e9cuter cet algorithme en notant dans un tableau, les valeurs de <code>a</code>, <code>b</code>, <code>b-a</code> et <code>m</code>.</li> <li>Que repr\u00e9sentent les valeurs affich\u00e9es par cet algorithme ?</li> <li>Ecrire en C une fonction qui met en \u0153uvre l\u2019algorithme pr\u00e9c\u00e9dent. Documenter cette fonction.</li> <li>Modifier cette fonction pour qu\u2019elle renvoie une valeur de \\(\\alpha\\) \u00e0 \\(10^{-3}\\) pr\u00e8s.</li> </ol>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-16","title":"MxSTI 1.6","text":"<p>Avec des cubes identiques, on construit des pyramides comme indiqu\u00e9 ci-dessous :</p> <p></p> <ol> <li> <p>Combien de cubes sont n\u00e9cessaires pour construire une pyramide \u00e0 4 \u00e9tages\u00a0? A 5 \u00e9tages\u00a0?</p> </li> <li> <p>Proposer une fonction \u00ab\u00a0pyramide\u00a0\u00bb en C qui permet, pour un entier N donn\u00e9, de renvoyer le nombre de cubes n\u00e9cessaires pour construire une pyramide \u00e0 N \u00e9tages.</p> </li> <li> <p>Faire fonctionner le programme pour qu\u2019il renvoie le nombre de cubes n\u00e9cessaires pour construire une pyramide \u00e0 20 \u00e9tages, puis 30 \u00e9tages.</p> </li> <li> <p>On dispose de 5\u00a0000 cubes. On voudrait savoir quel est le nombre maximal d\u2019\u00e9tages que l\u2019on peut construire. Proposer un programme en C qui, pour un entier K donn\u00e9, renvoie le nombre maximal d\u2019\u00e9tages que l\u2019on peut construire avec K cubes, ainsi que le nombre de cubes non utilis\u00e9s.</p> </li> </ol>"},{"location":"bts-1/Maths%20x%20STI/10-algorithmique/#mxsti-17","title":"MxSTI 1.7","text":"<p>Un jeune d\u00e9veloppeur web demande votre aide pour am\u00e9liorer son animation d\u2019une c\u00e9l\u00e8bre voiture des ann\u00e9es 90.</p> <p>Il vous envoie le fichier suivant :</p> <p>kitt.html</p> <p>Il souhaiterait que le mouvement du faisceau ait l\u2019air moins \"molasson\" et plus \"amorti\" quand il s\u2019approche des extr\u00e9mit\u00e9s.</p> <ol> <li> <p>T\u00e9l\u00e9charger le fichier et \u00e9tudier le programme et suivre l\u2019\u00e9volution de la variable <code>step</code>.  Entre quelles valeurs et \u00e0 quel pas \u00e9volue-t-elle ?</p> <p>La fonction <code>console.log()</code> permet d\u2019afficher le contenu d\u2019une variable dans la console Javascript, elle-m\u00eame accessible via les outils du d\u00e9veloppeur en appuyant sur F12 dans le navigateur.</p> <p>En Javascript, les variables ne sont pas typ\u00e9es et si elles sont introduites par le mot-cl\u00e9 <code>var</code>, elles sont consid\u00e9r\u00e9es comme globales\u2026</p> </li> <li> <p>La variation de la vitesse attendue doit \u00eatre la m\u00eame dans les deux directions.  Ajouter une variable <code>x</code> dans la fonction <code>delay</code>. Trouver un calcul qui, en fonction de la valeur de <code>step</code>, donne \u00e0 <code>x</code> une valeur croissante quelque soit la direction du faisceau.</p> </li> <li> <p>Dessiner sur papier une courbe d\u2019\u00e9volution des valeurs renvoy\u00e9es par <code>delay</code> en fonction de <code>x</code> pour simuler l\u2019amorti \u00e0 l\u2019approche des extr\u00e9mit\u00e9s.</p> </li> <li> <p>A l\u2019aide de GeoGebra, trouver une fonction permettant de coder tout ou partie la courbe dessin\u00e9e \u00e0 la question pr\u00e9c\u00e9dente.</p> </li> <li> <p>Impl\u00e9menter votre courbe d\u2019\u00e9volution de la vitesse dans la fonction <code>delay</code>.</p> </li> </ol>"},{"location":"bts-1/Maths%20x%20STI/20-bdd/","title":"02 - Bases de donn\u00e9es","text":""},{"location":"bts-1/Maths%20x%20STI/20-bdd/#support","title":"Support","text":""},{"location":"bts-1/Maths%20x%20STI/20-bdd/#fichiers","title":"Fichiers","text":"<p>bts1_bdd_fichiers.zip</p> <p>Mot de passe : cybers\u00e9curit\u00e9-informatique-r\u00e9seaux</p>"},{"location":"bts-1/Maths%20x%20STI/20-bdd/#repartir-du-bon-pied","title":"Repartir du bon pied","text":"<p>Dans DBeaver :</p> <ol> <li> <p>Supprimer la base de donn\u00e9es \u00e0 remplacer en cliquant-droit sur la base de donn\u00e9es factures puis en choisissant l'action Supprimer.</p> </li> <li> <p>Cr\u00e9er une nouvelle base de donn\u00e9es factures en r\u00e9p\u00e9tant les \u00e9tapes de la section 3.3 du support.</p> <p></p> </li> <li> <p>Importer la table produit en en cliquant-droit sur la base de donn\u00e9es factures puis en choisissant l'action Outils &gt; Restore database.</p> <p></p> </li> <li> <p>Dans la fen\u00eatre Database Import, charger le fichier dump-factures-produits.sql dans le champ Input File</p> </li> <li> <p>Cliquer sur D\u00e9marrage.</p> </li> <li> <p>Une fois l'import termin\u00e9, fermer la fen\u00eatre d'import et reprendre \u00e0 partir de la section 3.7 du support.</p> </li> </ol>"},{"location":"bts-1/Maths%20x%20STI/20-bdd/#un-peu-dentrainement","title":"Un peu d'entra\u00eenement","text":"<p>Pour cet entra\u00eenement, nous utiliserons la base de donn\u00e9es MONDIAL. </p> <p>Il s'agit d'une base de donn\u00e9es r\u00e9lationnelle qui compile un certain nombre de donn\u00e9es g\u00e9ographiques et qui est g\u00e9r\u00e9e par l'universit\u00e9 de G\u00f6ttingen (derni\u00e8re mise \u00e0 jour en 2015).</p> <p>Il est possible d'interagir avec elle en utilisant un formulaire que l'on trouve \u00e0 l'adresse : http://www.semwebtech.org/sqlfrontend/</p> <ol> <li> <p>Afficher la liste des tables de cette BDR.</p> <p>Saisir la requ\u00eate : </p> <pre><code>SELECT table_name FROM user_tables\n</code></pre> <p>puis cliquer sur send.</p> <p>Vous devez obtenir la liste des 47 noms des tables pr\u00e9sentes dans cette base de donn\u00e9es.</p> </li> <li> <p>Description de la table <code>COUNTRY</code>.</p> <p>Envoyer la requ\u00eate suivante puis interpr\u00e9ter le r\u00e9sultat.</p> <pre><code>DESC COUNTRY\n</code></pre> <p>L'attribut <code>NULLABLE</code> affich\u00e9 (<code>Yes</code> ou <code>No</code>) permet de d\u00e9finir si, lors de l'insertion, l'information est obligatoire ou pas.</p> </li> <li> <p>Exploration d'une table.</p> <p>Avant d'envoyer les requ\u00eates suivantes, les interpr\u00e9ter (= les traduire en fran\u00e7ais)</p> <pre><code>SELECT name FROM country\n\nSELECT name , capital FROM country\n\nSELECT name , capital FROM country ORDER BY name\n\nSELECT * FROM country\n</code></pre> </li> <li> <p>On peut ajouter des filtres pour affiner les crit\u00e8res de s\u00e9lection \u00e0 l'aide d'une clause <code>WHERE</code> et combiner ces filtres \u00e0 l'aide des op\u00e9rateurs logiques <code>AND</code> et <code>OR</code>. </p> <p>Exemple : </p> <pre><code>/* Afficher la liste des pays ayant plus de 60 millions d'habitants */\nSELECT name, population FROM country WHERE population &gt; 60000000\n\n/* Afficher la liste des pays ayant plus de 60 millions d'habitants ET dont le nom commence par un E */\nSELECT name, population FROM country WHERE population &gt; 60000000 AND name LIKE 'E%'\n</code></pre> <p>Liste d'op\u00e9rateurs de comparaisons utilisables :</p> <ul> <li><code>=</code>  (\u00e9gal)</li> <li><code>&lt;&gt;</code> (diff\u00e9rent de)</li> <li><code>&gt;</code> (sup\u00e9rieur)   <code>&lt;</code> (inf\u00e9rieur)  <code>&gt;=</code> (sup\u00e9rieur ou \u00e9gal)    <code>&lt;=</code> (inf\u00e9rieur ou \u00e9gal)</li> <li><code>IS NULL</code> (n'a pas de valeur)   <code>IS NOT NULL</code></li> <li><code>LIKE '%'</code> (comparaison avec un mod\u00e8le)</li> <li><code>IN (a, b...)</code> (dans une liste)</li> </ul> <p>Afficher la liste des pays ayant moins de 10 habitants au km\u00b2.</p> <p>Afficher la liste des villes de la zone tropicale ayant plus de 1 million d'habitants.</p> </li> <li> <p>On peut trier les r\u00e9sultats \u00e0 l'aide du mot-cl\u00e9s <code>ORDER BY</code>.</p> <pre><code>/* Afficher les pays par ordre alphab\u00e9tique */\nSELECT name FROM country ORDER BY name\n</code></pre> <p><code>ORDER BY</code> doit toujours \u00eatre en fin de requ\u00eate.</p> <p>Afficher la liste des pays par ordre d\u00e9croissant de population.</p> <p>Afficher la liste des villes fran\u00e7aise du nord au sud.</p> </li> <li> <p>Un certains nombres de fonctions permettent d'effectuer des transformations sur les valeurs de chaque ligne.</p> <p>En voici une liste non-exhaustive :</p> Fonctions Description <code>UPPER(string)</code> Renvoie la cha\u00eene de caract\u00e8res en param\u00e8tre en majuscules <code>ROUND(reel [,precision])</code> Renvoie le r\u00e9el en param\u00e8tre arrondi \u00e0 la pr\u00e9cision demand\u00e9e sinon \u00e0 l'entier <code>NOW()</code> Renvoie la date et l'heure du syst\u00e8me <code>TIMEDIFF(date1, date2)</code> Renvoie le nombre d'heure entre les deux dates <code>COALESCE(valeur, valeur...)</code> Renvoie la premi\u00e8re valeur non nulle <pre><code>/* Afficher la liste des religions en France et la part de la population qui s'en revendique arrondie \u00e0 l'entier */\nSELECT name, round(percentage) as pourcentage FROM religion WHERE country = 'F'\n</code></pre> <p>Afficher les noms des villes en majuscules et leur population, si il n'y a pas de valeur, afficher -1</p> <p>Des fonctions d'<code>aggr\u00e9gations</code> permettent de r\u00e9aliser des op\u00e9rations sur l'ensemble des lignes du r\u00e9sultat de la requ\u00eate.</p> <p>En voici une liste non-exhaustive :</p> Fonctions Description <code>AVG()</code> Renvoie la moyenne sur un ensemble d'enregistrement <code>COUNT()</code> Renvoie le nombre de lignes renvoy\u00e9es <code>MAX()</code> Renvoie la valeur maximale <code>MIN()</code> Renvoie la valeur minimale <code>SUM()</code> Renvoie la somme <p>Une fonction d'aggr\u00e9gation s'utilise soit seule pour r\u00e9cup\u00e9rer une valeur \u00e0 l'\u00e9chelle de la table :</p> <pre><code>/* Afficher la population de la ville la plus peupl\u00e9e */\nSELECT MAX(population) FROM city\n</code></pre> <p>soit accompagn\u00e9 d'un <code>GROUP BY</code> pour \u00eatre calcul\u00e9e sur un sous-ensemble de r\u00e9sultats :</p> <pre><code>/* Afficher la population de la ville la plus peupl\u00e9e de chaque pays */\nSELECT country, max(population) FROM city GROUP BY country\n\n/* Afficher le nombre de villes de France pr\u00e9sentes dans la base */\nSELECT country, count(name) FROM city WHERE country = 'F' GROUP BY country\n</code></pre> <p>Afficher la population de la ville la plus peupl\u00e9e de France</p> <p>Afficher le nombre de pays dans le monde</p> </li> <li> <p>Jointures</p> <p>L'int\u00e9r\u00eat d'une base de donn\u00e9es r\u00e9side en particulier dans la possibilit\u00e9 de croiser des informations pr\u00e9sentes dans plusieurs tables par l'interm\u00e9diaire d'une jointure.</p> <p>Dans la base de donn\u00e9es que nous utilisons, on trouve une table nomm\u00e9e encompasses (traduction  : englobe).</p> <p>Saisir la requ\u00eate qui permet d'afficher les attributs de la table encompasses.</p> <p>Le premier attribut d'un enregistrement de cette table est le code du pays, le deuxi\u00e8me le nom du continent et le dernier la portion du pays pr\u00e9sente sur ce continent. </p> <p>La cl\u00e9 primaire de cette table est le couple (Country ; Continent) et la valeur du troisi\u00e8me argument ne peut pas \u00eatre nulle.</p> <p>Cette table encompasses poss\u00e8de un attribut en commun avec la premi\u00e8re table country. Indiquer lequel.</p> <p>Cet attribut commun va nous permettre de croiser les informations de ces deux tables.</p> <p>Le croisement de celles-ci revient \u00e0 cr\u00e9er une table virtuelle contenant les informations des deux tables et qui poss\u00e8dera donc ici 9 attributs :</p> <p></p> <p>Le principe d'une requ\u00eate de jointure est : </p> <pre><code>SELECT * FROM table1 JOIN table2 ON expression_logique\n</code></pre> <p>Par exemple, la requ\u00eate suivante affiche tous les attributs de la jointure des tables country et encompasses dont une fraction au moins est en Europe.</p> <pre><code>SELECT * FROM country \nJOIN encompasses ON country.code = encompasses.country \nWHERE encompasses.continent = 'Europe'\n</code></pre> <p>Ex\u00e9cuter cette requ\u00eate.</p> <p>Modifier cette requ\u00eate pour n'afficher que la liste des pays europ\u00e9ens.</p> <p>Modifier la requ\u00eate pour afficher la liste des pays \u00e0 cheval entre l'Europe et un autre continent.</p> </li> <li> <p>Exercices</p> <p>R\u00e9diger une requ\u00eate SQL pour obtenir le nom des pays qui sont \u00e0 cheval sur plusieurs continents.</p> <p>R\u00e9diger une requ\u00eate SQL pour obtenir les pays du contient am\u00e9ricain qui comptent moins de 10 habitants par km\u00b2</p> </li> </ol>"},{"location":"bts-1/Maths%20x%20STI/30-integrales/","title":"Int\u00e9grales","text":"<p> T\u00e9l\u00e9charger le support</p> Solution <p>Solution avec les rectangles</p> <p>Certains seront tent\u00e9s d'avoir une approche \"math\u00e9matiques\" du probl\u00e8me :</p> <pre><code>float i = 0;\nfloat pas = 1.0f / 10;\nfor (i = 0; i &lt; 1; i += pas) {\n    printf(\"%.10f\\n\", i);\n}\n</code></pre> <p>Ce qui donne :</p> <pre><code>0.0000000000\n0.1000000015\n0.2000000030\n0.3000000119\n0.4000000060\n0.5000000000\n0.6000000238\n0.7000000477\n0.8000000715\n0.9000000954\n</code></pre> <p>\ud83d\ude31</p> <p>Les probl\u00e8mes de pr\u00e9cision avec les nombres \u00e0 virgule flottante en C (et dans beaucoup d'autres langages) viennent du fait que ces nombres sont repr\u00e9sent\u00e9s en binaire, et non en d\u00e9cimal. Le format de repr\u00e9sentation des nombres \u00e0 virgule flottante, bas\u00e9 sur le standard IEEE 754, utilise une quantit\u00e9 fixe de bits (g\u00e9n\u00e9ralement 32 bits pour un float ou 64 bits pour un double) pour stocker les nombres.</p> <p>Cela signifie que certains nombres d\u00e9cimaux, comme 0.1, ne peuvent pas \u00eatre repr\u00e9sent\u00e9s de mani\u00e8re exacte en binaire. Par exemple, 0.1 en binaire est une fraction p\u00e9riodique, tout comme \u2153 est une fraction p\u00e9riodique en d\u00e9cimal. En cons\u00e9quence, le r\u00e9sultat de certaines op\u00e9rations comme 1.0 / 10 peut souffrir de petites erreurs d'arrondi.</p> <p>C'est pourquoi, lorsqu'on travaille avec des float ou double, il est fr\u00e9quent de rencontrer de petites impr\u00e9cisions. Ces erreurs peuvent \u00eatre visibles lorsque des calculs impliquent des valeurs qui ne peuvent pas \u00eatre repr\u00e9sent\u00e9es exactement dans le format binaire.</p> <p>Utilisons donc le nombre d'intervalles (int) et non le pas (float) pour r\u00e9aliser notre boucle <code>for</code>.</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nfloat f(float);\n\nfloat aireMethode1(float, float, float);\nfloat aireMethode2(float, float, float);\nfloat aireMethode3(float, float, float);\n\nint main() {\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    puts(\"Aire avec la m\u00e9thode des rectangles au-dessous\");\n    printf(\"avec 10 intervalles : %f\\n\",  aireMethode1(0, 1, 10));\n    printf(\"avec 50 intervalles : %f\\n\",  aireMethode1(0, 1, 50));\n    printf(\"avec 100 intervalles : %f\\n\", aireMethode1(0, 1, 100));\n\n    puts(\"Aire avec la m\u00e9thode des rectangles au-dessus\");\n    printf(\"avec 10 intervalles : %f\\n\",  aireMethode2(0, 1, 10));\n    printf(\"avec 50 intervalles : %f\\n\",  aireMethode2(0, 1, 50));\n    printf(\"avec 100 intervalles : %f\\n\", aireMethode2(0, 1, 100));\n\n    puts(\"Aire avec la m\u00e9thode des rectangles au milieu\");\n    printf(\"avec 10 intervalles : %f\\n\",  aireMethode3(0, 1, 10));\n    printf(\"avec 50 intervalles : %f\\n\",  aireMethode3(0, 1, 50));\n    printf(\"avec 100 intervalles : %f\\n\", aireMethode3(0, 1, 100));\n\n    return 0;\n}\n\nfloat f(float x) {\n    return x * x;\n}\n\nfloat aireMethode1(float debut, float fin, float intervalles) {\n    float somme = 0;\n    float pas = (fin - debut) / intervalles;\n\n    // Veiller \u00e0 utiliser des valeurs pr\u00e9cises pour s'assurer d'avoir le bon nombre d'it\u00e9rations        \n    for (int i = 0; i &lt; intervalles; i++) { \n        somme += f(i * pas) * pas;\n    }\n    return somme;\n}\n\nfloat aireMethode2(float debut, float fin, float intervalles) {\n    float somme = 0;\n    float pas = (fin - debut) / intervalles;\n    for (int i = 0; i &lt; intervalles; i++) {\n        somme += f(i * pas + pas) * pas;\n    }\n    return somme;\n}\n\nfloat aireMethode3(float debut, float fin, float intervalles) {\n    float somme = 0;\n    float pas = (fin - debut) / intervalles;\n    for (int i = 0; i &lt; intervalles; i++) {\n        somme += f(i * pas + pas / 2) * pas;\n    }\n    return somme;\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/","title":"01 - Du C au C++","text":""},{"location":"bts-2/10-du-c-au-cpp/#cours","title":"Cours","text":""},{"location":"bts-2/10-du-c-au-cpp/#exercice-0","title":"Exercice 0","text":"<p>Ecrire un programme en C++ qui affiche <code>hello, world!</code></p> Indice <p>Trame de base d'un programme en C++</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n\n}\n</code></pre> Indice <p>Compilation</p> <pre><code>&gt; g++ exo0.cpp -o exo.exe\n</code></pre> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"hello, world!\";\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-1","title":"Exercice 1","text":"<p>Ecrire un programme en C++ qui calcule la racine carr\u00e9e de nombres fournis par l'utilisateur. </p> <p>Il refusera les valeurs n\u00e9gatives et s'arr\u00eatera si on lui fournit 0.</p> Indice <p>Proc\u00e9der par \u00e9tapes</p> Indice <ol> <li> <p>Ecrire un programme en C++ qui lit et affiche une saisie num\u00e9rique de l\u2019utilisateur</p> </li> <li> <p>Compl\u00e9ter en ajoutant le test pour les valeurs n\u00e9gatives</p> </li> <li> <p>Compl\u00e9ter en affichant la racine carr\u00e9e</p> </li> <li> <p>Compl\u00e9ter en ajoutant la boucle qui s\u2019arr\u00eate si on saisit 0</p> </li> </ol> Indice <p><code>sqrt()</code> est dans la biblioth\u00e8que cmath.</p> Correction <pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nint main() {\n    int input;\n\n    cout &lt;&lt; endl &lt;&lt; \"-= Calcul de racine carr\u00e9e =-\" &lt;&lt; endl &lt;&lt; endl;\n\n    cout &lt;&lt; \"Entrer 0 pour quitter.\" &lt;&lt; endl &lt;&lt; endl;\n\n    do {\n\n        cout &lt;&lt; \"Entrer une valeur positive : \";\n        cin &gt;&gt; input;\n        if (input &lt; 0) {\n            cout &lt;&lt; \"J'ai dit P-O-S-I-T-I-V-E !!!\" &lt;&lt; endl;\n            continue;\n        }\n        if (input &gt; 0) {\n            cout &lt;&lt; \"Racine carr\u00e9e : \" &lt;&lt; sqrt(input) &lt;&lt; endl;\n        }\n    }\n    while(input != 0);\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-2","title":"Exercice 2","text":"<p>Ecrire deux fonctions de swap utilisant :</p> <ol> <li>le passage par adresse</li> <li>le passage par r\u00e9f\u00e9rence</li> </ol> <p>et le programme principal de test les utilisant en C++.</p> Aller plus loin <p>Trouver une m\u00e9thode de swap sans utiliser de 3<sup>\u00e8me</sup> variable.</p> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid swapByAddr(int *, int *);\nvoid swapByRef(int &amp;, int &amp;);\n// Aller plus loin\nvoid swapWithoutTemp(int &amp;, int &amp;);\n\nint main() {\n    int x = 12, y = -4;\n\n    cout &lt;&lt; \"1/ x : \" &lt;&lt; x &lt;&lt; \", y : \" &lt;&lt; y &lt;&lt; endl;\n    swapByAddr(&amp;x, &amp;y);\n    cout &lt;&lt; \"2/ x : \" &lt;&lt; x &lt;&lt; \", y : \" &lt;&lt; y &lt;&lt; endl;\n    swapByRef(x, y);\n    cout &lt;&lt; \"3/ x : \" &lt;&lt; x &lt;&lt; \", y : \" &lt;&lt; y &lt;&lt; endl;\n    swapWithoutTemp(x, y);\n    cout &lt;&lt; \"4/ x : \" &lt;&lt; x &lt;&lt; \", y : \" &lt;&lt; y &lt;&lt; endl;\n\n    return 0;\n}\n\nvoid swapByAddr(int * a, int * b) {\n    int buffer = *a;\n    *a = *b;\n    *b = buffer;\n}\n\nvoid swapByRef(int &amp; a, int &amp; b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n// Aller plus loin\nvoid swapWithoutTemp(int &amp; a, int &amp; b) {\n    a = a + b;\n    b = a - b;\n    a = a - b;\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-3","title":"Exercice 3","text":"<p>Ecrire une fonction qui permet de retourner le nombre de secondes en additionnant les heures, minutes et secondes qu'on lui passe en param\u00e8tres. </p> <p>Seul le param\u00e8tre des heures est obligatoire. </p> <p>Ecrire un programme de test.</p> Indice <p>Arguments optionnels</p> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n// Prototype avec les valeurs par d\u00e9faut\nint nombreDeSecondes(int heures, int minutes = 0, int secondes = 0);\n\nint main() {\n    cout &lt;&lt; nombreDeSecondes(1, 10, 25) &lt;&lt; endl;\n    cout &lt;&lt; nombreDeSecondes(1, 10) &lt;&lt; endl;\n    cout &lt;&lt; nombreDeSecondes(1) &lt;&lt; endl;\n    return 0;\n}\n// D\u00e9finition de la fonction, SANS les valeurs par d\u00e9faut\nint nombreDeSecondes(int heures, int minutes, int secondes) {\n    return heures * 3600 + minutes * 60 + secondes;\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-4","title":"Exercice 4","text":"<pre><code>void fct (int);         // fonction A \nvoid fct (float);       // fonction B\nvoid fct (int, float);  // fonction C\nvoid fct (float, int);  // fonction D\n\nint main () {\n    int n, p;\n    float x, y;\n    char c;\n    double z;\n    /*\n    Les appels suivants des fonctions sont ils corrects ? \n    Si oui, quelle est la fonction appel\u00e9e et quelles sont\n    \u00e9ventuellement les conversions mises en place ?\n    *\n    fct(n);\n    fct(x);\n    fct(n, x);\n    fct(x, n);\n    fct(c);\n    fct(n, p);\n    fct(n, c);\n    fct(n, z);\n}\n</code></pre> Correction <pre><code>fct (n);    // Correct, appel de la fonction A\nfct (x);    // Correct, appel de la fonction B\nfct (n,x);  // Correct, appel de la fonction C\nfct (x,n);  // Correct, appel de la fonction D\nfct (c);    // Correct, appel de la fonction A, conversion implicite de char en int\nfct (n,p);  // Incorrect, conflit entre C et D\nfct (n,c);  // Incorrect, conflit entre C et D \nfct (n,z);  // Correct, appel de la fonction C, conversion implicite de double en float\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-5","title":"Exercice 5","text":"<ol> <li> <p>Ecrire une fonction qui permet d'effectuer la saisie d\u2019un tableau d'entiers qui lui est pass\u00e9 (vide) en param\u00e8tre puis l'affiche.</p> </li> <li> <p>Surd\u00e9finir cette fonction pour qu\u2019elle puisse effectuer la saisie de caract\u00e8res.</p> </li> <li> <p>Ecrire un programme de test.</p> </li> </ol> <p>Exemple :</p> <pre><code>&gt; ./exo5.exe\nSaisir 3 entiers :\n1: 23\n2: 675\n3: -33\nValeurs saisie : 23, 675, -33\n</code></pre> Indice <p>La fonction a 2 arguments.</p> Indice <pre><code>// Prototype de la fonction\nvoid remplir(int *, int);\n</code></pre> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nconst int COUNT_INT = 5;\nconst int COUNT_CHAR = 5;\n\nvoid remplir (int *, int); \n// surdefinition de la fonction remplir\nvoid remplir (char *, int);\n\nint main (void) { \n    int intArray[COUNT_INT];\n    remplir(intArray, COUNT_INT);\n\n    cout &lt;&lt; endl;\n\n    char charArray[COUNT_CHAR];\n    remplir(charArray, COUNT_CHAR);\n\n    return 0;\n}\n\nvoid remplir (int * array, int count) {\n    // Remplissage\n    for (int i = 0; i &lt; count; i++) {\n        cout &lt;&lt; \"Saisissez l'entier N\u00b0 \" &lt;&lt; i + 1 &lt;&lt; \" : \";\n        cin &gt;&gt; array[i];\n    }\n    // Affichage\n    cout &lt;&lt; \"Saisie :\";\n    for (int i = 0; i &lt; count; i++) {\n        cout &lt;&lt; \" \" &lt;&lt; array[i];\n    }\n}\n\n\nvoid remplir (char * array, int count) {\n    // Remplissage\n    for (int i = 0; i &lt; count; i++) {\n        cout &lt;&lt; \"Saisissez le caract\u00e8re N\u00b0 \" &lt;&lt; i + 1 &lt;&lt; \" : \";\n        cin &gt;&gt; array[i];\n    }\n    // Affichage\n    cout &lt;&lt; \"Saisie :\";\n    for (int i = 0; i &lt; count; i++) {\n        cout &lt;&lt; \" \" &lt;&lt; array[i];\n    }\n}\n</code></pre> Aller plus loin <p>Rendre le nombre d\u2019\u00e9l\u00e9ments et le type de tableau param\u00e9trable via la ligne de commande.</p>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-6","title":"Exercice 6","text":"<p>Migrer le programme en C suivant en C++ en utilisant les nouvelles possibilit\u00e9s du langage</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Personne\n{\n    char nom [30];\n    int age;\n};\n\nint main () {\n    struct Personne p[3];\n    int nbpers, i;\n    nbpers = 0;\n    //saisie des 3 personnes\n    for (i = 0; i &lt; 3; i++)\n    {\n        printf(\"Saisissez le nom de la personne N\u00b0 %d : \", i+1);\n        gets(p[i].nom);\n        printf(\"Saisissez l'age de la personne N\u00b0 %d : \", i+1);\n        scanf(\"%d\", &amp;p[i].age);\n        nbpers++;\n    }\n    printf(\"\\\\n%d personnes ont ete saisies\\\\n\", nbpers);\n\n    return 0;\n}\n</code></pre> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstruct Personne {\n    char nom [30];\n    int age;\n};\n\nint main () {\n    Personne p[3];\n    int nbpers = 0;\n\n    //saisie des 3 personnes\n    for (int i = 0; i &lt; 3; i++, nbpers++)\n    {\n        cout &lt;&lt; \"Saisissez le nom de la personne N\u00b0 \" &lt;&lt; i + 1 &lt;&lt; \" : \";\n        cin &gt;&gt; p[i].nom;\n        cout &lt;&lt; \"Saisissez l'age de la personne N\u00b0 \" &lt;&lt; i + 1 &lt;&lt; \" : \";\n        cin &gt;&gt; p[i].age ;\n    }\n\n    cout &lt;&lt; endl &lt;&lt; nbpers &lt;&lt; \" personnes ont ete saisies\" &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> Aller plus loin <p>D\u00e9placer le code de remplissage de la personne dans une fonction <code>saisiePersonne</code>.</p>"},{"location":"bts-2/10-du-c-au-cpp/#exercices","title":"Exercices ++","text":""},{"location":"bts-2/10-du-c-au-cpp/#exercice-7","title":"Exercice 7","text":"<p>Dessiner un sapin de No\u00ebl form\u00e9 d'\u00e9toiles :</p> <pre><code>Nombre d'\u00e9tages : 5\n\n    *\n   ***\n  *****\n *******\n*********\n    *\n</code></pre> <p>Le nombre d'\u00e9tages est donn\u00e9 par l'utilisateur.</p> Correction <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nmain() {\n    int l;\n\n    do {\n        cout &lt;&lt; \"nombre d'\u00e9tages : \";\n        cin &gt;&gt; l;\n    } while (l &lt; 1);\n\n    cout &lt;&lt; '\\n';\n    for (int i = 0; i &lt; l; i++) {\n        for (int j = 0; j &lt; l - i + 1; j++) {\n            cout &lt;&lt; ' ';\n        }\n        for (int j = 0; j &lt; 2 * i + 1; j++) {\n            cout &lt;&lt; '*';\n        }\n        cout &lt;&lt; '\\n';\n    }\n    cout &lt;&lt; string(l + 1, ' ') &lt;&lt; '*';\n}\n</code></pre>"},{"location":"bts-2/10-du-c-au-cpp/#exercice-8","title":"Exercice 8","text":"<p>Afficher les tables de multiplications de 1 \u00e0 10 sous la forme suivante :</p> <pre><code>     |   1   2   3   4   5   6   7   8   9  10\n----------------------------------------------\n  1  |   1   2   3   4   5   6   7   8   9  10\n  2  |   2   4   6   8  10  12  14  16  18  20\n  3  |   3   6   9  12  15  18  21  24  27  30\n  4  |   4   8  12  16  20  24  28  32  36  40\n  5  |   5  10  15  20  25  30  35  40  45  50\n  6  |   6  12  18  24  30  36  42  48  54  60\n  7  |   7  14  21  28  35  42  49  56  63  70\n  8  |   8  16  24  32  40  48  56  64  72  80\n  9  |   9  18  27  36  45  54  63  72  81  90\n 10  |  10  20  30  40  50  60  70  80  90 100\n</code></pre> Correction <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n\nusing namespace std;\n\nint main()\n{\n    int i, j;\n\n    // En-t\u00eates\n    cout &lt;&lt; \"     |\";\n    for (j = 1; j &lt;= 10; j++) {\n        cout &lt;&lt; setw(4) &lt;&lt; j;\n    }\n    cout &lt;&lt; \"\\n------\";\n    for (j = 1; j &lt;= 10; j++) {\n        cout &lt;&lt; \"----\";\n    }\n\n    // Lignes\n    for (i = 1; i &lt;= 10; i++) {\n        cout &lt;&lt; '\\n' &lt;&lt; setw(3) &lt;&lt; i &lt;&lt; \"  |\";\n        for (j = 1; j &lt;= 10; j++) {\n            cout &lt;&lt; setw(4) &lt;&lt; i * j;\n        }\n    }\n}\n</code></pre> Aller plus loin <p>Rendre les tables affich\u00e9es param\u00e9trables via la ligne de commande.</p>"},{"location":"bts-2/20-poo-1/","title":"02 - Premiers pas en POO","text":""},{"location":"bts-2/20-poo-1/#cours","title":"Cours","text":""},{"location":"bts-2/20-poo-1/#exercice-1","title":"Exercice 1","text":"<p>D\u00e9clarer en C++ la classe correspondant au diagramme suivant :</p> <p></p> Correction <pre><code>// Fichier IntRange.hpp\n\n#ifndef IntRange_H\n#define IntRange_H\nclass IntRange {\n    private :\n        int value;\n        int min;\n        int max;\n    public :\n        void initialiser();\n        void initialiser(int _min, int _max);\n        void initialiser(int _min, int _max, int _value);\n        int getValue();\n    private :\n        void setValue(int);\n};\n#endif\n</code></pre>"},{"location":"bts-2/20-poo-1/#exercice-2","title":"Exercice 2","text":"<p>Compl\u00e9ter la classe C++ suivante :</p> <pre><code>______ DataBase {\n    _______ :\n        string server;\n        int port;\n        string login;\n        ______ password;\n        string name;\n    public :\n        void init(string _server, int _port, string _login, string _password);\n        string getIp();\n        ______ getPort();\n        string getLogin();\n        string getName();\n        void setName(______ _name);\n        string getConnectionString();\n        bool connect();\n        bool check();\n};\n</code></pre> <p>D\u00e9finir en C++ \u00e0 l\u2019ext\u00e9rieur de la classe les m\u00e9thodes <code>getName()</code> et <code>setName()</code>.</p> Correction <pre><code>// Fichier DataBase.hpp\n\n#ifndef DataBase_H\n#define DataBase_H\n\n#include &lt;string&gt;\n\nusing namespace std;\n\nclass DataBase {\n    private :\n        string server;\n        int port;\n        string login;\n        string password;\n        string name;\n    public :\n        void init(string _server, int _port, string _login, string _password);\n        string getIp();\n        int getPort();\n        string getLogin();\n        string getName();\n        void setName(string _name);\n        string getConnectionString();\n        bool connect();\n        bool check();\n};\n\n#endif\n</code></pre> <pre><code>// Fichier DataBase.cpp\n\n#include \"DataBase.hpp\"\n\nstring DataBase::getName() {\n    return name;\n}\n\nvoid DataBase::setName(string _name) {\n    name = _name;\n}\n</code></pre>"},{"location":"bts-2/20-poo-1/#exercice-3","title":"Exercice 3","text":"<p>Dessiner le diagramme correspondant \u00e0 la classe C++ suivante dans Visual Paradigm :</p> <pre><code>class Connexion {\n    private :\n        string ip;\n        int port;\n    public :\n        void initialiser(string _ip, string port);\n        string getIp();\n        int getPort();\n        void connecter();\n}\n</code></pre> Correction <p></p>"},{"location":"bts-2/20-poo-1/#exercice-4","title":"Exercice 4","text":"<p>Corriger dans Visual Paradigm la classe suivante pour qu'elle respecte l'encapsulation :</p> <p></p> Correction <p></p> <p>La date d'anniversaire n'\u00e9tant pas une donn\u00e9e qui peut \u00eatre modifi\u00e9e, on pourra discuter de l'utilit\u00e9 du mutateur de birthday.</p>"},{"location":"bts-2/20-poo-1/#exercice-5","title":"Exercice 5","text":"<p>On souhaite g\u00e9n\u00e9rer une classe repr\u00e9sentant un compteur. Celui-ci est compos\u00e9 d'une valeur enti\u00e8re positive ou nulle, nulle \u00e0 l'origine. Il ne peut varier que par pas de 1 (incr\u00e9mentation ou d\u00e9cr\u00e9mentation). D\u00e9cr\u00e9menter un compteur nul est sans effet.</p> <ol> <li> <p>Commencer par un diagramme de classe</p> </li> <li> <p>Ecrire la classe Counter dans deux fichiers, un pour la d\u00e9claration (Counter.h) et un pour la d\u00e9finition (Counter.cpp)</p> </li> <li> <p>Ecrire un programme de test (exo5.cpp)</p> </li> </ol> Compiler plusieurs fichiers <p>Cr\u00e9er les fichiers dans un m\u00eame r\u00e9pertoire, puis les compiler avec la commande : </p> <pre><code>&gt; g++ *.cpp -o exo_5.exe\n</code></pre> Correction <p>Le diagramme de classe :</p> <p></p> <p>Fichier Counter.h :</p> <pre><code>#ifndef COUNTER_H\n#define COUNTER_H\n\nclass Counter {\n\n    unsigned char value; // Pour les tests\n\n    public :\n        Counter();\n        void increment();\n        void decrement();\n        void reset();\n        unsigned char getValue();\n};\n\n#endif\n</code></pre> <p>Fichier Counter.cpp :</p> <pre><code>#include \"Counter.h\"\n#include &lt;limits.h&gt;\n\nCounter::Counter()\n{\n    value = 0;\n}\n\nvoid Counter::increment()\n{\n    // On ne d\u00e9passe pas la limite maximale\n    if (value &lt; UCHAR_MAX) { \n        value++;\n    }\n}\n\nvoid Counter::decrement()\n{\n    // On ne descend pas en-dessous de 0\n    if (value &gt; 0) { \n        value--;\n    }\n}\n\nvoid Counter::reset()\n{\n    value = 0;\n}\n\nunsigned char Counter::getValue()\n{\n    return value;\n}\n</code></pre> <p>Fichier exo5.cpp :</p> <pre><code>#include &lt;iostream&gt;\n#include \"Counter.h\"\n\nusing namespace std;\n\nint main() {\n\n    Counter c1, c2;\n\n    // On attend : 0 et 0\n    cout &lt;&lt; \"c1 : \" &lt;&lt; +c1.getValue() &lt;&lt; endl;\n    cout &lt;&lt; \"c2 : \" &lt;&lt; +c2.getValue() &lt;&lt; endl;\n\n    c1.increment();\n    c2.decrement();\n    // On attend : 1 et 0\n    cout &lt;&lt; \"c1 : \" &lt;&lt; +c1.getValue() &lt;&lt; endl;\n    cout &lt;&lt; \"c2 : \" &lt;&lt; +c2.getValue() &lt;&lt; endl;\n\n    for (int i = 0; i &lt; 1000; i++) {\n        c1.increment();\n        if (i % 5 == 0) {\n            c2.increment();\n        }\n    }\n    // On attend : 255 et 200\n    cout &lt;&lt; \"c1 : \" &lt;&lt; +c1.getValue() &lt;&lt; endl;\n    cout &lt;&lt; \"c2 : \" &lt;&lt; +c2.getValue() &lt;&lt; endl;\n\n    c1.reset();\n    // On attend : 0\n    cout &lt;&lt; \"c1 : \" &lt;&lt; +c1.getValue() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/20-poo-1/#exercice-6","title":"Exercice 6","text":"<p>On veut \u00e9crire une classe Television comprenant les donn\u00e9es membres suivantes :</p> <ul> <li>status (\"On\"/\"Off\")</li> <li>volume (0 &lt;-&gt; 50)<ul> <li>Le volume ne peut pas aller au-del\u00e0 des limites.</li> </ul> </li> <li>channel (1 &lt;-&gt; 100)<ul> <li>Les cha\u00eenes bouclent.</li> </ul> </li> </ul> <p>Le but est d\u2019encapsuler dans une classe des m\u00e9thodes permettant de manipuler un objet <code>Television</code>.</p> <p>A la cr\u00e9ation, l\u2019objet <code>Television</code> est \u00e9teint avec le volume \u00e0 0 et sur la cha\u00eene 1.</p> <ol> <li> <p>D\u00e9finir les m\u00e9thodes que vous devez impl\u00e9menter dans votre classe (mettez vous en situation d\u2019utilisateur de la classe, les m\u00e9thodes doivent \u00eatre pratiques et avoir un nom explicite).</p> </li> <li> <p>Repr\u00e9senter la classe en UML.</p> </li> <li> <p>Ecrire le code de ces m\u00e9thodes. La d\u00e9claration et la d\u00e9finition de la classe (fonctions membres) seront dans des fichiers s\u00e9par\u00e9s (Television.h et Television.cpp).</p> </li> </ol> Correction <p></p> <pre><code>// Television.h\n#ifndef TELEVISION_H\n#define TELEVISION_H\n\n#include &lt;string&gt;\n\nusing namespace std;\n\nclass Television {\n    private :\n        bool status;\n        int volume;\n        int channel;\n        void reset();\n\n    public :\n        Television();\n        void start();\n        void stop();\n        void channelUp();\n        void channelDown();\n        void volumeUp();\n        void volumeDown();\n        string display();\n};\n\n#endif\n</code></pre> <pre><code>// Television.cpp\n#include \"Television.h\"\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nTelevision::Television() {\n    reset();\n}\n\nvoid Television::start() {\n    status = true;\n}\n\nvoid Television::stop() {\n    reset();\n}\n\nvoid Television::reset() {\n    status = false;\n    channel = 1;\n    volume = 0;\n}\n\nvoid Television::channelUp() {\n    if (status) {\n        if (channel &lt; 100) {\n            channel++;\n        }\n        else {\n            channel = 1;\n        }\n    }\n}\n\nvoid Television::channelDown() {\n    if (status) {\n        if (channel &gt; 1) {\n            channel--;\n        }\n        else {\n            channel = 100;\n        }\n    }\n}\n\nvoid Television::volumeUp() {\n    if (status) {\n        if (volume &lt; 50) {\n            volume++;\n        }\n    }\n}\n\nvoid Television::volumeDown() {\n    if (status) {\n        if (volume &gt; 0) {\n            volume--;\n        }\n    }\n}\n\nstd::string Television::display() {\n    string display = \"[TV] \";\n    if (status) {\n        display += \" status : \";\n        display += status ? \"on\" : \"off\";\n        display += \" | volume : \" + to_string(volume);\n        display += \" | channel : \" + to_string(channel);\n    }\n    display += \"\\n\";\n    return display;\n}\n</code></pre> <pre><code>// exo6.cpp\n#include &lt;iostream&gt;\n#include \"Television.h\"\n\nusing namespace std;\n\nint main() {\n\n    Television tv;\n\n    cout &lt;&lt; tv.display();\n    tv.channelUp();\n    tv.volumeUp();\n    cout &lt;&lt; tv.display();\n    tv.start();\n    tv.channelUp();\n    tv.volumeUp();\n    tv.volumeUp();\n    tv.volumeUp();\n    cout &lt;&lt; tv.display();\n    tv.stop();\n    cout &lt;&lt; tv.display();\n}\n</code></pre>"},{"location":"bts-2/20-poo-1/#exercice-7","title":"Exercice 7","text":"<p>Ecrire une classe Fraction :</p> <ul> <li> <p>Cette classe contient un num\u00e9rateur et un d\u00e9nominateur dont les valeurs par d\u00e9faut sont \u00e9gale \u00e0 1.</p> </li> <li> <p>On pourra instancier un objet Fraction en sp\u00e9cifiant num\u00e9rateur et d\u00e9nominateur ou en ne sp\u00e9cifiant que le num\u00e9rateur.</p> </li> <li> <p>On pourra afficher la Fraction sous la forme num\u00e9rateur/d\u00e9nominateur.</p> </li> <li> <p>On mettra en place les accesseurs n\u00e9cessaires.</p> </li> <li> <p>On pourra additionner deux objets Fraction et obtenir le r\u00e9sultat sous la forme d'un troisi\u00e8me objet Fraction.</p> </li> </ul> <p>Votre mission :</p> <ol> <li> <p>Repr\u00e9senter la classe en UML.</p> </li> <li> <p>Ecrire le code de la classe dans des fichiers s\u00e9par\u00e9s et un programme de d\u00e9monstration.</p> </li> </ol> Aller plus loin <p>Simplifier la fraction obtenue lors de l'addition.</p> Indice \\[ \\frac{a}{b}+\\frac{c}{d}=\\frac{a*d+c*b }{b*d} \\] Correction <p></p> <pre><code>// Fraction.h\n#ifndef FRACTION_H\n#define FRACTION_H\n\nclass Fraction {\n    private :\n        int numerateur;\n        int denominateur;\n        void simplifier();\n    public :\n        Fraction();\n        Fraction(int _numerateur);\n        Fraction(int _numerateur, int _denominateur);\n        void display();\n        Fraction additionner(Fraction _f);\n};\n\n#endif\n</code></pre> <pre><code>// Fraction.cpp\n#include \"Fraction.h\"\n#include &lt;iostream&gt;\n\nFraction::Fraction() {\n    numerateur = 1;\n    denominateur = 1;\n}\n\nFraction::Fraction(int _numerateur) {\n    numerateur = _numerateur;\n    denominateur = 1;\n}\n\nFraction::Fraction(int _numerateur, int _denominateur) {\n    numerateur = _numerateur;\n    denominateur = _denominateur;\n}\n\nvoid Fraction::display() {\n    std::cout &lt;&lt; numerateur &lt;&lt; \"/\" &lt;&lt; denominateur;\n}\n\nFraction Fraction::additionner(Fraction _f) {\n    Fraction somme;\n    somme.numerateur = numerateur * _f.denominateur + denominateur * _f.numerateur;\n    somme.denominateur = denominateur * _f.denominateur;\n    somme.simplifier();\n    return somme;\n}\n\n// Pour aller plus loin\nvoid Fraction::simplifier() {\n    int a = numerateur, b = denominateur, c;\n\n    // Calcul du PGCD avec l'algorithme d'Euclide\n    while(b) {\n        c = a % b;\n        a = b;\n        b = c;\n    }\n\n    numerateur = numerateur / a;\n    denominateur = denominateur / a;\n}\n</code></pre> <pre><code>// exo7.cpp\n#include &lt;iostream&gt;\n#include \"Fraction.h\"\n\nusing namespace std;\n\nint main() {\n    Fraction f1(27, 126), f2(1, 2), f3;\n\n    f3 = f1.additionner(f2);\n\n    f1.display();\n    cout &lt;&lt; \" + \";\n    f2.display();\n    cout &lt;&lt; \" = \";\n    f3.display();\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/20-poo-1/#exercice-8","title":"Exercice 8","text":"<p>Modifier le fichier Sailor.cpp pour que le programme suivant affiche  :</p> <pre><code>&gt; ./exo8.exe\nnom : noname\nnom : paul\nnom : eric\nnom : fred\nnom : xavier\nnombre de Sailors : 5\n</code></pre> <pre><code>// Sailor.h\n#ifndef SAILOR_H\n#define SAILOR_H\n\n#include &lt;string&gt;\n\nclass Sailor {\n    private :\n        std::string name;\n        static int sailorsCount;\n    public :\n        Sailor(std::string);\n        Sailor();\n        ~Sailor();\n        int getSailorsCount();\n        void setName(std::string);\n        void display();\n};\n\n#endif\n</code></pre> <pre><code>// Sailor.cpp\n#include \"Sailor.h\"\n\n...\n</code></pre> <pre><code>// exo8.cpp\n#include &lt;iostream&gt;\n#include \"Sailor.h\"\n\nint main() {\n    Sailor sailor1;\n    Sailor sailor2(\"paul\");\n    Sailor bateau1[3];\n\n    sailor1.display();\n    sailor2.display();\n\n    bateau1[0].setName(\"eric\");\n    bateau1[1].setName(\"fred\");\n    bateau1[2].setName(\"xavier\");\n\n    for (int i = 0; i &lt; 3; i++) {\n        bateau1[i].display();\n    }\n\n    std::cout &lt;&lt; \"nombre de sailors : \" &lt;&lt; sailor1.getSailorsCount();\n\n    return 0;\n}\n</code></pre> Correction <p></p>"},{"location":"bts-2/20-poo-1/#exercice-9","title":"Exercice 9","text":"<p>Cr\u00e9er une classe <code>Tab</code> permettant de cr\u00e9er des tableaux de taille dynamique.</p> <p>Commencer par un diagramme de classe.</p> <p>Pr\u00e9voir toutes les m\u00e9thodes utiles.</p>"},{"location":"bts-2/30-poo-2/","title":"03 - POO level 2","text":""},{"location":"bts-2/30-poo-2/#exercice-1","title":"Exercice 1","text":"<p>Sur la base du diagramme de classes ci-dessous, cr\u00e9er le programme qui permet de saisir les noms de plusieurs personnes puis un nombre de groupes \u00e0 cr\u00e9er. </p> <p></p> <p>Le programme se chargera ensuite de r\u00e9partir automatiquement les personnes dans les groupes. </p> <p>Finalement il affichera la composition des groupes et le groupe d'appartenance de chaque personne.</p> Indice <p>Pour \u00e9viter la multiplication des objets, manipuler des pointeurs.</p> Indice <p>La classe <code>std::vector</code> peut \u00eatre utile.</p> <pre><code>&gt; ./exo_9.exe\nSaisir les noms des personnes \u00e0 cr\u00e9er (! pour arr\u00eater) :\n#1 : Bianca\n#2 : Tryphon\n#3 : Archibald\n#4 : Allan\n#5 : Piotr\n#6 : Tchang\n#7 : Seraphin\n#8 : !\n7 personnes saisies.\n\nNombre de groupes \u00e0 cr\u00e9er : 3\n\n1\nBianca (1)\nAllan (4)\nSeraphin (7)\n\n2\nTryphon (2)\nPiotr (5)\n\n3\nArchibald (3)\nTchang (6)\n\nBianca (1) appartient au groupe 1\nTryphon (2) appartient au groupe 2\nArchibald (3) appartient au groupe 3\nAllan (4) appartient au groupe 1\nPiotr (5) appartient au groupe 2\nTchang (6) appartient au groupe 3\nSeraphin (7) appartient au groupe 1\n</code></pre> Correction <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nclass Group;\n\nclass Person {\n    private :\n        int id;\n        static int count;\n        string name;\n        Group * group;\n    public :\n        Person(string _name) {\n            name = _name;\n            count++;\n            id = count;\n        };\n        ~Person() {\n            count--;\n        };\n        int getId() {\n            return id;\n        }\n        string getName() {\n            return name;\n        }\n        string getNameAndId() {\n            return name + \" (\" + to_string(id) + \")\";\n        }\n        void setGroup(Group * _group) {\n            group = _group;\n        }\n        Group * getGroup() {\n            return group;\n        }\n};\n\nint Person::count = 0;\n\nclass Group {\n    private :\n        int id;\n        static int count;\n        vector&lt;Person *&gt; people;\n    public :\n        Group(){\n            count++;\n            id = count;\n        };\n        ~Group() {\n            count--;\n        };\n        int getId() {\n            return id;\n        }\n        void addPerson(Person * person) {\n            people.push_back(person);\n        };\n        vector&lt;Person *&gt; getPeople() {\n            return people;\n        }\n};\n\nint Group::count = 0;\n\nint main() {\n    vector&lt;Person *&gt; people;\n    vector&lt;Group *&gt; groups;\n    int nbGroups;\n\n    vector&lt;string&gt; names = { \"Bianca\", \"Tryphon\", \"Archibald\", \"Allan\", \"Piotr\", \"Tchang\", \"Seraphin\", \"Milou\" };\n\n    system(\"chcp 65001\");\n    system(\"cls\");\n\n    // Cr\u00e9ation des utilisateurs (sans saisie)\n    for (int i = 0; i &lt; names.size(); i++) {\n        people.push_back(new Person(names[i]));\n    }\n    cout &lt;&lt; people.size() &lt;&lt; \" personnes saisies.\" &lt;&lt; endl &lt;&lt; endl;\n\n    // Cr\u00e9ation des groupes\n    cout &lt;&lt; \"Nombre de groupes \u00e0 cr\u00e9er : \";\n    cin &gt;&gt; nbGroups;\n    for (int i = 0; i &lt; nbGroups; i++) {\n        groups.push_back(new Group());\n    }\n\n    // R\u00e9partition des personnes\n    for (int i = 0; i &lt; people.size(); i++) {\n        groups[i % nbGroups]-&gt;addPerson(people[i]);\n        people[i]-&gt;setGroup(groups[i % nbGroups]);\n    }\n\n    // Affichage des groupes\n    cout &lt;&lt; endl;\n    for (int i = 0; i &lt; nbGroups; i++) {\n        cout &lt;&lt; groups[i]-&gt;getId() &lt;&lt; endl;\n        vector&lt;Person *&gt; groupPeople = groups[i]-&gt;getPeople();\n        for (int j = 0; j &lt; groupPeople.size(); j++) {\n            cout &lt;&lt; groupPeople[j]-&gt;getNameAndId() &lt;&lt; endl;\n        }\n        cout &lt;&lt; endl;\n    }\n\n    // Affichage des utilisateurs\n    cout &lt;&lt; endl;\n    for (int i = 0; i &lt; people.size(); i++) {\n        cout &lt;&lt; people[i]-&gt;getNameAndId() &lt;&lt; \" appartient au groupe \" &lt;&lt; people[i]-&gt;getGroup()-&gt;getId() &lt;&lt; endl;\n    }\n\n}\n</code></pre>"},{"location":"bts-2/30-poo-2/#exercice-2","title":"Exercice 2","text":"<p>R\u00e9pondre aux questions suivantes portant sur le diagramme de classes, fruit du travail de conception d\u2019un programme de gestion d\u2019une biblioth\u00e8que.</p> <ol> <li> <p>Peut-on cr\u00e9er des utilisateurs sans sp\u00e9cifier de nom\u00a0? Expliquer.</p> Correction </li> <li> <p>Expliquer \u00e0 quoi correspondent chacun des termes et symboles de la ligne suivante : <code>isEmailValid(string) : bool</code></p> Correction </li> <li> <p>Pourquoi la ligne <code>+ setEmail(string)</code> de la classe <code>Utilisateur</code> n'a pas de partie avec les <code>:</code>\u00a0?</p> Correction </li> <li> <p>Peut-on valider le format d\u2019un email avec la m\u00e9thode <code>isEmailValid</code> en l\u2019appelant sur un objet <code>Utilisateur</code> cr\u00e9\u00e9 dans le programme principal\u00a0? Expliquer.</p> Correction </li> <li> <p>Peut-on modifier un emprunt apr\u00e8s cr\u00e9ation\u00a0? Expliquer.</p> Correction </li> <li> <p>Doit-on cr\u00e9er un objet <code>Emprunt</code> par exemplaire emprunt\u00e9 ou un objet <code>Emprunt</code> peut-il concern\u00e9 plusieurs exemplaires d\u2019un coup\u00a0? Expliquer.</p> Correction </li> <li> <p>Les attributs <code>dateEmprunt</code> et <code>dateRetourPrevu</code> de la classe <code>Emprunt</code> n\u2019ont pas de mutateur et le constructeur n\u2019a pas de param\u00e8tre de type date. Qu\u2019en d\u00e9duisez-vous sur la valorisation de ces deux dates\u00a0?</p> Correction </li> <li> <p>De quel type est l\u2019attribut <code>emprunts</code> de la classe <code>Utilisateur</code>. Proposer deux mani\u00e8res diff\u00e9rentes de l\u2019impl\u00e9menter en C++. </p> Correction </li> <li> <p>L\u2019attribut <code>- nombre : int</code> de la classe <code>Exemplaire</code> est soulign\u00e9, qu\u2019est-ce que cela signifie\u00a0?</p> Correction </li> <li> <p>Il n\u2019y a pas de mutateur pr\u00e9vu pour l\u2019attribut <code>- nombre : int</code> de la classe <code>Exemplaire</code>, comment peut-on incr\u00e9menter ou d\u00e9cr\u00e9menter cet attribut\u00a0?</p> Correction </li> <li> <p>Comment peut-on, \u00e0 tout moment, conna\u00eetre le nombre total de documents disponibles dans la biblioth\u00e8que\u00a0?</p> Correction </li> <li> <p>Pourrait-on mettre en place sur la classe <code>Emprunt</code> un attribut <code>- nombre : int</code> avec la m\u00eame caract\u00e9ristique qu\u2019\u00e0 la question 9 pour compter le nombre d\u2019emprunts d\u2019un utilisateur\u00a0? </p> <p>Si oui, que doit-on mettre en place\u00a0? </p> <p>Si non, expliquer pourquoi et indiquer comment r\u00e9aliser cette demande.</p> Correction </li> <li> <p>En utilisant les m\u00e9thodes disponibles, peut-on \u00e0 partir d\u2019un objet <code>Livre</code> remonter jusqu\u2019aux utilisateurs qui en ont emprunt\u00e9 un exemplaire\u00a0? Expliquer. </p> Correction </li> <li> <p>Peut-on avoir des emplacements vides\u00a0? Pourquoi\u00a0?</p> Correction </li> <li> <p>Compl\u00e9ter la d\u00e9claration en C++ de la classe Emplacement. </p> <p>On supposera que les directives #include n\u00e9cessaires ont \u00e9t\u00e9 r\u00e9alis\u00e9es au pr\u00e9alable. </p> <p>Ne pas d\u00e9finir les m\u00e9thodes. </p> <p>Les tableaux d\u2019objets <code>Type</code> sont d\u00e9clar\u00e9s sous la forme d\u2019un objet <code>vector&lt;Type&gt;</code>.</p> <pre><code>class Emplacement {\n\n};\n</code></pre> Correction </li> <li> <p>D\u00e9finir en C++ \u00e0 l\u2019ext\u00e9rieur de la d\u00e9claration de la classe <code>Livre</code> les m\u00e9thodes accesseur et mutateur de l\u2019attribut <code>titre</code>.</p> Correction </li> </ol>"},{"location":"bts-2/40-poo-3/","title":"04 - POO ++","text":""},{"location":"bts-2/40-poo-3/#constructeur-par-recopie","title":"Constructeur par recopie","text":""},{"location":"bts-2/40-poo-3/#exercice-0","title":"Exercice 0","text":"<p>Compl\u00e9ter la classe <code>Tab</code> suivante permettant de g\u00e9rer un tableau d\u2019entiers en allocation dynamique et pr\u00e9sentant un bug lors de son utilisation  dans le fichier exo.cpp \u00e0 la ligne 17.</p> <pre><code>// Tab.h\n#ifndef TAB_H\n#define TAB_H\nclass Tab {\n    private :\n        int count;\n        int * first;\n    public :\n        Tab(int);\n        ~Tab();\n        void insert(int, int);\n        int get(int);\n        void display();\n};\n#endif\n</code></pre> <pre><code>// Tab.cpp\n#include \"Tab.h\"\n#include &lt;iostream&gt;\n\nTab::Tab(int _count) {\n    count = _count;\n    first = new int[count]{0};\n}\n\nTab::~Tab() {\n    delete [] first;\n}\n\nvoid Tab::insert(int i, int value) {\n    if (i &gt;= 0 &amp;&amp; i &lt; count) {\n        first[i] = value;\n    }\n}\n\nint Tab::get(int i) {\n    if (i &gt;= 0 &amp;&amp; i &lt; count) {\n        return first[i];\n    }\n    throw \"Indice hors-limite !\";\n}\n\nvoid Tab::display(){\n    std::cout &lt;&lt; \"[ \";\n    for (int i = 0; i &lt; count; i++) {\n        std::cout &lt;&lt; first[i] &lt;&lt; (i &lt; count - 1 ? \", \" : \"\" );\n    }\n    std::cout &lt;&lt; \" ]\\n\";\n}\n</code></pre> <pre><code>// exo0.cpp\n#include \"Tab.h\"\n\nint main() {\n    Tab t1(10);\n\n    t1.display();\n    t1.insert(3, 45);\n    t1.insert(7, -89053);\n    t1.display();\n    std::cout &lt;&lt; \"t1[3] : \" &lt;&lt; t1.get(3) &lt;&lt; std::endl;\n\n    Tab t2 = t1;\n    t2.display();\n    t2.insert(6, 78);\n    t2.display();\n    t1.display(); // \ud83d\ude31\n\n    return 0;\n}\n</code></pre> Solution <pre><code>// Tab.h\n#ifndef TAB_H\n#define TAB_H\nclass Tab {\n    private :\n        int count;\n        int * first;\n    public :\n        Tab(int);\n        Tab(Tab &amp;); // &lt;- D\u00e9claration du constructeur par recopie\n        ~Tab();\n        void insert(int, int);\n        int get(int);\n        void display();\n};\n#endif\n</code></pre> <p>Ajouter dans 'Tab.cpp' :</p> <pre><code>// D\u00e9finition du constructeur par recopie\nTab::Tab(Tab &amp; t) {\n    count = t.count;\n    first = new int[count]{0};\n    for (int i = 0; i &lt; count; i++) {\n        first[i] = t.first[i];\n    }\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-1","title":"Exercice 1","text":"<p>Soit le programme suivant :</p> <pre><code>#include \"Truc.h\"\n\nvoid fonction (Truc a) {\n    // Ne se passe-t-il vraiment rien ici \ud83e\udd14\n}\n\nint main() {\n    Truc x;\n    Truc y = x;\n    fonction(y);\n    cout &lt;&lt; \"Bonjour !\" &lt;&lt; endl;\n}\n</code></pre> <p>Cr\u00e9er la classe <code>Truc</code> de mani\u00e8re \u00e0 ce que le programme ci-dessus fournisse le r\u00e9sultat suivant :</p> <pre><code>&gt; ./exo1.exe\nCr\u00e9ation d'un truc\nCopie d'un truc\nCopie d'un truc\nDestruction d'un truc\nBonjour !\nDestruction d'un truc\nDestruction d'un truc\n</code></pre> Solution <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Truc {\n    public:\n        Truc() {\n            cout &lt;&lt; \"Cr\u00e9ation d'un truc\" &lt;&lt; endl;\n        }\n        Truc(Truc &amp; t) {\n            cout &lt;&lt; \"Copie d'un truc\" &lt;&lt; endl;\n        }\n        ~Truc() {\n            cout &lt;&lt; \"Destruction d'un truc\" &lt;&lt; endl;\n        }\n};\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-2","title":"Exercice 2","text":"<p>A faire sur papier !</p> <p>Que va afficher le programme suivant ?</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Point {\n    private:\n        int x, y;\n    public:\n        Point(int abs = 1, int ord = 0) {\n            x = abs;\n            y = ord;\n            cout &lt;&lt; \"C : \" &lt;&lt; x &lt;&lt; \", \" &lt;&lt; y &lt;&lt; endl;\n        };\n        Point(Point &amp;);\n        ~Point();\n};\n\nPoint::Point(Point &amp; d) {\n    cout &lt;&lt; \"R : \" &lt;&lt; d.x &lt;&lt; \", \" &lt;&lt; d.y &lt;&lt; endl;\n    x = d.x;\n    y = d.y;\n}\n\nPoint::~Point() {\n    cout &lt;&lt; \"D !\"&lt;&lt; endl;\n}\n\nvoid fct (Point, Point *);\n\nint main() {\n    cout &lt;&lt; \"D\u00e9but main\" &lt;&lt; endl;\n    Point a;\n    Point c = a;\n    Point *adr = new Point (3, 3);\n    fct(a, adr);\n    c = Point(5, 5);\n    cout &lt;&lt; \"Fin main\" &lt;&lt; endl;\n}\n\nvoid fct (Point d, Point * add) {\n    cout &lt;&lt; \"Entr\u00e9e fct\" &lt;&lt; endl;\n    delete add;\n    cout &lt;&lt; \"Sortie fct\" &lt;&lt; endl;\n}\n</code></pre> Solution <pre><code>D\u00e9but main\nC : 1, 0    // (1)!\nR : 1, 0    // (2)!\nC : 3, 3    // (3)!\nR : 1, 0    // (4)!\nEntr\u00e9e fct\nD !         // (5)!\nSortie fct\nD !         // (6)!\nC : 5, 5    // (7)!\nD !         // (8)!\nFin main\nD !         // (9)!\nD !         // (10)!\n</code></pre> <ol> <li>Cr\u00e9ation de a</li> <li>Recopie de a dans c</li> <li>Cr\u00e9ation du point dans le tas</li> <li>Recopie de a dans le param\u00e8tre d (passage par valeur)</li> <li>Destruction du point cr\u00e9\u00e9 dans le tas</li> <li>Destruction de d</li> <li>Cr\u00e9ation du point \u00e9ph\u00e9m\u00e8re avant affectation dans c</li> <li>Destruction du point \u00e9ph\u00e9m\u00e8re</li> <li>Destruction de c</li> <li>Destruction de a</li> </ol>"},{"location":"bts-2/40-poo-3/#surdefinition-doperateur","title":"Surd\u00e9finition d'op\u00e9rateur","text":""},{"location":"bts-2/40-poo-3/#exercice-3","title":"Exercice 3","text":"<p>Soit une classe Vecteur3d :</p> <pre><code>class Vecteur3d {\n    private:\n        float x, y, z;\n    public:\n        Vecteur3d (int _x = 0, int _y = 0, int _z = 0) {\n            x = _x;\n            y = _y;\n            z = _z;\n        }\n};\n</code></pre> <ol> <li> <p>Surd\u00e9finir l'op\u00e9rateur == en utilisant une fonction membre inline.</p> <p>Deux <code>Vecteur3D</code> sont \u00e9gaux si leurs coordonn\u00e9es sont respectivement \u00e9gales.</p> </li> <li> <p>Surd\u00e9finir l'op\u00e9rateur != en utilisant une fonction membre inline.</p> <p>Trouver un moyen \"malin\" ne pas utiliser les attributs x, y, z pour la surcharge de l'op\u00e9rateur !=.</p> </li> <li> <p>Cr\u00e9er un programme de test.</p> </li> </ol> Solution <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Vecteur3d {\n    private:\n        float x, y, z;\n    public:\n        Vecteur3d (int _x = 0, int _y = 0, int _z = 0) {\n            x = _x;\n            y = _y;\n            z = _z;\n        }\n\n        // Question 1\n        bool operator == (Vecteur3d &amp; v) {\n            return (x == v.x &amp;&amp; y == v.y &amp;&amp; z == v.z);\n        }\n\n        // Question 2\n        bool operator != (Vecteur3d &amp; v) {\n            return !(*this == v);\n        }\n};\n\n// Question 3\nint main() {\n\n    Vecteur3d v1(1, 2, 3), v2(4, 5, 6), v3(1, 2, 3);\n\n    cout &lt;&lt; (v1 == v2) &lt;&lt; endl;\n    cout &lt;&lt; (v1 != v2) &lt;&lt; endl;\n    cout &lt;&lt; (v1 == v3) &lt;&lt; endl;\n    cout &lt;&lt; (v1 != v3) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-4","title":"Exercice 4","text":"<p>Reprendre la classe <code>Tab</code> de l\u2019exercice 0.</p> <ol> <li> <p>Surd\u00e9finir l'op\u00e9rateur = pour que l'affectation soit possible entre deux objets <code>Tab</code>.</p> <pre><code>Tab t1(10), t2(5);\nt2 = t1;\n</code></pre> </li> <li> <p>Surd\u00e9finir l'op\u00e9rateur [] pour affecter et r\u00e9cup\u00e9rer des valeurs directement dans le tableau sans passer par <code>set</code> ou <code>get</code>.  Ne pas oublier d'indiquer un d\u00e9bordement d'indice du tableau.  Dans ce cas, on lancera une exception.</p> <pre><code>Tableau t1(10);\nt1[5] = 7;\ncout &lt;&lt; t1[3];\n</code></pre> Un peu d\u2019aide ? <p>https://en.cppreference.com/w/cpp/language/operators#Array_subscript_operator</p> </li> <li> <p>Surd\u00e9finir l\u2019op\u00e9rateur + pour concat\u00e9ner des tableaux.</p> </li> <li> <p>Trouver un moyen d\u2019afficher un tableau au complet \u00e0 l\u2019aide de <code>cout</code>.</p> <pre><code>Tableau t1(10);\nt1[5] = 7;\ncout &lt;&lt; t1;\n</code></pre> </li> </ol> Solution <pre><code>// Tab.h\n#include &lt;iostream&gt;\n\nusing namespace std;\n\n#ifndef TAB_H\n#define TAB_H\nclass Tab {\n    private :\n        int count;\n        int * first;\n    public :\n        Tab(int);\n        Tab(Tab &amp;);\n        ~Tab();\n        Tab &amp; operator = (Tab);\n        int &amp; operator [] (int);\n        Tab operator + (Tab &amp;);\n        // Fonction \"amie\" d\u00e9finie \u00e0 l'ext\u00e9rieur de la classe, \n        // mais qui aura acc\u00e8s \u00e0 tous les attributs de la classe.\n        friend ostream &amp; operator &lt;&lt; (ostream &amp;, Tab &amp;);\n};\n#endif\n</code></pre> <pre><code>// Tab.cpp\n#include \"Tab.h\"\n\nTab::Tab(int _count) {\n    count = _count;\n    first = new int[count]{0};\n}\n\nTab::Tab(Tab &amp; t) {\n    count = t.count;\n    first = new int[count]{0};\n    for (int i = 0; i &lt; count; i++) {\n        first[i] = t.first[i];\n    }\n}\n\nTab::~Tab() {\n    delete [] first;\n}\n\nTab &amp; Tab::operator = (Tab t) {\n    count = t.count;\n    // On n'oublie pas d'effacer l'ancien tableau\n    delete [] first;\n    first = new int[count]{0};\n    for (int i = 0; i &lt; count; i++) {\n        first[i] = t.first[i];\n    }\n    return *this;\n}\n\nint &amp; Tab::operator [] (int i) {\n    if (i &gt; count) {\n        throw \"Indice hors-limite !\";\n    }\n    return first[i];\n}\n\nTab Tab::operator + (Tab &amp; t) {\n    // Nouveau tableau \n    Tab tNew(count + t.count);\n    // Remplissage de la premi\u00e8re partie avec les valeurs de l'objet courant\n    for (int i = 0; i &lt; count; i++) {\n        tNew.first[i] = first[i];\n    }\n    // Remplissage de la deuxi\u00e8me partie avec les valeurs de l'objet en param\u00e8tre\n    for (int i = 0; i &lt; t.count; i++) {\n        tNew.first[i + count] = t.first[i];\n    }\n    // On renvoie le nouveau tableau\n    return tNew;\n}\n\n// Fonction amie donc juste operator et non Tab::operator\nostream &amp; operator &lt;&lt; (ostream &amp; os, Tab &amp; t) {\n    os &lt;&lt; \"[ \";\n    for (int i = 0; i &lt; t.count; i++) {\n        std::cout &lt;&lt; t.first[i] &lt;&lt; (i &lt; t.count - 1 ? \", \" : \"\" );\n    }\n    os &lt;&lt; \" ]\\n\";\n    return os;\n}\n</code></pre> <pre><code>// exo4.cpp\n#include \"Tab.h\"\n\nint main() {\n    Tab t1(10), t2(5), t3(1);\n\n    cout &lt;&lt; t2;\n    t2 = t1;\n    cout &lt;&lt; t2;\n\n    cout &lt;&lt; t1;\n    t1[5] = 7;\n    cout &lt;&lt; t1[5] &lt;&lt; endl;\n    cout &lt;&lt; t1;\n\n    cout &lt;&lt; t3;\n    t2[3] = 42;\n    t3 = t1 + t2;\n    cout &lt;&lt; t3;\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#heritage","title":"H\u00e9ritage","text":""},{"location":"bts-2/40-poo-3/#exercice-5","title":"Exercice 5","text":""},{"location":"bts-2/40-poo-3/#partie-1","title":"Partie 1","text":"<p>Ecrire une classe Batiment avec les attributs suivants :</p> <pre><code>string adresse;\n</code></pre> <p>La classe Batiment doit disposer des constructeurs suivants:</p> <pre><code>Batiment();\nBatiment (adresse);\n</code></pre> <p>La classe B\u00e2timent doit contenir les accesseurs et mutateurs pour ses attributs.</p>"},{"location":"bts-2/40-poo-3/#partie-2","title":"Partie 2","text":"<p>Ecrire une classe Maison h\u00e9ritant de Batiment avec les attributs suivants:</p> <pre><code>int NbPieces; // Le nombre de pi\u00e8ces de la maison\n</code></pre> <p>La classe Maison doit disposer des constructeurs suivants:</p> <pre><code>Maison();\nMaison(adresse, nbPieces);\n</code></pre> <p>La classe Maison doit contenir des accesseurs pour ses attributs.</p>"},{"location":"bts-2/40-poo-3/#partie-3","title":"Partie 3","text":"<p>Ecrire un programme afin de tester ces deux classes avec le debugger.</p> Solution <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\n// Partie 1\nclass Batiment {\n    private :\n        string adresse;\n    public :\n        Batiment() {\n            adresse = \"Sans adresse\";\n        };\n        Batiment (string _adresse) {\n            adresse = _adresse;\n        };\n        string getAdresse(){\n            return adresse;\n        };\n        void setAdresse(string _adresse) {\n            adresse = _adresse;\n        };\n};\n\n// Partie 2\nclass Maison : public Batiment {\n    private :\n        int nbPieces;\n    public :\n        Maison() {\n            nbPieces = 0;\n        };\n        Maison(string _adresse, int _nbPieces) : Batiment(_adresse) {\n            nbPieces = _nbPieces;\n        };\n        int getNbPieces() {\n            return nbPieces;\n        };\n        void setNbPieces(int _nbPieces) {\n            nbPieces = _nbPieces;\n        };\n};\n\n// Partie 3\nint main() {\n    Batiment b1, b2(\"15 rue Crossadiere 53000 LAVAL\");\n    Maison m1, m2(\"12 rue de la paix 75001 PARIS\", 9);\n\n    cout &lt;&lt; \"b1 : \" &lt;&lt; b1.getAdresse() &lt;&lt; endl;\n    cout &lt;&lt; \"m1 : \" &lt;&lt; m1.getAdresse() &lt;&lt; \" \" &lt;&lt; m1.getNbPieces() &lt;&lt; endl;\n\n    b1.setAdresse(\"165 avenue du General de Gaulle 49100 ANGERS\");\n    m1.setAdresse(\"Lieu-dit la Girandieres 44300 NANTES\");\n    m1.setNbPieces(6);\n\n    cout &lt;&lt; \"b1 : \" &lt;&lt; b1.getAdresse() &lt;&lt; endl;\n    cout &lt;&lt; \"m1 : \" &lt;&lt; m1.getAdresse() &lt;&lt; \" \" &lt;&lt; m1.getNbPieces() &lt;&lt; endl;\n\n    cout &lt;&lt; \"b2 : \" &lt;&lt; b2.getAdresse() &lt;&lt; endl;\n    cout &lt;&lt; \"m2 : \" &lt;&lt; m2.getAdresse() &lt;&lt; \" \" &lt;&lt; m2.getNbPieces() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-6","title":"Exercice 6","text":""},{"location":"bts-2/40-poo-3/#presentation","title":"Pr\u00e9sentation","text":"<p>On veut g\u00e9rer les \u00e9tudiants d\u2019une \u00e9cole \u00e0 l\u2019aide d\u2019une classe <code>Etudiant</code> d\u00e9finie par les attributs suivants :</p> <ul> <li> <p><code>nom</code> : nom d\u2019un \u00e9tudiant</p> </li> <li> <p><code>pr\u00e9nom</code> : pr\u00e9nom d\u2019un \u00e9tudiant</p> </li> <li> <p><code>notes</code> : tableau contenant les notes d\u2019un \u00e9tudiant</p> </li> </ul> <p>Constructeur, destructeur, accesseurs et mutateurs et les m\u00e9thodes suivantes :</p> <ul> <li> <p><code>void affichage()</code>, permettant l\u2019affichage d\u2019un \u00e9tudiant</p> </li> <li> <p><code>float moyenne()</code>, retourne comme r\u00e9sultat la moyenne des notes d\u2019un \u00e9tudiant.</p> </li> </ul> <p>On veut \u00e9galement repr\u00e9senter, \u00e0 l\u2019aide d\u2019une nouvelle classe Etudiant2A, certains \u00e9tudiants qui poss\u00e8dent un attribut suppl\u00e9mentaire :</p> <ul> <li><code>note_stage</code>, qui repr\u00e9sente la note de leur stage.</li> </ul> <p>Les m\u00e9thodes \u00e0 associer \u00e0 cette classe sont les suivantes :</p> <ul> <li> <p><code>void affichage()</code>, permettant l\u2019affichage d\u2019un \u00e9tudiant 2\u00e8me ann\u00e9e</p> </li> <li> <p><code>float moyenne()</code>, retourne la moyenne finale (la moyenne des notes et la note de stage ont le m\u00eame poids).</p> </li> </ul>"},{"location":"bts-2/40-poo-3/#taches","title":"T\u00e2ches","text":"<ol> <li> <p>Donner la repr\u00e9sentation UML des deux classes dans Visual Paradigm.</p> </li> <li> <p>Ecrire la classe Etudiant en C++.</p> </li> <li> <p>Ecrire la classe Etudiant2A en C++.</p> </li> <li> <p>Ecrire un programme de test.</p> </li> </ol> Solution <p>Le diagramme de classe :</p> <pre><code>classDiagram\n    class Etudiant {\n        - nom : string\n        - prenom : string\n        - notes : float [ ]\n        + setNom(_nom = string)\n        + getNom() string\n        + setPrenom(_prenom : string)\n        + getPrenom() string\n        + addNote(_note : float)\n        + getNotes() float [ ]\n        + affichage()\n        + moyenne() float\n    }\n    class Etudiant2A {\n        - note_stage : float\n        + setNoteStage(_note : float)\n        + getNoteStage() float\n        + affichage()\n        + moyenne() float\n    }\n    Etudiant &lt;|-- Etudiant2A</code></pre> <p>Le code correspondant :</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\nusing namespace std;\n\nclass Etudiant {\n    protected :\n        string nom;\n        string prenom;\n        vector&lt;float&gt; notes;\n\n    public :\n        Etudiant(string _nom, string _prenom) {\n            nom = _nom;\n            prenom = _prenom;\n        };\n\n        void setNom(string _nom) { nom = _nom; };\n\n        string getNom() { return nom; };\n\n        void setPrenom(string _prenom) { prenom = _prenom; };\n\n        string getPrenom() { return prenom; };\n\n        void addNote(float _note) { notes.push_back(_note); };\n\n        vector&lt;float&gt; getNotes() { return notes; };\n\n        void affichage() {\n            cout &lt;&lt; prenom &lt;&lt; \" \" &lt;&lt; nom &lt;&lt; \" (1A), moyenne : \" &lt;&lt; moyenne() &lt;&lt; \" [\";\n            for (int i = 0; i &lt; notes.size(); i++) {\n                cout &lt;&lt; (i != 0 ? \", \" : \"\") &lt;&lt; notes[i];\n            }\n            cout &lt;&lt; \"]\" &lt;&lt; endl;\n        };\n\n        float moyenne() {\n            float resultat = 0;\n            for (int i = 0; i &lt; notes.size(); i++) {\n                resultat += notes[i];\n            }\n            return resultat / notes.size();\n        }\n};\n\nclass Etudiant2A : public Etudiant {\n    private :\n        float note_stage;\n    public :\n        Etudiant2A(string _nom, string _prenom) : Etudiant(_nom, _prenom) {};\n\n        void setNoteStage(float _note_stage) { note_stage = _note_stage; };\n\n        float getNoteStage() { return note_stage; };\n\n        float moyenne() {\n            return (Etudiant::moyenne() * notes.size() + note_stage) / (notes.size() + 1);\n        }\n\n        void affichage() {\n            cout &lt;&lt; prenom &lt;&lt; \" \" &lt;&lt; nom &lt;&lt; \" (1A), moyenne : \" &lt;&lt; moyenne() &lt;&lt; \" [\";\n            for (int i = 0; i &lt; notes.size(); i++) {\n                cout &lt;&lt; (i != 0 ? \", \" : \"\") &lt;&lt; notes[i];\n            }\n            cout &lt;&lt; \", stage : \" &lt;&lt; note_stage &lt;&lt; \"]\" &lt;&lt; endl;\n        };\n};\n\nint main() {\n\n    Etudiant e1(\"HADDOCK\", \"Archibald\"), e2(\"TOURNESOL\", \"Tryphon\");\n    Etudiant2A e3(\"SZUT\", \"Piotr\");\n\n    srand(time(NULL));\n\n    // Remplissage al\u00e9atoire des notes\n    for (int i = 0; i &lt; 8; i++) {\n        e1.addNote((float)(rand() % 41) / 2);\n        e2.addNote((float)(rand() % 41) / 2);\n        e3.addNote((float)(rand() % 41) / 2);\n    }\n\n    e3.setNoteStage(14.5);\n\n    // Affichage\n    e1.affichage();\n    e2.affichage();\n    e3.affichage();\n\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-7","title":"Exercice 7","text":"<p>Soit les classes suivantes :</p> <pre><code>class A1 {};\nclass B1 : public A1 {};\n</code></pre> <p>Compl\u00e9ter les classes A et B pour que le programme suivant sans modification :</p> <pre><code>int main() {\n    B1 *p = new B1;\n    delete p;\n    return 0;\n}\n</code></pre> <p>affiche :</p> <pre><code>constructeur A1\nconstructeur B1\ndestructeur B1\ndestructeur A1\n</code></pre> Solution <pre><code>#include &lt;iostream&gt;\n\nclass A1 {\n    public :\n        A1() {\n            std::cout &lt;&lt; \"constructeur A1\" &lt;&lt; std::endl;\n        }\n        ~A1() {\n            std::cout &lt;&lt; \"destructeur A1\" &lt;&lt; std::endl;\n        };\n};\nclass B1 : public A1 {\n    public :\n        B1() {\n            std::cout &lt;&lt; \"constructeur B1\" &lt;&lt; std::endl;\n        };\n        ~B1() {\n            std::cout &lt;&lt; \"destructeur B1\" &lt;&lt; std::endl;\n        };\n};\n\nint main() {\n    B1 *p = new B1;\n    delete p;\n    return 0;\n}\n</code></pre>"},{"location":"bts-2/40-poo-3/#exercice-8","title":"Exercice 8","text":"<p>Soit une classe qui repr\u00e9sente un point dans un plan.</p> <pre><code>class Point2d {\n    int x, y;\n    public:\n        Point2d(int _x, int _y) {\n            x = _x, y = _y;\n        }\n        Point2d(Point2d &amp; p) {\n            x = p.x, y = p.y;\n        }\n        void affiche() {\n            cout &lt;&lt; \"x = \" &lt;&lt; x &lt;&lt; \" y = \" &lt;&lt; y;\n        }\n};\n</code></pre> <ol> <li> <p>Ecrire une classe <code>Point3d</code> d\u00e9riv\u00e9e de la classe qui rajoute une cordonn\u00e9e <code>z</code> au point.      Cette classe poss\u00e8de une fonction membre <code>affiche()</code> qui affiche :</p> <pre><code>z = (valeur de z)\n</code></pre> </li> <li> <p>Ecrire un programme (main) qui cr\u00e9e un objet <code>Point3d</code> avec les coordonn\u00e9es 1, 2, 3.      Le programme doit afficher :</p> <pre><code>x = 1 y = 2 z = 3\n</code></pre> </li> <li> <p>Modifier la m\u00e9thode <code>affiche()</code> de la classe <code>Point3d</code> pour qu'elle affiche en appelant la m\u00e9thode affiche de la classe Point2d</p> <pre><code>x = 1 y = 2 z = 3\n</code></pre> </li> <li> <p>Supprimer/commenter la m\u00e9thode affiche() de Point2d et faire le n\u00e9cessaire pour utiliser une seule m\u00e9thode affiche() dans Point3d pour afficher :</p> <pre><code>x = 1 y = 2 z = 3\n</code></pre> </li> </ol>"},{"location":"bts-2/40-poo-3/#exercice-9","title":"Exercice 9","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nclass Chambre {\n    float surface;\n    int fenetres;\n    public :\n        Chambre(float cSurface = 9.0, int cFenetres = 0) {\n            surface = cSurface, fenetres = cFenetres;\n        };\n        string toString() {\n            char sSurface[5];\n            sprintf(sSurface, \"%.1f\", surface);\n            return \"[\" + (string)sSurface + \" m2, \" + to_string(fenetres) + (fenetres &gt; 1 ? \" fenetres\" : \" fenetre\") + \"]\";\n        };\n};\n\nclass Batiment {\n    protected:\n        string adresse;\n    public:\n        Batiment(string adr) : adresse(adr) {};\n        string getAdr() {\n            return adresse;\n        };\n};\n\nclass Maison : public Batiment\n{\n    Chambre * chambres;\n    int nbChambres;\n    public:\n        Maison(int nCh, string adr, Chambre * mChambres) : Batiment(adr) {\n            chambres = new Chambre[nbChambres = nCh];\n            for(int i = 0; i &lt; nbChambres; i++) {\n                chambres[i] = mChambres[i];\n            }\n        }\n        ~Maison() {\n            delete [] chambres;\n        }\n        int getNbChambres() {\n            return nbChambres;\n        }\n        string afficheChambres() {\n            string result = \"\";\n            for(int i = 0; i &lt; nbChambres; i++) {\n                if (i != 0) {\n                    result += \", \";\n                }\n                result += chambres[i].toString();\n            }\n            return result;\n        }\n};\n\nint main()\n{\n    Chambre chambres[] = {Chambre(12.5, 1), Chambre(14, 2), Chambre(9, 1)};\n    Maison *m1 = new Maison(3, \"LAVAL\", chambres);\n    cout &lt;&lt; \"Maison 1 a \" &lt;&lt; m1-&gt;getAdr() &lt;&lt; \", chambres \" &lt;&lt;  m1-&gt;getNbChambres() &lt;&lt; \" : \" &lt;&lt; m1-&gt;afficheChambres() &lt;&lt; endl;\n    Maison m2 = *m1;\n    delete m1;\n    cout &lt;&lt; \"Maison 2 a \" &lt;&lt; m2.getAdr() &lt;&lt; \", chambres \" &lt;&lt;  m2.getNbChambres() &lt;&lt; \" : \"   &lt;&lt; m2.afficheChambres() &lt;&lt; endl;\n}\n</code></pre> <ol> <li> <p>Le programme devrait afficher le r\u00e9sultat suivant, mais...</p> <pre><code>Maison 1 a LAVAL, chambres 3 : [12.5 m2, 1 fenetre], [14.0 m2, 2 fenetres], [9.0 m2, 1 fenetre]\nMaison 2 a LAVAL, chambres 3 : [12.5 m2, 1 fenetre], [14.0 m2, 2 fenetres], [9.0 m2, 1 fenetre]\n</code></pre> <p>Identifier l'anomalie, puis compl\u00e9ter le programme sans modifier le <code>main()</code> pour corriger l'anomalie.</p> <p>Proposer deux solutions.</p> Solution <p>Le probl\u00e8me vient de la ligne :</p> <pre><code>Maison m2 = *m1;\n</code></pre> <p>Lors de l'initialisation, le constructeur par recopie \"standard\" recopie \"b\u00eatement\" les valeurs des attributs de <code>*m1</code> dans <code>m2</code>, m\u00eame le pointeur <code>chambres</code>. Les deux objets se retrouvent alors \u00e0 pointer sur le m\u00eame tableau de chambres. Quand <code>m1</code> est supprim\u00e9 avec ses chambres \u00e0 la ligne suivante, le pointeur <code>chambres</code> de <code>m2</code> se retrouve \u00e0 pointer dans le vide, d'o\u00f9 l'affichage chaotique...</p> <p>Il faut surd\u00e9finir le constructeur par recopie de la classe <code>Maison</code>. La pr\u00e9sence de l'h\u00e9ritage de <code>Batiment</code> nous am\u00e8ne \u00e0 r\u00e9fl\u00e9chir \u00e0 comment lui passer les informations concernant l'adresse. Deux options :</p> <ul> <li> <p>passer au constructeur de Batiment les infos de l'adresse :</p> <pre><code>// Dans la classe Maison\nMaison(Maison &amp; m) : Batiment(m.adresse) {\n    nbChambres = m.nbChambres;\n    chambres = new Chambre[nbChambres];\n    for(int i = 0; i &lt; nbChambres; i++) {\n        chambres[i] = m.chambres[i];\n    }\n};\n</code></pre> </li> <li> <p>tout g\u00e9rer dans le constructeur par recopie et cr\u00e9er un constructeur vide c\u00f4t\u00e9 Batiment :</p> <pre><code>// Dans la classe Batiment\nBatiment() {\n    adresse = \"\";\n}\n\n// Dans la classe Maison\nMaison(Maison &amp; m) {\n    adresse = m.adresse;\n    nbChambres = m.nbChambres;\n    chambres = new Chambre[nbChambres];\n    for(int i = 0; i &lt; nbChambres; i++) {\n        chambres[i] = m.chambres[i];\n    }\n};\n</code></pre> </li> </ul> </li> <li> <p>Modifier le programme dans le cas d'un h\u00e9ritage <code>protected</code> :</p> <pre><code>class Maison : protected Batiment\n</code></pre> Solution <p>En passant l'h\u00e9ritage en <code>protected</code>, les m\u00e9thodes <code>public</code> passent en <code>protected</code> et ne sont donc plus accessibles de l'ext\u00e9rieur.</p> <p>Il faut surd\u00e9finir la m\u00e9thode <code>getAdr</code>, dans la classe <code>Maison</code> pour qu'elle soit de nouveau disponible (quitte \u00e0 ne rien lui faire faire de plus qu'un appel \u00e0 la fonction originale...).</p> <pre><code>// Dans la classe Maison\nstring getAdr() {\n    return Batiment::getAdr();\n};\n</code></pre> </li> </ol>"},{"location":"bts-2/40-poo-3/#exercice-10","title":"Exercice 10","text":"<p>Dans Qt Creator, ouvrir le projet Exemples &gt; Drag and Drop Robot Example et r\u00e9pondre aux questions suivantes :</p> <ol> <li> <p>Lister les classes cr\u00e9\u00e9es dans le projet.</p> Solution <ul> <li><code>ColorItem</code></li> <li><code>RobotPart</code></li> <li><code>RobotHead</code></li> <li><code>RobotTorso</code></li> <li><code>RobotLimb</code></li> <li><code>Robot</code></li> </ul> </li> <li> <p>De quelles classes h\u00e9ritent-t-elles ?</p> Solution <ul> <li><code>QGraphicsItem</code> \u2190 <code>ColorItem</code></li> <li><code>QGraphicsObject</code> \u2190 <code>RobotPart</code></li> <li><code>RobotPart</code> \u2190 <code>RobotHead, RobotTorso, RobotLimb, Robot</code></li> </ul> </li> <li> <p>Dessiner le diagramme de classes \"all\u00e9g\u00e9\" (juste les noms des classes \ud83e\udee3) du programme en affichant les classes h\u00e9rit\u00e9es.</p> Solution <p></p> </li> <li> <p>La m\u00e9thode <code>dragLeaveEvent()</code> est-elle accessible dans la classe <code>RobotHead</code> ?      Pourquoi ?</p> Solution <p>Oui car <code>dragLeaveEvent()</code> est d\u00e9finie en <code>protected</code> dans <code>RobotPart</code> dont h\u00e9rite <code>RobotHead</code>.</p> </li> <li> <p>La m\u00e9thode <code>connect()</code> est-elle accessible dans la classe <code>RobotHead</code> ?      Pourquoi ?</p> Solution <p>Oui car <code>connect()</code> est d\u00e9finie en <code>public</code> dans <code>QObject</code> dont h\u00e9rite <code>RobotHead</code> par l'interm\u00e9diaire de <code>RobotPart</code> et <code>QGraphicsObject</code>.</p> </li> <li> <p>La m\u00e9thode <code>connect()</code> est-elle accessible dans la classe <code>ColorItem</code> ?      Pourquoi ?</p> Solution <p>Non pas directement car <code>connect()</code> est d\u00e9finie en <code>public</code> dans <code>QObject</code> dont n'h\u00e9rite pas <code>ColorItem</code>, mais comme elle est d\u00e9finie en <code>*static*</code>, ce serait possible sans cr\u00e9er d'objet.</p> </li> <li> <p>Dans robot.cpp, \u00e0 quoi sert la ligne 61 ?</p> Solution <p>Elle permet de passer des arguments aux constructeurs des classes h\u00e9rit\u00e9es ou des attributs.</p> </li> <li> <p>Quelle m\u00e9thode faut-il surcharger pour modifier l'apparence d'un <code>QGraphicsObject</code> ?</p> Solution <p>Il faut surcharger la m\u00e9thode <code>QGraphicsItem::paint()</code>.</p> </li> <li> <p>Modifier le programme pour que le robot ait une t\u00eate carr\u00e9e.</p> Solution <pre><code>// dans RobotHead::paint(), ligne 5 :\npainter-&gt;drawRoundedRect(-15, -30, 30, 30, 25, 25, Qt::RelativeSize);\n</code></pre> </li> <li> <p>D\u00e9poser une couleur sur certains membres est compliqu\u00e9, modifier le programme pour ralentir l'animation.</p> Solution <pre><code>// dans Robot::Robot(), ligne 91 :\nanim-&gt;setDuration(5000);\n</code></pre> </li> <li> <p>Une image de t\u00eate appara\u00eet lors de certains glisser-d\u00e9poser, quand ?  </p> Solution <p>A partir du 2\u00e8me glisser-d\u00e9poser et 1 fois sur 4 comme l'indique la ligne suivante dans <code>ColorItem::mouseMoveEvent()</code> :</p> <pre><code>if (n++ &gt; 2 &amp;&amp; QRandomGenerator::global()-&gt;bounded(3) == 0) {\n</code></pre> </li> <li> <p>La couleur des cercles sur les c\u00f4t\u00e9s est g\u00e9n\u00e9r\u00e9e al\u00e9atoirement, o\u00f9 cela est-il cod\u00e9 ?</p> Solution <p>Dans la d\u00e9finition du constructeur des <code>ColorItem</code> : </p> <pre><code>ColorItem::ColorItem()\n    : color(QRandomGenerator::global()-&gt;bounded(256), QRandomGenerator::global()-&gt;bounded(256), QRandomGenerator::global()-&gt;bounded(256))\n</code></pre> </li> <li> <p>Supprimer la g\u00e9n\u00e9ration al\u00e9atoire des couleurs pour la remplacer par un set de couleurs fixes \u00e0 d\u00e9finir.</p> Solution <p>Il faut d'abord enlever cette valorisation al\u00e9atoire puis coder une valorisation fixe, par exemple \u00e0 partir d'un tableau de <code>QColor</code> et \u00e0 l'aide d'une variable statique.</p> </li> </ol>"},{"location":"bts-2/90-qt-1/","title":"Qt","text":""},{"location":"bts-2/90-qt-1/#objectifs","title":"Objectifs","text":"<ul> <li>Installer Qt</li> <li>D\u00e9couvrir le framework Qt</li> <li>Se rep\u00e9rer dans le mod\u00e8le objets de Qt</li> <li>D\u00e9tecter et expliquer le m\u00e9canisme de signaux/slots de Qt</li> <li>Param\u00e9trer l\u2019environnement de d\u00e9veloppement Qt Creator</li> <li>Diff\u00e9rencier les contr\u00f4les disponibles dans Qt</li> </ul>"},{"location":"bts-2/90-qt-1/#travail","title":"Travail","text":""},{"location":"bts-2/90-qt-1/#mise-en-situation","title":"Mise en situation","text":"<p>Votre chef vous annonce que votre \u00e9quipe va devoir d\u00e9velopper une application multi-plateforme \u00e0 l'aide de l'environnement de d\u00e9veloppement Qt. Il ne le conna\u00eet pas et vous non plus \ud83d\ude35\u200d\ud83d\udcab. </p> <p>Pour se faire une id\u00e9e de la difficult\u00e9 de mise en oeuvre, puis chiffrer le d\u00e9veloppement, il vous demande d'\u00e9tudier le framework et de lui pr\u00e9parer un guide simple, imag\u00e9 et rapide \u00e0 lire du fonctionnement des applications Qt.</p>"},{"location":"bts-2/90-qt-1/#partie-1-1h-installation","title":"Partie 1 (1h) - Installation","text":"<p>Installons ensemble Qt sur votre poste.</p> <p>A l'aide de copies d'\u00e9cran et de vos notes, r\u00e9diger un manuel d'installation de Qt.</p> <p>Testez-le en installant Qt sur votre poste \u00e0 la maison.</p> <p>Travail \u00e0 rendre sur EcoleDirecte/Cahier de texte pour jeudi 07/11/2024 au format PDF</p>"},{"location":"bts-2/90-qt-1/#partie-2-1h30-etude-dune-application","title":"Partie 2 (1h30) - Etude d'une application","text":"<p>Etudier en bin\u00f4me une application exemple QT parmi les deux applications suivantes : </p> <ul> <li> <p>Text Edit</p> </li> <li> <p>Calculator Form</p> </li> </ul> <p>En vous aidant de la documentation de l'application, de l'aide et de la documentation en ligne (https://doc.qt.io/) :</p> <ul> <li>Lancer l'application et la tester.</li> <li>Visiter l'environnement de d\u00e9veloppement</li> <li>D\u00e9tecter le point d'entr\u00e9e du programme.</li> <li>Trouver l'endroit o\u00f9 est con\u00e7ue l'IHM.<ul> <li>Tenter de d\u00e9placer un \u00e9l\u00e9ment/contr\u00f4le.</li> <li>Identifier/Lister les propri\u00e9t\u00e9s des \u00e9l\u00e9ments d'IHM. Que peut-on modifier ?</li> <li>Trouver la liste des \u00e9l\u00e9ments d'IHM disponibles</li> </ul> </li> <li>Identifier les m\u00e9thodes correspondant aux actions des contr\u00f4les.<ul> <li>Trouver o\u00f9 est le code correspondant \u00e0 l'activation d'un \u00e9l\u00e9ment.</li> <li>Comment l'\u00e9l\u00e9ment graphique et son code sont-ils li\u00e9s ?</li> </ul> </li> </ul>"},{"location":"bts-2/90-qt-1/#partie-2-30-synthese","title":"Partie 2 (30') - Synth\u00e8se","text":""},{"location":"bts-2/90-qt-2/","title":"Qt - Premier projet","text":""},{"location":"bts-2/90-qt-2/#creation-dun-projet","title":"Cr\u00e9ation d\u2019un projet","text":"<p>Les captures ont \u00e9t\u00e9 r\u00e9alis\u00e9es avec diff\u00e9rentes versions de Qt Creator, des libell\u00e9s peuvent diff\u00e9rer de ce que vous voyez \u00e0 l'\u00e9cran.</p> <ol> <li> <p>Cliquer sur : Fichier &gt; Nouveau fichier ou projet</p> <p></p> </li> <li> <p>S\u00e9lectionner Application (Qt) puis Qt Widgets Application et cliquer sur Choisir\u2026</p> <p></p> </li> <li> <p>Sur la page Emplacement/Location donner un nom au projet et s\u00e9lectionner le chemin du projet (au choix) les r\u00e9pertoires sont \u00e0 cr\u00e9er s\u2019ils n'existent pas. Cliquer sur Suivant.</p> <p></p> </li> <li> <p>Sur la page Syst\u00e8me de compilation/Build System, choisir le syst\u00e8me qmake. Cliquer sur Suivant.</p> <p></p> </li> <li> <p>Sur la page D\u00e9tails/Details, laisser le nom par d\u00e9faut de la fen\u00eatre principale <code>MainWindow</code>. Cliquer sur Suivant.</p> <p></p> </li> <li> <p>Sur la page Traduction/Translation, laisser les valeurs par d\u00e9faut. Cliquer sur Suivant.</p> <p></p> </li> <li> <p>Sur la page Kits/Kits, s\u00e9lectionner les cibles pour lesquelles vous souhaitez cr\u00e9er le programme. Cliquer sur Suivant.</p> <p></p> </li> <li> <p>Sur la page R\u00e9sum\u00e9/Summary, laisser les valeurs par d\u00e9faut. Cliquer sur Terminer.</p> <p></p> </li> <li> <p>Appuyer sur la fl\u00e8che verte en bas \u00e0 gauche.</p> <p></p> </li> <li> <p>Le programme se lance, la fen\u00eatre est vide.</p> <p></p> </li> </ol> <p>\ud83d\udc4d Votre projet est pr\u00eat pour le d\u00e9veloppement !</p>"},{"location":"bts-2/90-qt-2/#les-fichiers","title":"Les fichiers","text":"<p>A tout moment, utiliser la touche F1 pour avoir de l\u2019aide sur les classes des widgets et des classes Qt (la documentation est disponible sur https://doc.qt.io/).</p>"},{"location":"bts-2/90-qt-2/#maincpp","title":"<code>main.cpp</code>","text":"<pre><code>#include \"mainwindow.h\"\n\n#include &lt;QApplication&gt;\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv); // (1)!\n    MainWindow w; // (2)!\n    w.show(); // (3)!\n    return a.exec(); // (4)!\n}\n</code></pre> <ol> <li>Cr\u00e9ation de l'objet qui g\u00e8re l'application.</li> <li>Cr\u00e9ation de l'objet qui g\u00e8re la fen\u00eatre principale.</li> <li>Affichage de la fen\u00eatre principale.</li> <li>Lancement de la boucle d'\u00e9v\u00e9nement.</li> </ol> <p>On ne modifie que rarement ce fichier.</p>"},{"location":"bts-2/90-qt-2/#mainwindowcpp","title":"<code>mainwindow.cpp</code>","text":"<p>C'est ici que la plupart de vos d\u00e9veloppements vont trouver place.</p> <pre><code>#include \"mainwindow.h\"\n#include \"ui_mainwindow.h\"\n\nMainWindow::MainWindow(QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow)\n{\n    ui-&gt;setupUi(this/* (4)!*/);\n\n    // (1)!\n}\n\nMainWindow::~MainWindow()\n{\n    // (2)!\n\n    delete ui;\n}\n\n// (3)!\n</code></pre> <ol> <li>Placer ici tout le code \u00e0 ex\u00e9cuter lors du chargement de la fen\u00eatre... (cr\u00e9ation des widgets, connexions signaux/slots...)</li> <li>... et ici lors de la fermeture (suppression des allocations dynamiques, fermeture de connexions aux bases de donn\u00e9es...)</li> <li>Ici viendront les d\u00e9finitions des slots que vous cr\u00e9erez.</li> <li><code>this</code> est un pointeur sur l'objet MainWindow.</li> </ol> <p><code>ui</code> est un attribut (donc disponible dans toute la classe) qui pointe sur les widgets ajout\u00e9s de la fen\u00eatre :</p> <p></p>"},{"location":"bts-2/90-qt-2/#connexion-signal-slot","title":"Connexion signal \u2192 slot","text":"<ol> <li> <p>Dans la partie projet, double-cliquer sur le fichier <code>mainwindow.ui</code>.</p> <p></p> </li> <li> <p>Le designer appara\u00eet :</p> <p></p> </li> <li> <p>Pour ajouter un bouton sur la fen\u00eatre, faire un glisser-d\u00e9poser du widget de la liste des widgets vers l'aper\u00e7u de la fen\u00eatre.</p> <p></p> </li> </ol>"},{"location":"bts-2/90-qt-2/#connexion-via-le-designer","title":"\ud83e\uddf8 Connexion via le designer","text":"<p>Nous allons connecter le clic sur le bouton que nous venons de poser \u00e0 la fermeture de la fen\u00eatre.  </p> <p>Le signal <code>QPushButton::clicked()</code> et le slot <code>QMainWindow::close()</code> sont deux \u00e9l\u00e9ments natifs du framework (que nous n'avons pas \u00e0 d\u00e9velopper).</p> <ol> <li> <p>Passer en mode slots ( F4 ).</p> <p></p> </li> <li> <p>Cliquer sur le widget \u00e0 l'origine du signal (le bouton) et, tout en maintenant le clic, d\u00e9placer le curseur vers la cible propri\u00e9taire du slot \u00e0 d\u00e9clencher (la fen\u00eatre). </p> <p></p> </li> <li> <p>La liste des signaux et slots s'affiche. </p> <p>Cliquer sur la case \u00e0 cocher Afficher les signaux et slots h\u00e9rit\u00e9s de QWidget.</p> <p></p> </li> <li> <p>Choisir le signal et le slot \u00e0 connecter, ici, on choisit :</p> <ul> <li> <p><code>clicked()</code> dans la liste de gauche,</p> </li> <li> <p><code>close()</code> dans la liste de droite.</p> </li> </ul> <p></p> </li> <li> <p>Valider et visualiser le r\u00e9sultat graphique.</p> <p></p> </li> <li> <p>R\u00e9sultat : un clic sur le bouton ferme la fen\u00eatre.</p> <p>Tester en lan\u00e7ant l\u2019application en appuyant sur la fl\u00e8che verte en bas \u00e0 gauche.</p> <p></p> </li> </ol>"},{"location":"bts-2/90-qt-2/#connexion-via-le-code","title":"\ud83c\udf96\ufe0f Connexion via le code","text":"<p>On peut aussi associer un signal \u00e0 un slot via le code.</p> <p>C'est le mode op\u00e9ratoire \u00e0 privil\u00e9gier car il permet de centraliser les connexions dans le code et d'ainsi mieux les g\u00e9rer.</p> <p>Nous allons connecter le clic sur un nouveau bouton \u00e0 l'agrandissement de la fen\u00eatre : le signal <code>QPushButton::clicked()</code> et le slot <code>QMainWindow::showMaximized()</code></p> <ol> <li> <p>Ajouter un nouveau bouton via le designer</p> </li> <li> <p>Renommer l'objet en <code>bouton_2</code> en modifiant son <code>objectName</code> dans l'\u00e9diteur de propri\u00e9t\u00e9 ou en double-cliquant dessus dans l'inspecteur d'objets.</p> <p></p> </li> <li> <p>Changer son libell\u00e9 en <code>Bouton 2</code> en modifiant son <code>text</code> dans l'\u00e9diteur de propri\u00e9t\u00e9 ou en double-cliquant dessus dans l'aper\u00e7u de la fen\u00eatre.</p> <p></p> </li> <li> <p>Sauvegarder le fichier mainwindow.ui.</p> </li> <li> <p>Ouvrir le fichier mainwindow.cpp.</p> </li> <li> <p>Dans le constructeur, apr\u00e8s l'instruction <code>ui-&gt;setupUi(this);</code>, ajouter la ligne suivante :</p> <pre><code>connect(\n    ui-&gt;bouton_2/*(1)!*/, \n    SIGNAL(clicked(bool))/*(2)!*/, \n    this/*(3)!*/, \n    SLOT(showMaximized())/*(4)!*/\n);\n</code></pre> <ol> <li>Un pointeur vers l'objet qui envoie le signal : <code>ui-&gt;bouton_2</code></li> <li>Le prototype du signal en param\u00e8tre de la macro <code>SIGNAL()</code> : <code>SIGNAL(clicked(bool))</code></li> <li>Un pointeur vers l'objet qui contient le slot : <code>this</code> (la MainWindow)</li> <li>Le prototype du slot en param\u00e8tre de la macro <code>SLOT()</code> : <code>SLOT(showMaximized())</code></li> </ol> <code>ui-&gt;bouton_2</code> n'est pas propos\u00e9 par l'auto-compl\u00e9tion ? <p>Il peut arriver que les widgets tout juste ajout\u00e9s n'apparaissent pas en auto-compl\u00e9tion :</p> <p></p> <p>Veillez \u00e0 bien sauvegarder tous les fichiers puis lancer une compilation (build) en cliquant sur le bouton avec le marteau pour rafra\u00eechir Qt Creator.</p> <p></p> </li> <li> <p>Sauvegarder et tester.</p> </li> </ol>"},{"location":"bts-2/90-qt-2/#connexion-via-aller-au-slot","title":"\u26a0\ufe0f Connexion via \"Aller au slot\"","text":"<p>Vous noterez peut-\u00eatre qu'il est possible de d\u00e9clarer un slot, le connecter \u00e0 un signal et le d\u00e9finir en une seule action \ud83e\udd29 via le clic-droit sur un widget puis Aller au slot....</p> <p>Elle est not\u00e9e comme obsol\u00e8te (deprecated) dans les derni\u00e8res versions de Qt et ne sera donc bient\u00f4t plus support\u00e9e (un programme utilisant cette fonctionnalit\u00e9 devra \u00eatre red\u00e9velopp\u00e9 avant de le mettre \u00e0 jour).</p> <p>Vous pouvez donc utiliser cette fonctionnalit\u00e9 pour un prototypage rapide, mais c'est tout... \ud83d\ude2d</p> <p></p> <p></p>"},{"location":"bts-2/90-qt-2/#deboguer","title":"D\u00e9boguer","text":"<p>Pour mettre des traces dans votre programme vous pouvez utiliser <code>qDebug()</code>.</p> <p><code>qDebug()</code> est une fonction mais s\u2019utilise comme cout.</p> <p>Les messages soumis \u00e0 <code>qDebug()</code> s'affichent dans le terminal visible dans l'onglet Sortie de l'application.</p> <pre><code>#include &lt;QDebug&gt;\n\n...\n\nqDebug() &lt;&lt; \"Je suis pass\u00e9 par ici\";\n</code></pre> <p></p>"},{"location":"bts-2/90-qt-3/","title":"Exercices","text":"<p>Au travers des exercices suivants, vous allez pouvoir manipuler les widgets et le m\u00e9canisme de signal/slot sur la base du cours, des \u00e9l\u00e9ments vus pr\u00e9c\u00e9demment et de vos recherches dans la documentation.</p> <p></p> <p>Cr\u00e9er une application graphique QT Widgets dont le titre est TP QT BTS2 et qui servira de projet pour l\u2019ensemble des exercices.</p>"},{"location":"bts-2/90-qt-3/#exercice-1","title":"Exercice 1","text":"<p>Objectifs</p> <ul> <li> <p>Cr\u00e9er des boutons</p> </li> <li> <p>Leur affecter des actions avec le designer et avec le code.</p> </li> </ul> <ol> <li> <p>Ajouter 4 boutons \u00e0 l\u2019aide du designer :</p> <p></p> </li> <li> <p>Utiliser l'association des signaux et slots ( F4 ) pour r\u00e9aliser ces 3 actions :</p> <ul> <li> <p>Bouton Agrandir affiche la fen\u00eatre en taille maximale.</p> </li> <li> <p>Bouton Normal affiche la fen\u00eatre dans sa taille d'origine</p> </li> <li> <p>Bouton Quitter ferme l'application</p> </li> </ul> </li> <li> <p>Utiliser la connexion par le code pour r\u00e9aliser l'action suivante :</p> <ul> <li>Bouton R\u00e9duire r\u00e9duit la fen\u00eatre dans la barre des t\u00e2ches (MainWindow).</li> </ul> </li> </ol>"},{"location":"bts-2/90-qt-3/#exercice-2","title":"Exercice 2","text":"<p>Objectifs</p> <ul> <li> <p>Modifier\u00a0un widget cr\u00e9\u00e9 via le designer par le code</p> </li> <li> <p>Faire communiquer deux widgets en utilisant le designer.</p> </li> </ul> <ol> <li> <p>Ajouter un widget ComboBox et un widget LineEdit via le designer\u00a0:</p> <p></p> </li> <li> <p>Remplir la ComboBox avec la m\u00e9thode <code>addItem()</code> de la classe <code>QComboBox</code> depuis le constructeur de la <code>MainWindow</code> (en utilisant <code>ui</code>).</p> </li> <li> <p>Utiliser l'association des signaux et slots (F4) pour remplacer le texte du LineEdit par le texte de l\u2019item s\u00e9lectionn\u00e9 dans la ComboBox.</p> </li> </ol>"},{"location":"bts-2/90-qt-3/#creation-de-signals-et-de-slots","title":"Cr\u00e9ation de signals et de slots","text":""},{"location":"bts-2/90-qt-3/#exercice-3","title":"Exercice 3","text":"<p>Objectifs</p> <p>Cr\u00e9er un slot et le connecter \u00e0 des widgets.</p> <ol> <li> <p>Ajouter un GroupBox et y ajouter deux RadioButton.</p> <p></p> <p>Suivant la s\u00e9lection, une image sera affich\u00e9e ou non au fond de la fen\u00eatre.</p> </li> <li> <p>Ajouter un slot <code>changeBackground()</code> dans la classe <code>MainWindow</code> pour traiter la s\u00e9lection des <code>QRadioButton</code>. La d\u00e9finition de la m\u00e9thode sera trait\u00e9e plus loin dans l\u2019exercice.</p> </li> <li> <p>Par programmation, dans le constructeur de la <code>MainWindow</code>, connecter (avec la primitive <code>connect</code>) le signal <code>clicked()</code> des deux <code>QRadioButton</code> au slot <code>changeBackground()</code>.</p> </li> <li> <p>Ajouter une image en tant que ressource du projet\u00a0:</p> <ol> <li> <p>Dans l\u2019arborescence, cliquer-droit sur le nom du projet et choisir Add new\u2026</p> </li> <li> <p>Dans la fen\u00eatre, choisir Qt &gt; Qt Resource File et cliquer sur Choose\u2026</p> <p></p> </li> <li> <p>Nommer le fichier resources.qrc et valider les \u00e9tapes suivantes</p> </li> <li> <p>Double-cliquer sur le nouveau fichier</p> </li> <li> <p>Cliquer sur Add Prefix</p> </li> <li> <p>Modifier la valeur du Pr\u00e9fixe\u00a0pour /images</p> </li> <li> <p>Copier-coller une image (800x600) au choix dans le dossier du projet via l\u2019explorateur Windows</p> </li> <li> <p>Cliquer sur Add Files</p> </li> <li> <p>S\u00e9lectionner l\u2019image et valider</p> <p></p> </li> <li> <p>Sauvegarder le fichier resources.qrc</p> </li> </ol> </li> <li> <p>En fonction du <code>QRadioButton</code> coch\u00e9 (<code>checked</code>), utiliser la m\u00e9thode <code>setStyleSheet()</code> de la classe <code>MainWindow</code> pour changer l\u2019image de fond du widget central\u00a0avec une des valeurs suivantes :</p> <pre><code>// Utiliser une image pour le fond d'\u00e9cran\n\"#centralwidget { background-image: url(:/images/{nom_de_l_image.jpg); }\"\n\n// Masquer l'image en fond d'\u00e9cran\n\"#centralwidget { background-image: none; }\"\n</code></pre> </li> </ol>"},{"location":"bts-2/90-qt-3/#exercice-4","title":"Exercice 4","text":"<p>Objectifs</p> <p>R\u00e9cup\u00e9rer une valeur de l\u2019IHM depuis un slot cr\u00e9\u00e9.</p> <p>On veut pouvoir modifier le titre de la fen\u00eatre apr\u00e8s avoir saisi une valeur dans un widget LineEdit et appuy\u00e9 sur Entr\u00e9e.</p> <p>Peut-on le faire directement depuis le designer\u00a0? Pourquoi\u00a0?</p> <ol> <li> <p>Ajouter un widget LineEdit.</p> <p></p> </li> <li> <p>Cr\u00e9er un slot <code>changeWindowTitle()</code> dans la classe <code>MainWindow</code>.</p> </li> <li> <p>R\u00e9cup\u00e9rer la valeur du widget <code>QLineEdit</code> et la passer \u00e0 la m\u00e9thode <code>setWindowTitle()</code> de la classe <code>MainWindow</code>.</p> </li> <li> <p>Avec le designer, r\u00e9aliser la connexion n\u00e9cessaire pour r\u00e9pondre au besoin. </p> </li> </ol> <p>Si le slot cr\u00e9\u00e9 n\u2019appara\u00eet pas dans la liste, il faut l\u2019ajouter en utilisant le bouton Editer\u2026 de la fen\u00eatre Configurer connexion.</p> <p></p>"},{"location":"bts-2/90-qt-3/#repartir-du-bon-pied","title":"Repartir du bon pied","text":"<p>Projet avec les 4 premiers exercices : \ud83d\udcc2TP_QT_BTS2 0.4</p>"},{"location":"bts-2/90-qt-3/#exercice-5","title":"Exercice 5","text":"<p>Objectifs</p> <ul> <li>Passer des valeurs d\u2019un widget \u00e0 un autre</li> <li>Cr\u00e9er et \u00e9mettre un signal</li> </ul> <p>On souhaite r\u00e9aliser une calculatrice \"simple\"\u00a0:</p> <p></p> <ul> <li> <p>Elle est compos\u00e9e de deux sliders qui pilotent l\u2019affichage de deux LCDNumber.</p> </li> <li> <p>Le + central est affich\u00e9 \u00e0 l\u2019aide d\u2019un label.</p> </li> <li> <p>L\u2019affichage sombre des LCDNumber est r\u00e9alis\u00e9 en passant la propri\u00e9t\u00e9 segmentStyle \u00e0 Flat.</p> </li> </ul> <p>R\u00e9aliser cette premi\u00e8re partie de l\u2019exercice avec le designer.</p> <p></p> <p>Au clic sur le bouton =, la somme des deux valeurs de sliders doit s\u2019afficher dans un troisi\u00e8me LCDNumber. Toutefois, le signal clicked() de la classe QPushButton n\u2019a pas de param\u00e8tre de type entier et\u00a0 permet encore moins d\u2019envoyer deux valeurs qui ne lui appartiennent pas.</p> <p></p> <p>Le clic sur le <code>QPushButton</code> va devoir d\u00e9clencher un slot (\u00e0 cr\u00e9er) dans la classe <code>MainWindow</code> qui va lui-m\u00eame \u00e9mettre un signal au bon format (\u00e0 cr\u00e9er) qui sera connecter au slot <code>display(int)</code> du troisi\u00e8me <code>QLCDNumber</code>.</p> <p>R\u00e9aliser cette seconde partie pour terminer la \u00ab\u00a0calculatrice\u00a0\u00bb.</p>"},{"location":"bts-2/90-qt-3/#exercice-6","title":"Exercice 6","text":"<p>Objectifs</p> <ul> <li>Utiliser les slots de manipulation de texte.</li> <li>Personnaliser un widget avec une image</li> </ul> <ol> <li> <p>Ajouter sur la fen\u00eatre un widget Textedit et deux boutons Copier et Coller pour copier ou coller du texte dans notre boite de texte.</p> <p>Les icones sont modifiables dans la fen\u00eatre des propri\u00e9t\u00e9s via l\u2019attribut \u00ab\u00a0Marche normale\u00a0\u00bb de l\u2019attribut icon des <code>QAbstractButton</code>. On peut trouver de nombreuses icones libres de droits sur Internet, par exemple sur le site iconmonstr.com.</p> </li> <li> <p>Ajouter une ic\u00f4ne aux deux boutons en important au pr\u00e9alable deux icones dans le fichier resources.qrc.</p> <p></p> </li> <li> <p>Utiliser l'association des signaux et slots ( F4 ) pour finir l\u2019exercice.</p> </li> </ol>"},{"location":"bts-2/90-qt-3/#exercice-7","title":"Exercice 7","text":"<p>Objectifs</p> <p>Comprendre le fonctionnement des progressBar.</p> <ol> <li> <p>Ajouter un widget Progress bar et un bouton Lancer.</p> <p></p> <p>Il va falloir dans le slot du bouton faire une boucle allant de 0 \u00e0 100 et qui sera temporis\u00e9e \u00e0 chaque tour pendant 100ms. Pour temporiser le programme, on utilisera la m\u00e9thode <code>msleep(int)</code> de la classe <code>QThread</code> qui suspend le thread.</p> </li> <li> <p>Lancer la progression de la barre en prenant comme unit\u00e9 le centi\u00e8me de seconde.</p> </li> </ol> Aller plus loin <p>Temporiser avec <code>QThread::msleep()</code> met en sommeil le thread de l'application et bloque l'utilisation de l'IHM \ud83d\ude25</p> <p>Etudier l'utilisation de la classe <code>QTimer</code> et l'impl\u00e9menter pour ne pas paralyser l'application.</p>"},{"location":"bts-2/90-qt-3/#repartir-du-bon-pied_1","title":"Repartir du bon pied","text":"<p>Projet avec les 7 premiers exercices : \ud83d\udcc2TP_QT_BTS2 0.7</p>"},{"location":"bts-2/90-qt-3/#exercice-8","title":"Exercice 8","text":"<p>Objectifs</p> <p>Ajouter une action dans le menu.</p> <ol> <li> <p>Ajouter un menu sur la fen\u00eatre. Ce menu pour l'instant n'a que l'option Quitter qui fermera notre application.</p> <p></p> </li> <li> <p>Connecter le signal <code>triggered()</code> sur l'action Quitter du menu au slot <code>close()</code> de l'application.</p> </li> </ol>"},{"location":"bts-2/90-qt-3/#exercice-9","title":"Exercice 9","text":"<p>Objectifs</p> <ul> <li> <p>Surd\u00e9finir une fonction d\u2019une classe ascendante</p> </li> <li> <p>Impl\u00e9menter une classe du framework en s\u2019aidant de la documentation</p> </li> </ul> <p>L\u2019application peut \u00e0 pr\u00e9sent \u00eatre ferm\u00e9e depuis le menu, depuis la croix en haut \u00e0 droite et depuis le bouton cr\u00e9er dans l\u2019exercice 1. On souhaite pr\u00e9venir toute fermeture accidentelle par l\u2019ajout d\u2019une confirmation avant fermeture. L\u2019impl\u00e9menter dans chacun des trois m\u00e9canismes mis en place ne serait pas tr\u00e8s pertinent.</p> <p>Qt a pr\u00e9vu ce genre de besoin en cr\u00e9ant une m\u00e9thode <code>closeEvent()</code> dans la classe <code>QWidget</code>. Cette derni\u00e8re centralise les appels \u00e0 la fermeture de fen\u00eatre. Pour ajouter le comportement attendu, il faut surd\u00e9finir cette fonction dans notre <code>MainWindow</code>.</p> <ol> <li> <p>Surd\u00e9finir la m\u00e9thode <code>QWidget::closeEvent()</code> dans la <code>MainWindow</code>.</p> <p>Le param\u00e8tre <code>event</code> de la m\u00e9thode permet d\u2019agir sur la fermeture en l\u2019acceptant ou l\u2019ignorant \u00e0 l\u2019aide des m\u00e9thodes <code>accept()</code> et <code>ignore()</code>. De base, l\u2019impl\u00e9mentation de <code>QWidget::closeEvent()</code> accepte toujours l\u2019\u00e9v\u00e9nement.</p> <p>Pour savoir si on accepte ou non la fermeture de la fen\u00eatre, on va utiliser une <code>QMessageBox</code> dont la documentation officielle donne des exemples d\u2019impl\u00e9mentation tr\u00e8s complet.</p> <p></p> </li> <li> <p>R\u00e9aliser la fonctionnalit\u00e9 \u00e0 l\u2019aide des \u00e9l\u00e9ments ci-dessous et de la documentation de Qt.</p> </li> </ol>"},{"location":"bts-2/90-qt-3/#exercice-10","title":"Exercice 10","text":"<p>Objectifs</p> <ul> <li> <p>Ajouter une fen\u00eatre \u00e0 l\u2019application</p> </li> <li> <p>Manipuler des \u00e9l\u00e9ments graphiques</p> </li> </ul> <p>Dans ce dernier exercice, on souhaite ajouter un nouveau menu qui permettra d\u2019ouvrir une fen\u00eatre dans laquelle on pourra manipuler une forme graphique (rectangle ou cercle).</p> <p></p> <ol> <li> <p>Ajouter au projet une nouvelle classe d\u2019interface graphique Qt Designer (Dialog)</p> <p></p> </li> <li> <p>En fonction de la version de Qt, le g\u00e9n\u00e9rateur peut proposer de choisir un type de fen\u00eatre\u00a0: choisir une fen\u00eatre sans bouton et valider les \u00e9tapes suivantes.</p> </li> <li> <p>Ajouter un bouton \u00ab\u00a0Annuler\u00a0\u00bb sur la nouvelle fen\u00eatre et faire en sorte qu\u2019il ferme la fen\u00eatre quand on clique dessus.</p> <p>Deux slots permettent de fermer une fen\u00eatre de type <code>QDialog</code>\u00a0: <code>accept()</code> et <code>reject()</code>.</p> </li> <li> <p>Ajouter une action Figures dans le menu Menu de la <code>MainWindow</code>.</p> </li> <li> <p>Cr\u00e9er un slot <code>showDialog()</code> dans la <code>MainWindow</code> et le d\u00e9clencher quand on clique sur le menu Figures.</p> </li> <li> <p>Pour ouvrir la nouvelle fen\u00eatre, il faut cr\u00e9er un objet de la classe de Dialog et lancer sa m\u00e9thode exec(). </p> <p>Ouvrir la nouvelle fen\u00eatre au clic sur le menu Figures.</p> </li> <li> <p>On souhaite afficher un rectangle dans un widget <code>QGraphicsView</code> et piloter sa largeur et sa hauteur via deux sliders dispos\u00e9s respectivement en dessous et sur la droite de ce widget.</p> <p>Ajouter les trois widgets avec le designer.</p> </li> <li> <p>Pour afficher le rectangle, il faut ajouter un objet <code>QGraphicsScene</code> dans le widget GraphicsView et y dessiner un rectangle avec la m\u00e9thode <code>addRect()</code>.</p> <p>Exemple de code\u00a0:</p> <pre><code>// Cr\u00e9ation de la sc\u00e8ne\n\nQGraphicsScene * scene = new QGraphicsScene(ui-&gt;graphicsView);\n\nscene.setSceneRect(0, 0, 256, 192);\n\nui-&gt;graphicsView-&gt;setScene(scene);\n\n// Cr\u00e9ation du rectangle\n\nQGraphicsRectItem * rectangle = scene-&gt;addRect(10, 10, 80, 50);\n</code></pre> <p>Afficher un rectangle dans le widget GraphicsView.</p> </li> <li> <p>Pour modifier les dimensions du rectangle, il faut red\u00e9finir ses dimensions \u00e0 l\u2019aide de la m\u00e9thode <code>setRect()</code>.</p> <p>Piloter les dimensions du rectangle avec les sliders.</p> </li> <li> <p>Ajouter un widget ComboBox qui permet de permuter l\u2019affichage entre un rectangle et une ellipse.</p> </li> </ol>"},{"location":"bts-2/90-qt-3/#resultat-final","title":"R\u00e9sultat final \ud83c\udf89","text":"<p>Projet avec les 10 exercices : \ud83d\udcc2TP_QT_BTS2 1.0</p> <p></p>"},{"location":"bts-2/90-qt-4/","title":"Projet Pok\u00e9dex 2.0","text":""},{"location":"bts-2/90-qt-4/#le-besoin","title":"Le besoin","text":"<p>Ce projet a pour objectif de r\u00e9aliser un Pok\u00e9dex en utilisant le framework Qt. </p> <p>Le projet \u00e0 r\u00e9aliser doit prendre l'apparence suivante :</p> <p></p> <p>Un Pok\u00e9dex est un appareil qui accompagne tout bon dresseur de Pok\u00e9mon(1) et qui liste les Pok\u00e9mon et leurs informations.</p> <ol> <li> Pok\u00e9mon est invariable et s'\u00e9crit avec un accent m\u00eame en anglais.</li> </ol> <p>Notre application \u00e9mulera cet appareil et s\u2019appuiera sur les webservices du site internet pokeapi.co pour r\u00e9cup\u00e9rer informations sur les Pok\u00e9mon et leurs images.</p>"},{"location":"bts-2/90-qt-4/#avancement-du-projet","title":"Avancement du projet","text":"<ul> <li> <p> Recueillir le besoin (oral/questions-r\u00e9ponses/prise de notes)</p> </li> <li> <p> Analyse</p> <ul> <li> <p> Travaux pr\u00e9paratoires (\u00e9tude de faisabilit\u00e9, essais)</p> <ul> <li> <p> Envoyer une requ\u00eate HTTP GET et g\u00e9rer la r\u00e9ponse avec Qt</p> </li> <li> <p> Manipuler des informations au format JSON</p> </li> </ul> </li> </ul> </li> <li> <p> Conception</p> <ul> <li> <p> D\u00e9finir les acteurs et les fonctionnalit\u00e9s du syst\u00e8me</p> <ul> <li> <p> Sch\u00e9matiser \u00e0 l'aide d'un diagramme de cas d'utilisations</p> </li> <li> <p> D\u00e9crire les cas d'utilisation</p> </li> </ul> </li> <li> <p> Prendre en compte les contraintes techniques</p> <ul> <li> <p> Description du m\u00e9canisme de cache (pokeapi + images)</p> </li> <li> <p> Sch\u00e9matisation de l'impact dans les diagrammes de s\u00e9quences</p> </li> </ul> </li> <li> <p> D\u00e9crire l'IHM</p> <ul> <li> Cr\u00e9er une maquette de l'IHM</li> </ul> </li> <li> <p> D\u00e9finir l'architecture de l'application</p> <ul> <li> <p> Sch\u00e9matisation du diagramme de classes</p> </li> <li> <p> Pr\u00e9cisions sur les m\u00e9thodes</p> </li> <li> <p> Sch\u00e9matisation du diagramme de s\u00e9quence \"au plus proche\" </p> </li> </ul> </li> <li> <p> R\u00e9daction des sp\u00e9cifications</p> </li> <li> <p> R\u00e9daction du cahier de recette</p> </li> <li> <p> R\u00e9partition des r\u00f4les/Planification</p> </li> <li> <p> Pr\u00e9sentation de la solution</p> </li> </ul> </li> <li> <p> D\u00e9veloppement</p> <ul> <li> <p> R\u00e9daction des tests unitaires</p> </li> <li> <p> Codage</p> <ul> <li> Passage des tests unitaires</li> </ul> </li> <li> <p> Int\u00e9gration</p> </li> </ul> </li> <li> <p> Recette</p> <ul> <li> <p> Passage des tests de recette</p> </li> <li> <p> Correction</p> </li> </ul> </li> <li> <p> Livraison</p> </li> </ul>"},{"location":"bts-2/90-qt-4/#fichiers-du-projet","title":"Fichiers du projet","text":"<ul> <li> <p> Maquette initiale</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Maquette vide</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Icone</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Chaines d'\u00e9volutions</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Diagramme de s\u00e9quence macro</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Options de cache</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Choix cache et webservices</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Diagramme de classes</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> <li> <p> Cahier de tests</p> <p></p> <p> T\u00e9l\u00e9charger</p> </li> </ul>"},{"location":"bts-2/90-qt-4/#analyse","title":"Analyse","text":""},{"location":"bts-2/90-qt-4/#travaux-preparatoires","title":"Travaux pr\u00e9paratoires","text":"<p>Pok\u00e9API propose des webservices REST permettant de r\u00e9cup\u00e9rer des informations sur les Pok\u00e9mon.</p> <p>Pour les utiliser, nous devons ma\u00eetriser deux techniques avec Qt :</p> <ul> <li> <p> Envoyer une requ\u00eate HTTP GET et g\u00e9rer la r\u00e9ponse</p> </li> <li> <p> Manipuler des informations au format JSON</p> </li> </ul>"},{"location":"bts-2/90-qt-4/#envoyer-une-requete-http-get-et-gerer-la-reponse","title":"Envoyer une requ\u00eate HTTP GET et g\u00e9rer la r\u00e9ponse","text":"<ol> <li> <p>Ajouter le module Network au projet Qt en ajoutant la ligne suivante au d\u00e9but du fichier <code>.pro</code>\u00a0:</p> <pre><code>QT += network\n</code></pre> </li> <li> <p>Pour g\u00e9rer les requ\u00eates HTTP, on utilisera un objet unique <code>QNetworkAccessManager</code> ajout\u00e9 en attribut de la fen\u00eatre.</p> <p>Cet objet contient une m\u00e9thode <code>QNetworkReply * get(QNetworkRequest(QUrl(\"url \u00e0 requ\u00eater\")))</code> qui permet d\u2019envoyer une requ\u00eate HTTP de type GET.</p> <p>On sauvera l'adresse de l'objet <code>QNetworkReply</code> renvoy\u00e9e par la m\u00e9thode dans un attribut <code>QNetworkReply *</code> de la fen\u00eatre.</p> <p>Ajouter les attributs suivants \u00e0 la classe <code>MainWindow</code> :</p> <pre><code>QNetworkAccessManager * qnam;\nQNetworkReply * qnr;\n</code></pre> <p>Dans le constructeur de la <code>MainWindow</code>, affecter un nouvel objet <code>QNetworkAccessManager</code> \u00e0 <code>qnam</code> et <code>nullptr</code> \u00e0 <code>qnr</code> (l'objet <code>qnr</code> sera renouvel\u00e9 \u00e0 chaque nouvelle requ\u00eate).</p> <p>D\u00e9truire <code>qnam</code> et <code>qnr</code> lorsque le programme s'arr\u00eate.</p> </li> <li> <p>Ajouter un bouton dans la fen\u00eatre qui permettra de d\u00e9clencher l'envoi de la requ\u00eate.</p> </li> <li> <p>Connecter le clic du bouton \u00e0 un nouveau slot <code>launchHTTPRequest</code>.</p> <p>Dans la d\u00e9finition du slot <code>launchHTTPRequest</code> appeler la m\u00e9thode <code>get()</code> de <code>qnam</code> sur l'url <code>https://pokeapi.co/api/v2/pokemon/25</code> et stocker le r\u00e9sultat dans <code>qnr</code>.</p> </li> <li> <p>La requ\u00eate HTTP est lanc\u00e9e de mani\u00e8re asynchrone(1). </p> <ol> <li> La requ\u00eate est lanc\u00e9e en arri\u00e8re-plan, dans un autre thread, elle ne bloque pas l'ex\u00e9cution du thread courant et donc l'application.</li> </ol> <p>Quand la r\u00e9ponse du serveur (quelle qu'elle soit) est compl\u00e9tement re\u00e7ue, l'objet <code>QNetworkReply</code> \u00e9met un signal <code>finished()</code>.</p> <p>Connecter un nouveau slot <code>manageHTTPAnswer</code> \u00e0 ce signal juste apr\u00e8s l'appel de la m\u00e9thode <code>get()</code> de <code>qnam</code>.</p> <p>En effet, un nouvel objet <code>QNetworkReply</code> est cr\u00e9\u00e9 \u00e0 chaque appel de <code>get</code>, <code>qnr</code> change donc d'adresse et il faut donc cr\u00e9er une nouvelle connexion.</p> </li> <li> <p>Dans la d\u00e9finition du slot <code>manageHTTPAnswer</code>, afficher dans la console le contenu du corps de la r\u00e9ponse en appelant la m\u00e9thode <code>readAll()</code> de <code>qnr</code>.</p> </li> <li> <p>Tester.</p> <p>Si tout se passe bien, la console doit \u00eatre remplie </p> <pre><code>{\"abilities\":[{\"ability\":{\"name\":\"static\",\"url\":\"https://pokeapi.co/api/v2/ability/9/\"},\"is_hidden\":false,\"slot\":1},{\"ability\":{\"name\":\"lightning-rod\",\"url\":\"https://pokeapi.co/api/v2/ability/31/\"},\"is_hidden\":true,\"slot\":3}],\"base_experience\":112,\"cries\":{\"latest\":\"https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/25.ogg\",\"legacy\":\"https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/legacy/25.ogg\"},...\n</code></pre> </li> </ol> <p>Am\u00e9liorer le script :</p> <ul> <li> <p> D\u00e9connecter l'objet point\u00e9 par <code>qnr</code> de <code>manageHTTPAnswer</code> et le supprimer avant l'appel de la m\u00e9thode <code>get()</code>.</p> </li> <li> <p> G\u00e9rer les erreurs HTTP en connectant le signal QNetworkReply::errorOccurred \u00e0 un nouveau slot <code>manageHTTPErrors</code>.</p> </li> </ul>"},{"location":"bts-2/90-qt-4/#manipuler-des-informations-au-format-json","title":"Manipuler des informations au format JSON","text":"<ol> <li> <p>Ajouter un bouton dans la fen\u00eatre qui permettra de d\u00e9clencher la lecture du JSON.</p> </li> <li> <p>Connecter le clic du bouton \u00e0 un nouveau slot <code>readJSON</code>.</p> <p>Dans la d\u00e9finition du slot <code>readJSON</code>, nous allons cr\u00e9er un objet <code>QJsonObject</code> \u00e0 partir du contenu JSON suivant :</p> <pre><code>{\n    \"FirstName\": \"John\",\n    \"LastName\": \"Doe\",\n    \"Age\": 43,\n    \"Address\": {\n        \"Street\": \"Downing Street 10\",\n        \"City\": \"London\",\n        \"Country\": \"Great Britain\"\n    },\n    \"Phone numbers\": [\n        \"+44 1234567\",\n        \"+44 2345678\"\n    ]\n}\n</code></pre> <p>Le code permettant de r\u00e9aliser cela est le suivant :</p> <pre><code>QByteArray data(\"Donn\u00e9es au format JSON\");\nQJsonDocument doc = QJsonDocument::fromJson(data);\nQJsonObject json = doc.object();\n</code></pre> <p>Utiliser Notepad++ pour : </p> <ul> <li> <p>mettre les donn\u00e9es JSON sur une ligne, </p> </li> <li> <p>supprimer les doubles espaces,</p> </li> <li> <p>\u00e9chapper les guillemets doubles.</p> </li> </ul> <p>Int\u00e9grer le r\u00e9sultat au code ci-dessus dans le slot <code>readJSON</code>.</p> </li> <li> <p>Pour acc\u00e9der \u00e0 une valeur, la m\u00e9thode la plus s\u00fbre est de r\u00e9aliser la petite gymnastique suivante :</p> <ol> <li> <p>v\u00e9rifier que le champ/attribut existe,</p> </li> <li> <p>v\u00e9rifier qu'il est bien du type attendu (int, string, array, object...),</p> </li> <li> <p>r\u00e9cup\u00e9rer sa valeur.</p> </li> </ol> <p>Et r\u00e9p\u00e9ter cela pour chaque niveau \"hi\u00e9rarchique\"... \ud83d\ude25</p> <p>Afficher le pr\u00e9nom \u00e0 l'aide du code suivant :</p> <pre><code>if (json.contains(\"FirstName\") &amp;&amp; json[\"FirstName\"].isString()) {\n    qDebug() &lt;&lt; json[\"FirstName\"].toString();\n}\n</code></pre> </li> <li> <p>Tester.</p> </li> <li> <p>Afficher dans la console \"John Doe (43), London\" \u00e0 l'aide des informations extraites des donn\u00e9es JSON.</p> </li> </ol> <p>Am\u00e9liorer le script :</p> <ul> <li> Cr\u00e9er une classe d\u00e9riv\u00e9e de QJsonObject et surd\u00e9finir la m\u00e9thode <code>value()</code> pour qu'elle l\u00e8ve une exception en cas d'erreur (et s'\u00e9viter la petite gymnastique \ud83d\ude05).</li> </ul>"},{"location":"bts-2/90-qt-4/#combiner-les-deux-techniques","title":"Combiner les deux techniques","text":"<p>En combinant les deux techniques, cr\u00e9er une mini-application qui nous affiche le nom en fran\u00e7ais d'un Pok\u00e9mon dont on lui soumet le num\u00e9ro.</p> <p></p> <p>Solution : pokedex_2024.zip</p>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/","title":"01 - Planche de Galton","text":"<p>Un joueur l\u00e2che une bille sur une planche inclin\u00e9e sur laquelle sont plant\u00e9s des clous comme sur la figure ci\u2011contre.</p> <p>\u00c0 chaque clou rencontr\u00e9, la bille passe indiff\u00e9remment \u00e0 droite ou \u00e0 gauche de fa\u00e7on \u00e9quiprobable. </p> <p>En fin de parcours, elle tombe dans une case. </p> <p></p> <p>Dans ce TP, on consid\u00e8re une planche de Galton \u00e0 douze rang\u00e9es de clous. </p> <p>Il y a donc 13 cases num\u00e9rot\u00e9es de 0 (case \u00e0 gauche) \u00e0 12 (case \u00e0 droite).</p> <p>On suppose qu'\u00e0 chaque clou, la probabilit\u00e9 d'aller \u00e0 droite est \u00e9gale \u00e0 0,5.</p> Qui est Galton ? <p></p> <p>Sir Francis Galton (1822 - 1911) est un anthropologue, explorateur, g\u00e9ographe, inventeur, m\u00e9t\u00e9orologue, \u00e9crivain, proto-g\u00e9n\u00e9ticien, psychom\u00e9tricien et statisticien britannique.</p>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#objectifs","title":"Objectifs","text":"<p>Simuler la chute de 1 000 billes le long de cette planche et v\u00e9rifier que la simulation est bien coh\u00e9rente avec la th\u00e9orie.</p>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#questions-preliminaires","title":"Questions pr\u00e9liminaires","text":"<p>1) En r\u00e9alisant un sch\u00e9ma et en partant du principe que \u00e0 chaque niveau quand la bille tombe \u00e0 gauche son trajet vaut 0 et que quand elle part \u00e0 droite son trajet vaut 1, trouver le lien entre le parcours de la bille et le num\u00e9ro de la case dans laquelle elle va tomber. </p> <p>2) Estimer la probabilit\u00e9 que la bille tombe :</p> <ul> <li> <p>Dans la case de gauche</p> </li> <li> <p>Dans la case n\u00b01</p> </li> </ul>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#simulation-dans-excel-365","title":"Simulation dans Excel 365","text":"<p>1) Reproduire \u00e0 l'aide d'Excel 365 la feuille de calcul ci-dessous.</p> <p></p> <p>2) On commence par la bille n\u00b01. Remplir les colonnes <code>B5</code> \u00e0 <code>M5</code> al\u00e9atoirement de <code>0</code> et de <code>1</code>.</p> Indice <p>Utiliser les fonctions Excel <code>SI</code> et <code>ALEA</code></p> <p>3) A partir du r\u00e9sultat de votre r\u00e9flexion pr\u00e9l\u00e9minaire, compl\u00e9ter la case <code>N5</code> avec une formule qui calcule la case d'arriv\u00e9e de la bille.</p> Comment emp\u00eacher Excel de recalculer sans cesse les formules ? <p></p> <p>4) A l'aide de la poign\u00e9e de recopie, simuler la chute de 1000 billes.</p> <p>5) Utiliser la ligne 2 pour compter le nombre de billes dans chacune des cases d'arriv\u00e9e.</p> Indice <p>Utiliser les fonctions Excel <code>NB.SI</code></p> <p>6) Cr\u00e9er le graphique ci-dessous \u00e0 l'aide des donn\u00e9es des lignes 1 et 2.</p> <p></p>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#simuler-a-laide-dun-programme-en-c","title":"Simuler \u00e0 l'aide d'un programme en C++","text":"<p>Le programme \u00e0 d\u00e9velopper devra simuler le l\u00e2cher des billes sur la planche de Galton. </p> <p>Le nombre de lignes de la planche de Galton et le nombre de billes \u00e0 l\u00e2cher doivent \u00eatre renseign\u00e9s sur la ligne de commande.</p> <pre><code>&gt; ./galton.exe [nombre de lignes] [nombre de billes]\n</code></pre> <p>Apr\u00e8s avoir simul\u00e9 le l\u00e2cher des billes, le programme affichera le nombre de billes par cases (<code>bins</code>) ainsi que leur indice.</p> <p>Affichage attendu :</p> <pre><code>&gt; ./galton.exe 12 1000 \n[    0 ][    2 ][   18 ][   40 ][  117 ][  191 ][  246 ][  203 ][  112 ][   55 ][   14 ][    1 ][    1 ]\n    0       1       2       3       4       5       6       7       8       9      10      11      12\n\n&gt; ./galton.exe 5 500  \n[  16 ][  76 ][ 167 ][ 150 ][  73 ][  18 ]\n   0      1      2      3      4      5\n</code></pre> <p>D\u00e9velopper le programme en respectant les \u00e9l\u00e9ments de conception suivants.</p>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#diagramme-de-classes","title":"Diagramme de classes","text":"<p>Le diagramme de classes du programme est le suivant :</p> <pre><code>classDiagram\n    class GaltonBoard {\n        - rowsCount : int\n        - bins : int [ ]\n        + GaltonBoard(_rowscount : int)\n        + ~GaltonBoard()\n        - emptyBins()\n        + dropMarbles(int marblesCount)\n        + displayBins()\n    }\n    class Marble {\n        - bin : int\n        - direction() bool\n        + drop(rowsCount : int)\n        + getBin() int\n    }\n    GaltonBoard -- Marble</code></pre> <p><code>GaltonBoard</code> est la classe permettant de simuler le l\u00e2cher de toutes les billes.</p> <p>Le r\u00f4le des m\u00e9thodes est le suivant :</p> <ul> <li> <p><code>GaltonBoard::GaltonBoard(_rowsCount : int)</code> est le constructeur de <code>GaltonBoard</code>, il valorise <code>rowsCount</code> et cr\u00e9e le tableau <code>bins</code> dans le tas.</p> </li> <li> <p><code>GaltonBoard::~GaltonBoard()</code> est le destructeur de <code>GaltonBoard</code>, il d\u00e9salloue <code>bins</code>.</p> </li> <li> <p><code>GaltonBoard::emptyBins()</code> remet \u00e0 z\u00e9ro le tableau <code>bins</code>.</p> </li> <li> <p><code>GaltonBoard::dropMarbles(marblesCount : int)</code> lance <code>marblesCount</code> billes et stocke incr\u00e9mente le nombre de billes dans la case correspondante du tableau <code>bins</code>. </p> </li> <li> <p><code>GaltonBoard::displayBins()</code> affiche le contenu du tableau <code>bins</code>. </p> </li> </ul> <p><code>Marble</code> est la classe permettant de simuler le l\u00e2cher d'une bille.</p> <ul> <li> <p><code>Marble::direction()</code> d\u00e9finit si la bille est all\u00e9e \u00e0 gauche (<code>0</code>) ou \u00e0 droite (<code>1</code>).</p> </li> <li> <p><code>Marble::drop(rowsCount : int)</code> simule le l\u00e2cher d'une bille pour <code>rowsCount</code> lignes et sauvegarde le num\u00e9ro de la case d'arriv\u00e9e dans <code>bin</code>.</p> </li> <li> <p><code>Marble::getBin() : int</code> accesseur de <code>bin</code>.</p> </li> </ul>"},{"location":"bts-2/Maths%20x%20STI/10-probabilites/#diagramme-de-sequence","title":"Diagramme de s\u00e9quence","text":"<p>Le diagramme de s\u00e9quence du programme est le suivant :</p> <pre><code>sequenceDiagram\n    autonumber\n    Programme-&gt;&gt;Programme: V\u00e9rifier les param\u00e8tres (rowsCount, marblesCount)\n    create participant GaltonBoard\n    Programme-&gt;&gt;GaltonBoard: new(rowsCount)\n    Programme-&gt;&gt;+GaltonBoard: dropMarbles(marblesCount)\n    create participant Marble\n    GaltonBoard-&gt;&gt;Marble: new()\n    loop marblesCount\n        GaltonBoard-&gt;&gt;+Marble: drop(rowsCount)\n        loop rowsCount\n            Marble-&gt;&gt;Marble: direction()\n        end\n        Marble-&gt;&gt;Marble: sauvegarder le num\u00e9ro de la case()\n        Marble-&gt;&gt;-GaltonBoard: fin\n        GaltonBoard-&gt;&gt;Marble: getBin()\n        GaltonBoard-&gt;&gt;GaltonBoard: Incr\u00e9menter la case()\n    end\n    destroy Marble\n    GaltonBoard-xMarble: \n    GaltonBoard-&gt;&gt;-Programme: fin\n    Programme-&gt;&gt;+GaltonBoard: displayBins()\n    GaltonBoard-&gt;&gt;-Programme: fin\n    destroy GaltonBoard\n    Programme-xGaltonBoard: </code></pre> Correction <pre><code>#include &lt;iostream&gt;\n#include &lt;ctime&gt;\n#include &lt;vector&gt;\n#include &lt;iomanip&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nclass Marble {\n    private :\n        int bin = 0;\n        bool direction() {\n            return rand() % 2;\n        };\n    public :\n        void drop(int rowsCount) {\n            bin = 0;\n            for (int i = 0; i &lt; rowsCount; i++) {\n                bin += direction();\n            }\n        };\n        int getBin() {\n            return bin;\n        }\n};\n\nclass GaltonBoard {\n    private : \n        int rowsCount;\n        int * bins;\n        void emptyBins() {\n            for (int i = 0; i &lt; rowsCount + 1; i++) {\n                bins[i] = 0;\n            }\n        }\n    public :\n        GaltonBoard(int _rowsCount) {\n            rowsCount = _rowsCount;\n            bins = new int[rowsCount + 1];\n        }\n        ~GaltonBoard() {\n            delete [] bins;\n        }\n        void dropMarbles(int marblesCount) {\n            emptyBins();\n            Marble m;\n            for (int i = 0; i &lt; marblesCount; i++) {\n                m.drop(rowsCount);\n                bins[m.getBin()] += 1;\n            }\n        }\n        void displayBins(int width) {\n            for (int i = 0; i &lt; rowsCount + 1; i++) {\n                cout &lt;&lt; \"[ \" &lt;&lt; setw(width) &lt;&lt; bins[i] &lt;&lt; \" ]\";\n            }\n            cout &lt;&lt; endl &lt;&lt; setw(width + 1) &lt;&lt; 0;\n            for (int i = 1; i &lt; rowsCount + 1; i++) {\n                cout &lt;&lt; setw(width + 4 + (width % 2 == 1  &amp;&amp; i == 10 ? 1 : 0)) &lt;&lt; i;\n            }\n        }\n};\n\nint main(int argc, char ** argv) {\n\n    srand(time(nullptr));\n\n    int rows = atoi(argv[1]);\n    int marbles = atoi(argv[2]);\n\n    GaltonBoard g(rows);\n    g.dropMarbles(marbles);\n    g.displayBins(strlen(argv[2]));\n\n    return 0;\n}\n</code></pre> Fin de s\u00e9quence <p>Visionner un r\u00e9sum\u00e9 </p>"},{"location":"bts-2/Maths%20x%20STI/20-excel-data-1/","title":"02 - Valorisation de la donn\u00e9e","text":""},{"location":"bts-2/Maths%20x%20STI/20-excel-data-1/#open-data","title":"Open data","text":"<p>L\u2019open data d\u00e9signe un mouvement, n\u00e9 en Grande-Bretagne et aux \u00c9tats-Unis, d\u2019ouverture et de mise \u00e0 disposition des donn\u00e9es produites et collect\u00e9es par les services publics (administrations, collectivit\u00e9s locales...). (CNIL)</p> <p>Quelques exemples en France :</p> <ul> <li> <p>Donn\u00e9es ouvertes de l'Etat</p> </li> <li> <p>Donn\u00e9es ouvertes du d\u00e9partement de la Mayenne</p> </li> <li> <p>Donn\u00e9es ouvertes de la SNCF</p> </li> </ul>"},{"location":"bts-2/Maths%20x%20STI/20-excel-data-1/#calculs-dindicateurs-avec-excel","title":"Calculs d'indicateurs avec Excel","text":"<p>Nous allons utiliser une source de donn\u00e9es Open Data pour calculer des indicateurs \u00e0 l'aide de Microsoft Excel (1).</p> <ol> <li>Transposables dans d'autres tableurs, bien s\u00fbr...</li> </ol> <p>Les premiers exercices utiliseront le fichier suivant : D\u00e9fibrillateurs en Mayenne.</p> <ol> <li> <p>Dans l'onglet Export, t\u00e9l\u00e9charger le jeu de donn\u00e9es Excel (1).</p> <ol> <li>Pour un d\u00e9veloppement ou si le client lourd d'Excel est disponible, privil\u00e9gier les sources en CSV (meilleure fiabilit\u00e9 par rapport \u00e0 l'encodage, au format des donn\u00e9es...).  </li> </ol> </li> <li> <p>Ouvrir le fichier \u00e0 l'aide d'Excel 365.</p> </li> <li> <p>Nommer l'onglet courant \"data\".</p> </li> <li> <p>S\u00e9lectionner l'ensemble des donn\u00e9es.</p> </li> <li> <p>Dans le ruban, sur l'onglet Accueil, cliquer sur le bouton Trier et filtrer et s\u00e9lectionner Filtrer</p> </li> <li> <p>Les ent\u00eates des colonnes proposent maintenant des options de filtres et de tris bien pratiques \ud83d\udc4d </p> </li> </ol>"},{"location":"bts-2/Maths%20x%20STI/20-excel-data-1/#en-utilisant-des-formules","title":"\ud83e\uddee En utilisant des formules","text":"<p>Fa\u00eetes valider chaque indicateur calcul\u00e9 par un professeur.</p> <p>Les icones  en bout de ligne donnent des indices, chercher un peu par vous m\u00eame avant de les consulter \ud83d\ude48</p> <ol> <li> <p>Cr\u00e9er un nouvel onglet \"Indicateurs\".</p> </li> <li> <p>Calculer les indicateurs suivants :</p> <ul> <li> <p>Nombre de D\u00e9fibrillateurs externes automatis\u00e9s (DAE) en tout dans le fichier(1)</p> <ol> <li>Utiliser la formule <code>NB()</code>.</li> </ol> </li> <li> <p>Nombre de DAE en ext\u00e9rieur(1)</p> <ol> <li>Utiliser la formule <code>NB.SI()</code>.</li> </ol> </li> <li> <p>Nombre de DAE \u00e0 Laval</p> </li> <li> <p>Nombre de DAE \u00e0 Chateau-Gontier(1)</p> <ol> <li> <p>\u26a0\ufe0f Chateau-Gontier est \u00e9crit de plusieurs fa\u00e7ons. </p> <p>Utiliser la formule <code>NB.SI.ENS()</code>.</p> </li> </ol> </li> <li> <p>Nombre de DAE en ext\u00e9rieur \u00e0 Laval</p> </li> </ul> </li> <li> <p>Les indicateurs suivants vous demanderont d'enrichir les donn\u00e9es de nouvelles colonnes. </p> <p>\u26a0\ufe0f Veillez \u00e0 ne pas d\u00e9t\u00e9riorer votre jeu de donn\u00e9es.</p> <ul> <li> <p>Nombre de DAE disponibles le mardi(1)</p> <ol> <li>Utiliser les formules <code>FRACTIONNER.TEXTE()</code>.</li> </ol> </li> <li> <p>Est-ce qu'il y a un DAE rue Crossardi\u00e8re ?(1)</p> <ol> <li>Utiliser les formules <code>RECHERCHEV()</code>, <code>ESTNA()</code> et <code>SI()</code>.</li> </ol> </li> <li> <p>Est-ce qu'il y a un DAE rue de la Lib\u00e9ration \u00e0 Grez-en-Bou\u00e8re ?</p> </li> <li> <p>Est-ce qu'il y a un DAE rue de Nantes \u00e0 Coss\u00e9-le-Vivien ?</p> </li> </ul> </li> <li> <p>Cr\u00e9er un nouvel onglet \"Localisation\".</p> <p>Quel est le DAE le plus proche des coordonn\u00e9es ci-apr\u00e8s ?</p> <ul> <li> <p>48.07430141009146, -0.7680929238111576</p> <ul> <li> <p>le 21/11/2024 \u00e0 11:00</p> </li> <li> <p>le 24/11/2024 \u00e0 13:00</p> </li> </ul> </li> <li> <p>Le plus proche de chez vous si vous habitez en Mayenne, sinon de la chambre d'h\u00f4tes Fleurs des Champs \u00e0 Saint-Germain-le-Fouilloux.</p> </li> </ul> Calculer la distance entre deux points du globe \ud83c\udf0d \u00e0 partir de leurs coordonn\u00e9es GPS \ud83d\udef0\ufe0f <p>La distance d entre deux points A et B sera calcul\u00e9e en utilisant la formule suivante :</p> \\[\\begin{split} &amp;x=(longitudeB-longitudeA)\\times\\cos(\\frac{latitudeA+latitudeB}{2}) \\\\ &amp;y=latitudeB-latitudeA \\\\ &amp;d=\\sqrt{x^2+y^2}\\times6371 \\end{split}\\] <p>Notes : </p> <ul> <li> <p>Dans cette formule, les latitudes et longitudes sont exprim\u00e9es en radians. </p> </li> <li> <p>6371 correspond au rayon de la terre en km.</p> </li> </ul> </li> </ol>"},{"location":"bts-2/Maths%20x%20STI/20-excel-data-1/#en-utilisant-un-tableau-croise-dynamique","title":"\ud83d\udcc8 En utilisant un tableau crois\u00e9 dynamique","text":"<p>Excel propose une fonctionalit\u00e9 permettant de croiser les donn\u00e9es d'un tableau : le tableau crois\u00e9 dynamique.</p> <p>En utilisant les tableaux crois\u00e9s dynamiques et le bon jeu de donn\u00e9es de l'INSEE, trouver la probabilit\u00e9 qu'une personne, n\u00e9e la m\u00eame ann\u00e9e que vous, porte le m\u00eame pr\u00e9nom que vous.</p> <p>De m\u00eame, conseiller de jeunes parents qui souhaitent s'installer en Mayenne sur le canton o\u00f9 ils auront le plus de chance d'avoir une place chez un\u2e31e assistant\u2e31e maternel\u2e31le.</p>"},{"location":"commun/10_gammes/","title":"Les gammes","text":"<p>Voici quelques mini-exercices pour s'entra\u00eener aux basiques de la programmation.</p>"},{"location":"commun/10_gammes/#variables","title":"Variables","text":"D\u00e9clarer et afficher une variable permettant de stocker le r\u00e9sultat de <code>42 * 42</code> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    short milleSeptCentSoixanteQuatre = 42 * 42;\n\n    printf(\"%hd\", milleSeptCentSoixanteQuatre);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le r\u00e9sultat de <code>42 * 10000.0</code> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    float quarante_deux_milliemes = 42 / 10000.0;\n\n    printf(\"%.f\", quarante_deux_milliemes);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le r\u00e9sultat de <code>42 / 10000000.0</code> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    float quarante_deux_dix_millioniemes = 42 / 10000000.0;\n\n    printf(\"%.7f\", quarante_deux_dix_millioniemes);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le PIB de la Roumanie . <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    long long pib_roumanie = 286509000000;\n\n    printf(\"%lld\", pib_roumanie);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le PIB des \u00eeles Tuvalu . <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int pib_tuvalu = 47270000;\n\n    printf(\"%d\", pib_tuvalu);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le r\u00e9sultat de <code>sqrt(pow(42, 2) + pow(15, 3))</code>. <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\nint main() {\n\n    float hypotenuse = sqrt(pow(42, 2) + pow(15, 3));\n\n    printf(\"%f\", hypotenuse);\n\n    return 0;\n}\n</code></pre> D\u00e9clarer et afficher une variable permettant de stocker le r\u00e9sultat de <code>toupper('a')</code>. <pre><code>#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n\nint main() {\n\n    char a = toupper('a');\n\n    printf(\"%c\", a);\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui demande la saisie d'un entier et l'affiche. <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int entier;\n\n    scanf(\"%d\", &amp;entier);\n\n    printf(\"%d\", entier);\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui demande la saisie d'un caract\u00e8re et affiche sa valeur num\u00e9rique dans la table ASCII en d\u00e9cimal et en h\u00e9xad\u00e9cimal. <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    char caractere;\n\n    scanf(\"%c\", &amp;caractere);\n\n    printf(\"%hhd, %x\", caractere, caractere);\n\n    return 0;\n}\n</code></pre>"},{"location":"commun/10_gammes/#conditions","title":"Conditions","text":"Ecrire un programme qui demande l'\u00e2ge de l'utilisateur puis indique s'il est majeur ou non. <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int age;\n\n    printf(\"Quel est votre age ?\\n\");\n\n    scanf(\"%d\", &amp;age);\n\n    if (age &gt;= 18) {\n        printf(\"Vous etes majeur.\");\n    }\n    else {\n        printf(\"Vous n'etes pas majeur.\");\n    }\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui demande un entier \u00e0 l'utilisateur puis lui indique s'il est pair, si c'est un multiple de 3 ou les deux. <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int entier;\n\n    printf(\"Saisir un entier : \");\n\n    scanf(\"%d\", &amp;entier);\n\n    if (entier % 2 == 0 &amp;&amp; entier % 3 == 0) {\n        printf(\"%d est pair et multiple de 3.\", entier);\n    }\n    else if (entier % 2 == 0) {\n        printf(\"%d est pair.\", entier);\n    }\n    else if (entier % 3 == 0) {\n        printf(\"%d est multiple de 3.\", entier);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"commun/10_gammes/#boucles","title":"Boucles","text":"Ecrire un programme qui affiche les nombres de 1 \u00e0 100 inclus (avec un for et un while). <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 1; i &lt;= 100; i++) {\n        printf(\"%d \", i);\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int i = 1;\n    while (i &lt;= 100) {\n        printf(\"%d \", i);\n        i++;\n    }\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui affiche les nombres de 0 \u00e0 99 inclus (avec un for et un while). <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 0; i &lt;= 99; i++) {\n        printf(\"%d \", i);\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int i = 0;\n    while (i &lt;= 99) {\n        printf(\"%d \", i);\n        i++;\n    }\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui affiche les nombres impairs entre de 35 \u00e0 54 inclus (avec un for et un while). <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 35; i &lt;= 54; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int i = 35;\n    while (i &lt;= 54) {\n        printf(\"%d \", i);\n        i += 2;\n    }\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui affiche un d\u00e9compte de 59 \u00e0 0 (avec un for et un while). <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    for (int i = 59; i &gt;= 0; i--) {\n        printf(\"%d \", i);\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int i = 59;\n    while (i &gt;= 0) {\n        printf(\"%d \", i);\n        i--;\n    }\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui calcule le factoriel d'un nombre saisi par l'utilisateur (maximum 20!).Rappel : $ n! = n * n - 1 * ... * 2 * 1 $ et \\(0! = 1\\) <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int nombre;\n    long long factoriel = 1;\n\n    printf(\"Saisir un nombre : \");\n    scanf(\"%d\", &amp;nombre);\n\n    if (nombre &gt; 20) {\n        printf(\"Desole, je ne peux pas caluler plus que 20!\");\n        return -1;\n    }\n\n    for(int i = nombre; i &gt; 1; i--) {\n        factoriel *= i;\n    }\n\n    printf(\"%d! = %lld\", nombre, factoriel);\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui demande \u00e0 l'utilisateur de deviner un nombre choisi al\u00e9atoirement entre 1 et 10. Le nombre de tentatives est affich\u00e9 \u00e0 la fin. <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n\n    srand(time(NULL));\n\n    int entier = 0, entierATrouver = rand() % 10 + 1, tentatives = 0;        \n\n    printf(\"Devine un nombre entre 1 et 10 :\\n\");\n\n    while (entier != entierATrouver) {\n        tentatives++;\n        printf(\"Essai %d : \", tentatives);\n        scanf(\"%d\", &amp;entier);\n    }\n\n    printf(\"Bravo ! Tu as trouve %d en %d coup(s) !\", entierATrouver, tentatives);\n\n    return 0;\n}\n</code></pre> Ecrire un programme qui affiche un d\u00e9compte de 30 secondes. <pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n\n    time_t current = time(NULL);\n    time_t previous = current, stop = current + 30;\n    int remaining = 30;\n\n    while ((current = time(NULL)) &lt;= stop) {\n        if (current - previous == 1) {\n            previous = current;\n            remaining--;\n            printf(\"%d\\n\", remaining);\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"commun/20_stages/","title":"Stages","text":""},{"location":"commun/20_stages/#carte-des-entreprises","title":"Carte des entreprises","text":"<p>Entreprises ayant accueilli ou \u00e9tant susceptibles d'accueillir des stagiaires BTS CIEL.</p>"},{"location":"commun/20_stages/#legende","title":"L\u00e9gende","text":"<ul> <li> <p>Industriels</p> </li> <li> <p>Prestataires de services (r\u00e9seaux et informatiques)</p> </li> <li> <p>Informatique de gestion</p> </li> <li> <p>Secteur public et associatif</p> </li> </ul>"},{"location":"commun/30_orientation/","title":"Orientation","text":""},{"location":"commun/30_videos/","title":"Vid\u00e9os","text":""},{"location":"commun/30_videos/#apprendre-a-apprendre","title":"Apprendre \u00e0 apprendre","text":""},{"location":"commun/40_logiciels/","title":"Logiciels","text":""},{"location":"commun/50_livres/","title":"Livres","text":""},{"location":"commun/50_livres/#sql","title":"SQL","text":"<ul> <li> <p>All SQL Cheatsheet</p> <p></p> </li> <li> <p>MySQL - Cheatsheet</p> <p></p> </li> <li> <p>SQL Commands</p> <p></p> </li> </ul>"},{"location":"commun/99_plusplus/","title":"Plus Plus","text":"<p>Que faire quand j'ai fini les exercices en avance ???</p> <p></p> <p>Voici quelques pistes :</p> <ul> <li> <p>Gonfler mon score PIX</p> </li> <li> <p>Pr\u00e9parer la Nuit du code </p> </li> <li> <p>D\u00e9couvrir l'OSINT et s'entra\u00eener pour Passe ton hack d'abord_</p> </li> <li> <p>M'entra\u00eener \u00e0 la programmation avec les challenges Prologin</p> </li> </ul>"}]}